[BaseClass]
ClassDescription = "DO NOT CREATE OBJECTS OF THIS TYPE.  BAD THINGS **WILL** HAPPEN!!!!"
Name = "Name of the object.  The name is NOT case sensitive.  Multiple objects can share the same name (however, this WILL cause problems in NOLF)."
Pos = "Position of the object in world coordinates."
Rotation = "Rotation of the object in the world (i.e., Pitch, Yaw, Roll of the object)."
DamageProperties = "This is a subset of properties that define how the object deals with damage."
HitPoints = "This is the number of hitpoints the object has when it is first created in the world."
MaxHitPoints = "This is the maximum number of hitpoints that the object can ever have."
Armor = "This is the amount of armor that the object has when it is created."
MaxArmor = "This is the maximum amount of armor that the object can ever have."
DamageTriggerCounter = "This specifies how many times the object must be damaged before the damage message will be sent."
DamageTriggerTarget = "This is the name of the object that will receive the DamageTriggerMessage."
DamageTriggerMessage = "This is the command string that is sent when the object receives damage from any source."
DamageTriggerNumSends = "This specifies how many times the damage message will be sent."
DamagerMessage = "This is the command string that is sent to the object that caused the damage."
DeathTriggerTarget = "This is the name of the object that will receive the DeathTriggerMessage."
DeathTriggerMessage = "This is the command string that is sent when the object has been destroyed."
PlayerDeathTriggerTarget = "This is the name of the object that receives the PlayerDeathTriggerMessage."
PlayerDeathTriggerMessage = "This is the command string that is sent when the player destroys the object."
KillerMessage = "This command string is sent to the object that destroys this object."
CanHeal = "Toggles whether the object can be healed."
CanRepair = "Toggles whether the object can be repaired."
CanDamage = "Toggles whether the object can be damaged."
Mass = "This value sets the mass of the object within the game."
NeverDestroy = "Toggles whether the object can be destroyed."
Visible = "This flag toggles the visibility of the object."

[Brush]
Pos = "Position of the center of the brush in world coordinates."
Rotation = "Rotation of the brush in the world (i.e., Pitch, Yaw, Roll of the object)."
Solid = "Toggles the brush between solid and non-solid."
Nonexistant = "If this flag is set to true, the brush will be removed during preprocessing."
Invisible = "This flag will set the brush to be invisible."
Translucent = "If bound to a WorldModel, setting this brush to true will tell the brush to use the alpha channel of an applied texture to set its transparent properties."
SkyPortal = "Setting this flag tells the brush to be a portal to the skypointer."
FullyBright = "This flag sets the brush to be rendered at its full saturation."
FlatShade = "This flag tells the brush to be rendered using flat shading, which, as the name implies, lights each surface one flat shade based on an average of the light across the entire face."
GouraudShade = "This flag tells the brush to be rendered using Gouraud shading, which is essentially vertex lighting. You may experience some “swimming” effects with Gouraud shaded surfaces if the light value on a given surface is greatly different from that on another."
LightMap = "This flag tells the brush to be rendered using lightmapping, which, while slower to render than Gouraud shading or flat shading, looks more natural. This should be your default in most indoor structures."
Subdivide = "Overrides the T-Junction fixing so that it doesn't split up this brush."
HullMaker = "Setting this brush to true tells the processor that this brush is a HullMaker. A hullmaker is a 'brush' that creates a manual hull, which is used by the visibility list to determine what you can see from any given point in a level. Carefully placed hullmakers can reduce polycounts, overdraw, and texture memory usage. A hullmaker must be a zero thickness brush, which you can create in geometry mode."
AlwaysLightMap = "Ths property is not used."
DirectionalLight = "Adds global sunlighting to lighting calculations.  Note that this will also ignore the vertex normals when calculating vertex colors."
Portal = "Used in conjunction with doors to create dynamic hullmakers. When the door is closed, nothing beyond it will be drawn. Like HullMakers, this must be a zero thickness brush."
NoSnap = "The processor automatically snaps vertices to the grid when it processes a level. If geometry is built off the grid, this can result in leaks and visual anomolies. Setting this flag to true on brushes that have points off the grid will tell the processor to leave the points where they are and not to snap them."
SkyPan = "Any brush with this flag set can be affected by skypanning (i.e. cloud shadows). In order for it to work, the brush can’t have lightmapping. Either Gouraud shading or flat shading will work fine."
Additive = "Uses an add blend when drawing a translucent worldmodel instead of an alpha blend.  Note that this property controls the rendering of an entire object, so if a translucent worldmodel doesn't have this flag set to the same value on all attached brushes, the results are unpredictable."
TerrainOccluder = "This flag sets the brush as a TerrainOccluder. A TerrainOccluder is a brush used to block visibility. It acts as a 'vis hotel'. The vis goes in, but it doesn't come out."
TimeOfDay = "This property was not used in the creation of NOLF and is not supported."
VisBlocker = "Setting this flag to true tells the processor that this brush is a VisBlocker brush. VisBlockers are zero thickness brushes that block vis no matter what."
NotAStep = "Setting this flag to true will tell the physics of the character to not try to stair step onto this brush. It is particularly useful for railings on stairs."
DetailLevel = "All brushes that form the outside shell of the world and those used to block vis should be set to detail level 0. All other brushes should be set to detail level 1. Brushes set to detail level 1 are not figured into the vis."
Effect = "A surface effect applied to a brush. See EffectParam for usage. some effects are Pan, Rotate, and Warble."
EffectParam = "For the Pan effect, the values you would enter are the <left\right panspeed> and <up\down panspeed> in texels per second. For the Rotate effect, the values you would enter are the <texture offset center> and <degrees per second>. For the Warble effect, the values you would enter are the <extents for all three vectors as 'A' being the minimum, 'B' being the maximum, and 'C' being the center> and <x speed> and <y speed> in radians per second. These effects are unpredictible at best."
FrictionCoefficient = "This property was not used in the creation of NOLF and is not supported."

[AmmoBox]
Scale = "This value changes the size of the object. It is a multiplicative value based on the original size of the object. You can scale an object in all three vectors independently. The default scale is 1.0 1.0 1.0."
Visible = "This property toggles the objects visibility on and off."
Shadow = "This property determines whether the object will cast a shadow or not."
PickupTriggerTarget = "The name of the object that should receive the PickupTriggerMessage."
PickupTriggerMessage = "This is the message that is sent when the player picks up the AmmoBox."
Bounce = "This property was not used in the creation of NOLF and is not supported."
RespawnSound = "Sound file that is played when the AmmoBox powerup respawns."
PlayerTeamFilter = "This allows you to make AmmoBoxes available to specific teams."
MoveToFloor = "Whether or not the object is moved to the floor when created in the game."
Filename = "The .abc model file used to represent the AmmoBox in the game."
Skin = "The .dtx texture file used on the model."
RespawnTime = "The amount of time in seconds before a powerup reappears after being picked up by a player."
AmmoTypeX = "A pull down menu used to choose a type of ammunition to be contained within the powerup."
AmmoCountX = "The quantity of ammunition."

[Camera]
ActiveTime = "If you want a camera to return to the player after a set period, give the camera a time-limit property."
AllowPlayerMovement = "Choose whether the player can move or not while the camera's running. Obviously, in most cases the camera should keep players still."
OneTime = "Keeps the camera from being activated after it's been run once, even if it's triggered again."
Type = "In Monolith games, there are two types of camera: full-screen and cinematic letterboxed."
StartActive = "Allows you to have the camera start when the level starts for an intro cutscene."
IsListener = "If you want the camera to relay sounds it hears to the player instead of the sounds at the player's location, use this flag."

[CinematicTrigger]
RemoveBadAI = "If set to true, all AI of 'bad' alignment will be removed from the world when the CinematicTrigger is triggered on."
StartOn = "If set to true, the CinematicTrigger will automatically be triggered on when the level begins."
DialogueStartTriggerTarget = "The name of the object that should receive the DialogStartTriggerMessage."
DialogeDoneTriggerMsg = "A message sent at the end of the dialogue. This message is only sent if the dialog finishes naturally. If the player interrupts the dialogue, this message does not get sent."
DialogueDoneTriggerTarget = "The name of the object that should receive the DialogueDoneTriggerMsg."
DialogueStartTriggerMsg = "A message sent at the beginning of the dialogue."
CleanUpTriggerMsg = "This message is sent when the CinematicTrigger ends naturally, or when it ends as a result of being interrupted by the player."
StartDialogueTriggerMsg1 = "A message sent at the beginning of the individual line of dialogue."
WhoPlaysDialogue1 = "The unique name of the character that is to speak the line of dialogue."
Decisions1 = "This field is used when the player can choose between two or more lines of dialogue. Put two or more IDs on this line, delimited by semi-colons. These IDs, which reference lines of text in the clientres.dll, are the player's possible responses. They appear in a pop-up box, along with the text of the preceding dialogue."
Dialogue1 = "The ID number of the .wav file containing the line of dialogue to be played."
StartDialogueTriggerTarget1 = "The name of the object that should receive the StartDialogueTriggerMessage."
StartDialogueTriggerMessage1 = "A message sent at the beginning of the individual line of dialogue."
WhoPlaysDecisions1 = "When decision IDs are specified, the corresponding sound files will play in the player's head by default. This field allows you to specify a different speaker. You'll need to specify a speaker for each decision ID. For example, if Decisions5 lists, '6001;6002', WhoPlaysDecisions5 would need to be 'Matilda;Matilda' if you wanted Matilda to speak the answer."
Delay1 = "A period of time in seconds before the numerically corresponding line of dialog is delivered."
CanSkip = "If set to true, the player can interrupt the cinematic trigger by pressing the action key in the game. If this flag is set to false, the cinematic trigger cannot be interrupted."
OneTimeOnly = "This flag specifies whether this is trigger can be activated multiple times, or only once."
StartActive = "If set to true, the CinematicTrigger will automatically be triggered on when the level begins."
CleanUpTriggerTarget = "The name of the object that should receive the CleanUpTriggerMessage."
AllWindows = "If set to true, this will override the individual Window1-Window20 properties. This is a convenience to make it easier to create cinematics that always use windows."
LeaveCameraOnWhenDone = "This tells the CinematicTrigger camera to remain active after the CinematicTrigger ends. This is useful to avoid the flash to first person perspective that can happen when the cinematic is at the end of the level."
Dialog = "The Dialog flag is a subset of properties used to define conversation between characters in the game."
Camera = "The Camera flag is a subset of properties that define the characteristics of the camera object created by the CinematicTrigger object."
CreateCamera = "Determines whether or not the CinematicTrigger object automatically creates a camera or not."
ActiveTime = "If you want a camera to return to the player after a set period, give the camera a time-limit property."
AllowPlayerMovement = "Choose whether the player can move or not while the camera's running. Obviously, in most cases the camera should keep players still."
Type = "In Monolith games, there are two types of camera = full-screen and cinematic letterboxed."
IsListener = "If you want the camera to relay sounds it hears to the player instead of the sounds at the player's location, use this flag."
KeyFramer = "The KeyFramer flag is a subset of properties that define the characteristics of the KeyFramer object created by the CinematicTrigger object."
CreateKeyFramer = "Determines whether or not the CinematicTrigger object automatically creates a KeyFramer object or not."
BaseKeyName = "The base name of the keys that the KeyFramer object will follow."
PushObjects = "Determines whether or not the KeyFramer will push objects in the world."
StartPaused = "This flag works in conjunction with the StartActive flag. This flag will tell the KeyFramer to begin in the paused state."
Looping = "If set to true the keyframer will continuously run through the key path, returning to the first key in the sequence when reaching the last."
AlignToPath = "If set to true, the keyframer will attempt to orient, and maintain, it's forward facing vector (+X) down the forward vector of the key path."
IgnoreOffsets = "Tells the KeyFramer whether or not to maintain offsets of position and rotation between the object being keyframed and the keys that make up the path. If set to true, the keyframed object will acquire the exact position and rotation of the keys that make up the key path."
TargetName = "You specify a prop, worldmodel, or model in this field. The KeyFramer will attempt to continually point it's forward facing vector at this object as it travels along its key path."
TargetOffset = "You may enter a target offset in this field. It is entered in the form of x,y,z offset in Dedit units."
ActiveSound = "The path to any .wav file may be entered here. The sound will be played while the KeyFramer object is active."
SoundRadius = "The audible range of the ActiveSound entered in Dedit units."
RotationWave = "This property was not used in the creation of NOLF and is not supported."
WaveForm = "The WaveForm flag is a subset of properties that define the movement characteristics of the KeyFramer object created by the CinematicTrigger object."
TotalPathTime = "This is the approximate time in seconds that it will take for the KeyFramer object to complete it's travel down the key path."
Linear = "The KeyFramer object maintains a steady speed from the start to the end of the key path."
Sine = "The KeyFramer object accelerates to speed from the start, and decelerates to a stop at the end of the key path."
SlowOff = "The KeyFramer object decelerates at the end of the key path."
SlowOn = "The Keyframer object accelerates from the start of the key path."
Lighting = "This is where you would enter the name of a KeyFramerLight if the keyframed object were going to cast moving shadows."

[ClientLightFX]
OnlyLightWorldFlag = "If you don't want this light to illuminate models, set this flag to true. This will tell it to light only world geometry."
RadiusWaveform = "The waveform that determines how the light cyles between RadiusMin, and RadiusMax. Here are some of the valid values used in NOLF. 0=No waveform, light will not cycle. 1=Square waveform--Light will cycle instantly between Min to Max values. 2=Saw waveform--Light will cycle from Min to Max along linear values. 3=Ramp Up--Light will ramp up from Min to Max values and then reset directly to Min. 4=Ramp Down--Light will ramp down from Max to Min values and then reset to Max. 5=Sine--Light value follows a Sine wave path between Min and Max. 6=Flicker 1--Light follows a flicker pattern that only has Min and Max values. 7=Flicker 2--Light follows a more 'organic' flicker pattern. 8=Flicker 3--Mostly on flicker -- good for flaky fluourescents. 9=Flicker 4--Mostly off flicker -- good for really flaky fluourescents. 10=Strobe--Light pulses from Max to Min. 11=Search--Light follows a Sine pattern with some wait time in the Min state."
IntensityWaveform = "The wave form that determines how the light cyles between IntensityMin, and IntensityMax. Here are some of the valid values used in NOLF. 0=No waveform, light will not cycle. 1=Square waveform--Light will cycle instantly between Min to Max values. 2=Saw waveform--Light will cycle from Min to Max along linear values. 3=Ramp Up--Light will ramp up from Min to Max values and then reset directly to Min. 4=Ramp Down--Light will ramp down from Max to Min values and then reset to Max. 5=Sine--Light value follows a Sine wave path between Min and Max. 6=Flicker 1--Light follows a flicker pattern that only has Min and Max values. 7=Flicker 2--Light follows a more 'organic' flicker pattern. 8=Flicker 3--Mostly on flicker -- good for flaky fluourescents. 9=Flicker 4--Mostly off flicker -- good for really flaky fluourescents. 10=Strobe--Light pulses from Max to Min. 11=Search--Light follows a Sine pattern with some wait time in the Min state."
HitPoints = "This property was not used in the creation of NOLF and is not supported."
LightSwitch = "If set to true, the light begins in the on position. If set to false, the light begins in the off position."
LifeTime = "For lights that you only want to operate for a specified period, you can specify a time after which the light shuts off."
Color = "The color that the light will emit. You select the color from Windows' color picker dialog."
IntensityMin = "This value set the lowest light intensity level that the light will cycle to. It uses the same type of values as BrightScale for regular lights, where .25 would be very dim and 1.5 would be intensely bright. Note that intensity values are not tied to their corresponding radius values, so you could easily make a light that starts off dim and large, and then contracts to become bright but tiny. Likewise, you could set the intensity and radius of the light to be out of phase with one another."
IntensityMax = "This value set the highest light intensity level that the light will cycle to. Uses the same type of values as BrightScale for regular lights, where .25 would be very dim and 1.5 would be intensely bright."
IntensityFreq = "This value specifies the frequency that the IntensityWaveform follows. The higher the value, the faster the light will cycle. Fractional values are accepted."
IntensityPhase = "This value specifies the phase offset that the IntensityWaveform follows. Values are in degrees between 0 and 360. A value of 180 will cycle exactly out of phase with a ClientLightFX with the same frequency and an offset of 0. ClientLightFX objects with the same IntensityFreq and IntensityPhase will play in sync."
DirLight = "Setting this flag to true will change the ClientLightFX from a point light to a directional light."
DirLightRadius = "This value sets the falloff radius of the directional light in Dedit units."
FOV = "This value sets the field of view of the directional light in degrees."
RadiusMin = "This value sets the smallest falloff radius that the light will cycle to."
RadiusMax = "This value sets the largest falloff radius that the light will cycle to."
RadiusFreq = "Length of time for the light to complete one cycle from RadiusMin to RadiusMax."
RadiusPhase = "Determines where in the light's cycle from RadiusMin to RadiusMax the light begins, measured in degrees from 0 to 360. If you wanted to do police lights that strobe out of sync from one another, you'd set this value to 0 for the first and 180 for the second. When the first light was just starting up, the second would be halfway done and vice versa."
RampUpSound = "You could specify a sound for the light that is played as the light turns on for things like a switched light source or a lighting flash."
RampDownSound = "See RampUpSound."
CastShadowsFlag = "This flag toggles whether or not the light will cast shadows."
SolidLightFlag = "This flag tells the light to use the 'flashlight' method for light."
DontLightBackfacingFlag = "If DontLightBackfacingFlag is set to true, the light will not light backfacing polies. Useful to keep lights from shining through walls, for instance."
UseLightAnims = "If set to true, the ClientLightFX object will create lightmaps when the level is processed. If set to false, no lightmaps will be created and the lighting will be accomplished using dynamic lights at runtime."
UseShadowMaps = "If the UseLightMaps flag has been set to true, this flag will determine what kind of light maps are generated when the level is processed. If set to false, high quality lightmaps the same as those used to lightmap the rest of the world geometry will be created. If set to true, the lightmaps created will be a rougher looking version that takes up about a tenth the size of memory."

[Controller]
Target0 = "The name of an object you wish to control."

[DemoSkyWorldModel]
SkyDims = "Takes the X, Y and Z dimensions of the DemoSkyWorldModel. These need to be large enough to encompass all geometry that you plan to show in your skybox. Only one object per level should have its Dims set."
Flags = "This property was not used in the creation of NOLF and is not supported."
Index = "The object's index determines the order in which it's drawn. Objects with low Index values are rendered first (and thus at the back), while objects with a higher index are rendered last and at the front."
InnerPercentX = "Determines the amount of player motion that's passed on to the camera rendering the sky. If the value is set to 0.100, only ten percent of the player's movement will be passed on to the camera. Camera movement is used to simulate parallax movement of objects in the sky. Be sure that if you give the cameras a lot of motion, you'll need to make your skybox large enough that the camera doesn't move outside it."
InnerPercentY = "Determines the amount of player motion that's passed on to the camera rendering the sky. If the value is set to 0.100, only ten percent of the player's movement will be passed on to the camera. Camera movement is used to simulate parallax movement of objects in the sky. Be sure that if you give the cameras a lot of motion, you'll need to make your skybox large enough that the camera doesn't move outside it."
InnerPercentZ = "Determines the amount of player motion that's passed on to the camera rendering the sky. If the value is set to 0.100, only ten percent of the player's movement will be passed on to the camera. Camera movement is used to simulate parallax movement of objects in the sky. Be sure that if you give the cameras a lot of motion, you'll need to make your skybox large enough that the camera doesn't move outside it."

[DirLight]
ClipLight = "Determines whether the light stops when it hits walls. Sometimes, although rarely, it's useful to have a light pass through walls after it hits them."
LightObjects = "You can use this flag to decide whether or not this light affects model objects at all. Sometimes it's beneficial to have specific lights illuminate models that aren't the same color or setting as the rest of world lighting."
LightRadius = "Determines the total range of the light's effects. Anything outside this range isn't lit at all by this light."
FastLightObjects = "When TRUE, this light will only cast a very simplified light on models. If it's FALSE, the light will emit highly accurate light on the model."
InnerColor = "Determines the color of the light at the exact center of the Light object. Light falls off gradually from this center point."
OuterColor = "Determines the color of the light at the exact edge of its LightRadius. This is the color that the light fades to from its InnerColor. Can be useful if you want to stack lights together to get a special effect."
FOV = "Field Of View. Sets the angle within which the light actually emits. If FOV is 90 degrees, the light will fill a 90-degree arc around its center of aim."
BrightScale = "A multiplier that acts like a dimmer switch. If set to 1, the light will be normal brightness. If you set to 1.5, it will be half again as bright. At 0.5, the light will be half-bright."
Time = "This property was not used in the creation of NOLF and is not supported."

[DisplayMeter]
Phase1 = "This is a value that corresponds with a section of the bar meter that is displayed on the screen. When the value is achieved, the section of the bar is removed."
RemoveWhenEmpty = "This flag sets whether or not the bar meter should be removed from the screen when empty."

[DisplayTimer]
StartCommand = "This is the command string that is sent when the timer begins its count down."
EndCommand = "This is the command string that is sent when the timer finishes counting down to 0."
RemoveWhenDone = "By default the timer is removed when the time runs out.  If you want to reuse a timer set the RemoveWhenDone property to FALSE."

[Door]
IsKeyframed = "Is the door moved by a keyframer instead of its own internal mover? If it is you will want to set this flag to true. If you do not, impact effects will not move with the object. They will instead, hover in the air as the door object moves away from them."
Rayhit = "This flag toggles whether or not the object will be rayhit."
Chromakey = "Some textures create transparent and opaque areas defined by an alpha channel. Setting this flag to true tells the object to make use of this alpha mask."
ExplosionProperties = "This property was not used in the creation of NOLF and is not supported."
DebrisType = "Identifies the type of debris that will be spawned by the destruction of the object."
SurfaceOverride = "This field overrides the surface flags assigned to the textures on the brush or brushes that make up the door. This is particularly useful in correcting any unwanted behavior resulting from a brush having multiple textures with differing surface flags applied."
StateFlags = "StateFlags are a subset of properties that define the objects interaction with the player."
ActivateTrigger = "If set to true, the player can activate the object by pressing the use key. If the ActivateTrigger flag is set to false, the object will not be able to be activated by the player."
StartOpen = "Should the door begin in the open position?"
TriggerClose = "If set to true, the player can activate the object by pressing the use key. If the TriggerClose flag is set to false, the object will not be able to be activated by the player."
RemainsOpen = "Does the door require a trigger command or activation by the player to close instead of closing by itself?"
ForceMove = "If set to true, the object will not be stopped by the player or AI. Actually, it will move the player and the AI."
Visible = "This flag toggles the visibility of the object."
Solid = "This flag toggles whether or not the object is solid."
BlockLight = "Setting this flag to true will cause the object to block light and cast a shadow."
BoxPhysics = "In the engine, WorldModels like the Door object have two possible physics models. In the first, the player can walk on and touch every curve and corner of their surface. In the second, the player can only interact with a bounding box that surrounds all the brushes in the Door, just like the box you would get if you selected them in DEdit. For doors with a simple rectangular shape, this is preferred because it's cheaper to calculate. However, for a lot of objects, it's limiting. If you need a player to be able to shoot through the bars in a prison door, you will need BoxPhysics set to FALSE."
Locked = "You can make a door locked, and require it to receive an 'unlock' message from another object before it can be opened."
Speed = "Sets the speed of the door's slide in game units per second."
MoveDelay = "Amount of delay in seconds between the time the door is triggered to open and when it begins opening."
MoveDist = "Determines the distance the door will travel in DEdit units."
MoveDir = "Choose the direction the door will move in. Enter a 1, 0 or –1 for each of the X, Y and Z-axes."
SoundPos = "Allows you to override the position at which door sounds are played. Enter the x, y, and z coordinates of the desired sound position."
PortalName = "Enter the name of the Portal object for this door object."
OpenSound = "Sound to be played as the door starts moving while the door is opening."
CloseSound = "Sound to play when the door completes its path of motion when closing."
LockedSound = "Sound to play when the door is locked."
LoopSounds = "If set to true, the open and close sounds will loop while the door object is in motion."
SoundRadius = "This is the radius of the sound falloff measured in Dedit units."
OpenedCommand = "You may enter a command string here that will be sent every time the door completes its travel to the opened state."
ClosedCommand = "You may enter a command string here that will be sent every time the door completes its travel to the closed state."
LockedCommand = "You may enter a command string here that will be sent everytime the player activates the door while it is in the locked state."
OpenWaitTime = "This is the time that the door will remain open before closing automatically, and the amount of after being triggered open before it can be triggered again."
CloseWaitTime = "This is the amount of time before the door can be triggered again after being triggered closed."
ClosingSpeed = "This is the speed at which the door will close measured in Dedit units per second."
AITriggerable = "Setting this flag to true will tell the AI that this is a door that they will need to interact with in order to path find through this area. If this flag is set to false, the AI will ignore the objects existence."
Waveform = "Waveform is a subset of property flags that define the motion of the door object."
Linear = "The Door object maintains a steady speed from the start to the end of its path of travel."
Sine = "The Door object accelerates to speed from the start, and decelerates to a stop at the end of its path of travel."
SlowOff = "The Door object decelerates at the end of its path of travel."
SlowOn = "The door object accelerates from the start of its path of travel."
Attachments = "Using this field you can list objects, models, and worldmodels that will move with the door object while maintaining their relative position and rotation. This is commonly used to add prop door handles to doors."
RemoveAttachments = "If this property is set to true, attachments will be removed (i.e., disappear) when the door is removed (destroyed).  If this property is set to false, the attachments will receive 'destroy' messages and will be destroyed (if they are set up to respond to the destroy message)."
AttachDir = "This is the direction (and magnitude) away from the center of the door a ray is cast that looks for an object to attach to the door (when the door receives an Attach message)."
ShadowLights = "Doors and HingedDoors support lightmap animation when they open and close.  In order to use this, you need to place KeyframerLight objects to do the lighting, and enter their names in this field (light names are separated by semicolons)."
LightFrames = "This field defines how many lightmaps to use when creating the light animation of the door opening."
DoorLink = "Use this to link two doors together that you would like to open at the same time (i.e., Door1's DoorLink would be Door2, and Door2's DoorLink would be Door1).  NOTE--Only the opening of linked doors is supported. Each door may be closed individually."

[Breakable]
ImpactSoundRadius = "This is the radius of the ImpactSound falloff measured in Dedit units."
BreakTime = "This is the amount of time that the object will shake before it gives way."
BreakSound = "This is the sound made when the object is triggered to break."
BreakSoundRadius = "This is the radius of the BreakSound falloff measured in Dedit units."
ImpactSound = "The sound made when the object impacts with another surface after 'breaking'."
TouchActivate = "This flag toggles whether or not the object is activated by being touched by the player."
DestroyOnImpact = "This flag toggles whether or not the object is destroyed when it impacts the ground after falling."
DestroyAfterBreak = "This flag toggles whether or not the object is destroyed immediately after it has been triggered."
CrushObjects = "Setting this flag to true tells the object to cause damage to any player it might hit when it falls."
ScreenShakeAmount = "Values in the x,y,z vectors that define the severity of the screen shake that occurs when the breakable object is triggered."
Physics = "This is a subset of properties that define the motion of the Breakable object when it is triggered."
FallVelocity = "Defines the speed at which the object falls."
RotationTime = "This is the time it takes for the Breakable object to rotate 360 degrees."
AdjustPitch = "If AdjustPitch is true, the Breakable's pitch will be rotated by 'PitchDelta' degrees while shaking."
PitchDelta = "This is the number of degrees the breakable will pitch while shaking."
AdjustYaw = "If AdjustYaw is true, the Breakable's yaw will be rotated by 'YawDelta' degrees while shaking."
YawDelta = "This is the number of degrees the breakable will Yaw while shaking."
AdjustRoll = "If AdjustRoll is true, the Breakable's roll will be rotated by 'RollDelta' degrees while shaking."
RollDelta = "This is the number of degrees the breakable will roll while shaking."
AITriggerable = "This flag toggles whether or not the Breakable object will be able to be triggered by an AI."

[HingedDoor]
OffWaitTime = "This is the number of seconds that the Swtch will remain in the off position."
OffMoveSpeed = "This is the rate of travel defined in DEdit units per second when the switch is activated to the off position."
OnMoveSpeed = "This is the rate of travel defined in DEdit units per second when the switch is activated to the on position."
OnWaitTime = "This is the number of seconds that the Swtch will remain in the on position."
RotationPoint = "This is a specific set of world coordinates that will act as the point that the door object hinges around."
OpenAway = "If this flag is set to true, the door will always open away from the player regardless of the value in the RotationAngles dialogue."
RotationAngles = "This is a set of positive or negative values in the x,y, and z axis that define the degrees of rotation."

[Switch]
OnSound = "This is the sound that will be played when the Switch object is activated to the on position."
OnTriggerTarget = "This is the name of the object that will receive the OnTriggerMessage."
OnTriggerMessage = "This is the command string that is sent when the Switch object is triggered on."
OffSound = "This is the sound that will be played when the Switch object is activated to the off position."
OffTriggerTarget = "This is the name of the object that will receive the OffTriggerMessage."
OffTriggerMessage = "This is the command string that is sent when the Switch object is triggered off."

[EventCounter]
Event1IncToValCmd = "This is the command string that will be sent if the EventValue for this Event has been reached through incremental ascension."
Event1DecToValCmd = "This is the command string that will be sent if the EventValue for this Event has been reached through incremental descent."
Event1Value = "This is the numeric value at which either the EventIncToValCmd or EventDecToValCmd will be sent."
StartingValue = "This is the base value that the object will start with."
Event1 = "This is a subset of properties that define the first of five sets of possible events."
EventValue = "This is the numeric value at which either the EventIncToValCmd or EventDecToValCmd will be sent."
EventIncToValCmd = "This is the command string that will be sent if the EventValue for this Event has been reached through incremental ascension."
EventDecToValCmd = "This is the command string that will be sent if the EventValue for this Event has been reached through incremental descent."

[Explosion]
ImpactFXName = "This is a pull down that allows you to choose the type of explosion effect that will be used."
DamageType = "This is a pull down used to identify what kind of damage will be inflicted upon anyone caught within the DamageRadius of the Explosion object when it is triggered."
DamageRadius = "This the radius measured in Dedit units in which a character will take damage from the explosion."
MaxDamage = "This field defines the maximum amount of damage that will be inflicted upon a character caught within the DamageRadius of the explosion when it is triggered."
RemoveWhenDone = "This flag toggles whether or not the explosion is removed after being triggered. Sometimes you will want to trigger an Explosion object repeatedly. In which case you would set this flag to false."

[Mine]
MoveToFloor = "This flag determines whether or not the mine object will be placed at the level of the surface below it, or if it will remain exactly where placed."
Dims = "The Dims define the 'trigger area' of the Mine object. It is an area defined in DEdit units as a box around the center of the Mine object. If the player enters this defined area, the Mine explodes."
ActivateDelay = "This is a delay in seconds between the time that the player triggers the mine, and the time that it actually explodes."

[Fire]
Radius = "This defines the outer extent of the fire effects."
StartOn = "This flag determines whether or not the Fire object begins in the on position."
Light = "This is a subset of properties that define the light effects created by the fire object."
CreateLight = "Determines whether or not a dynamic light will automatically be created for the Fire object."
LightColor = "This is the standard windows color picker dialogue that allows you to choose the color of the firelight."
LightRadius = "The falloff radius of the dynamic light in Dedit units."
LightPhase = "This specifies the phase offset of the light. Valid values are those between 0 and 360."
LightFrequency = "This value changes the rate at which the light flickers."
LightOffset = "Values will offset the position of the dynamic light created."
Sound = "This is a subset of properties that define the Sound effects created by the fire object."
CreateSound = "Determines whether or not the Fire object will play a sound."
SoundRadius = "This is the sound falloff radius in Dedit units."
Smoke = "This is a subset of properties that define the Smoke effects created by the fire object."
CreateSmoke = "This flag toggles whether or not the Fire object will create smoke effects."
SmokeOnly = "If this flag is set to true only smoke effects will be created."
BlackSmoke = "If this flag is set to true the smoke will be black instead of the default grey."
CreateSparks = "This flag toggles whether or not the fire object will create sparks."

[GameStartPoint]
GameType = "This is a dropdown that allows you to set what gameplay types this start point will be used in."
PlayerModel = "This is a dropdown menu that allows you to choose the model player model that will be loaded at the beginning of the level."
PhysicsModel = "This dropdown menu allows you to choose what physics model is loaded at the beginning of the level."
Team = "This dropdown menu allows you to assign specific start points to specific teams in multiplayer maps."
TriggerTarget = "This is the name of the object that will receive the TriggerMessage command string."
TriggerMessage = "This is the command string that will be sent to the TriggerTarget at level load time."

[GearItem]
Scale = "This value changes the size of the object. It is a multiplicative value based on the original size of the object. You can scale an object in all three vectors independently. The default scale is 1.0 1.0 1.0."
Visible = "This property toggles the objects visibility on and off."
Shadow = "This property determines whether the object will cast a shadow or not."
PickupTriggerTarget = "The name of the object that should receive the PickupTriggerMessage."
PickupTriggerMessage = "This is the message that is sent when the player picks up the GearItem."
Bounce = "This property was not used in the creation of NOLF and is not supported."
RespawnSound = "Sound file that is played when the GearItem powerup respawns."
PlayerTeamFilter = "This allows for the designation of Items that can only be used by a specific team."
MoveToFloor = "Whether or not the object is moved to the floor when created in the game."
RespawnTime = "The amount of time in seconds before a powerup reappears after being picked up by a player."
GearType = "A pull down menu used to choose the type of GearItem the power up will be."

[Group]
Object1 = "This is the name of the object that will receive the command string that is sent to the Group object."

[Key]
LightFrames = "This value sets how many frames of light animation are created along the path to this key from the previous key in the key path."
BPrintMessage = "This field is not supported by NOLF."
TimeStamp = "This is the time that it takes for the KeyFramer to get to this key from the previous key in the key path."
SoundName = "The path to any .wav file may be entered here. The sound will be played when the KeyFramer arrives at this Key on the key path."
SoundRadius = "The audible range of the sound entered in the SoundName field, as measured in Dedit units."
MessageTarget = "The name of the object that will receive the MessageName command string."
MessageName = "This is the message that is sent to the MessageTarget when the KeyFramer arrives at this key."
BezierPrev = "When making a key path it is possible to create Bezier Curves. While in Object mode, if you select one of the Keys in a key path, press the P key and drag the mouse while pressing the LMB, you will pull out the Bezier handle on the 'in' side of the key. This field denotes the world coordinate position of that handle."
BezierNext = "After pulling out the first Bewzier handle, you can repeat the process to pull out the bezier handle on the 'out' side of the key. This field denotes the world coordinate position of that handle."

[KeyFramer]
ObjectName = "This feild contains the name of the object or worldmodel that is to be affected by the keyframer. This feild can contain the names of several objects and/or worldmodels seperated by semicolons."
BaseKeyName = "The base name of the keys that the KeyFramer object will follow. The first key must be named with the base name followed by 0. All subsequent keys must be named with the base name followed by two-digit increments. For example, if the BaseKeyName was 'Base', the keys would be named Base0, Base01, Base02, Base03, etc."
PushObjects = "Determines whether or not the KeyFramer will push objects in the world."
StartActive = "If set to true, the KeyFramer will begin active."
StartPaused = "This flag works in conjunction with the StartActive flag. This flag will tell the KeyFramer to begin in the paused state if active."
Looping = "If set to true the keyframer will continuously run through the key path, returning to the first key in the sequence when reaching the last."
AlignToPath = "If set to true, the keyframer will attempt to orient, and maintain, it's forward facing vector (positive X) down the forward vector of the key path."
IgnoreOffsets = "Tells the KeyFramer whether or not to maintain offsets of position and rotation between the object being keyframed and the keys that make up the path. If set to true, the keyframed object will acquire the exact position and rotation of the keys that make up the key path."
TargetName = "You can specify a prop, worldmodel, or model in this field. The KeyFramer will attempt to continually point it's forward facing vector at this object as it travels along its key path."
TargetOffset = "You may enter a target offset in this field. It is entered in the form of x,y,z offset in Dedit units."
ActiveSound = "The path to any .wav file may be entered here. The sound will be played while the KeyFramer object is active."
SoundRadius = "The audible range of the ActiveSound entered in Dedit units."
RotationWave = "This property was not used in the creation of NOLF and is not supported."
WaveForm = "The WaveForm flag is a subset of properties that define the movement characteristics of the KeyFramer object."
TotalPathTime = "This is the approximate time in seconds that it will take for the KeyFramer object to complete it's travel down the key path."
Linear = "The KeyFramer object maintains a steady speed from the start to the end of the key path."
Sine = "The KeyFramer object accelerates to speed from the start, and decelerates to a stop at the end of the key path."
SlowOff = "The KeyFramer object decelerates at the end of the key path."
SlowOn = "The Keyframer object accelerates from the start of the key path."
Lighting = "This is where you would enter the name of a KeyFramerLight if the keyframed object were going to cast moving shadows."

[KeyFramerLight]
DirLight = "Setting this flag to true will make the light perform as a DirLight instead of a point light."
DirLightRadius = "This value sets the falloff radius of the directional light in Dedit units."
FOV = "This value sets the field of view of the directional light in degrees."
LightRadius = "Determines the total range of the light's effects. Anything outside this range isn't lit at all by this light."
InnerColor = "Determines the color of the light at the exact center of the Light object. Light falls off gradually from this center point."
OuterColor = "Determines the color of the light at the exact edge of its LightRadius. This is the color that the light fades to from its InnerColor. Can be useful if you want to stack lights together to get a special effect."
UseShadowMaps = "If the UseLightMaps flag has been set to true, this flag will determine what kind of light maps are generated when the level is processed. If set to false, high quality lightmaps the same as those used to lightmap the rest of the world geometry will be created. If set to true, the lightmaps created will be a rougher looking version that takes up about a tenth the size of memory."

[Light]
ClipLight = "This flag determines whether or not the light will be stopped by WorldGeometry, or pass right through."
LightObjects = "This flag determines whether or not the light will light models."
FastLightObjects = "When TRUE, this light will only cast a very simplified light on models. If it's FALSE, the light will cast more accurate light on the model."
LightRadius = "Determines the total range of the light's effects. Anything outside this range isn't lit at all by this light."
LightColor = "Determines the color of the light at the exact center of the Light object. Light falls off gradually from this center point."
OuterColor = "Determines the color of the light at the exact edge of its LightRadius. This is the color that the light fades to from its InnerColor. Can be useful if you want to stack lights together to get a special effect."
BrightScale = "A multiplier that acts like a dimmer switch. If set to 1, the light will be normal brightness. If you set to 1.5, it will be half again as bright. At 0.5, the light will be half-bright."
Time = "This property was not used in the creation of NOLF and is not supported."

[Lightning]
AlphaLifetime = "This is how long it takes to change between min and max alpha values."
Lifetime = "This value is the amount of time the Lightning remains visible on the screen."
EndPos = "These are the world coordinates where the lightning will strike. The bolt will start at the position where the object is placed, and end here."
StartOn = "This flag determines whether the lightning object begins in the on position."
OneTimeOnly = "This flag determines whether the lightning will be able to be triggered once, or repeatedly."
LifeTime = "This value is the amount of time the Lightning remains visible on the screen."
AlphaLifeTime = "This is how long it takes to change between min and max alpha values."
MinDelayTime = "This value sets the minimum amount of time between random Lightning strikes."
MaxDelayTime = "This value sets the maximum amount of time between random Lightning strikes."
Perturb = "This value sets the amount of random deviation there will be in the path of the Lightning between its origin and EndPos. Higher numbers create a wilder effect while lower numbers create a straighter bolt."
NumSegments = "This value sets the number of steps in the Lightning bolt."
PlaySound = "This flag toggles whether the Lightning object will make a sound when it is triggered."
SoundRadius = "This is the audible falloff radius for the Lightning sound measured in DEdit units."
Texture = "This field contains the .dtx file to be used as the texture for the Lightning bolt."
InnerColorStart = "The Lightning effect cross fades colors from the core to the edges of the Lightning bolt in four stages. This color would be the very core of the bolt, the first stage."
InnerColorEnd = "This would be the second stage."
OuterColorStart = "This would be the color of the third stage."
OuterColorEnd = "This would be the color of the fourth and outermost edge of the Lightning bolt."
AlphaStart = "Relative opacity at the creation point of the lightning bolt."
AlphaEnd = "Relative opacity at the end point of the lightning bolt."
Additive = "This flag toggles the use of the Additive blending mode."
Multiply = "This flag toggles the use of the Multiply blending mode."
DynamicLight = "The DynamicLight flag is a subset of properties that define the characteristics of the dynamic light created by the Lightning object."
CreateLight = "This flag determines whether or not the Lightning object will automatically create a Dynamic Light."
LightColor = "This is the color of the light that the Lightning object will create."
LightRadius = "This is the falloff radius for the Dynamic Light created by the Lightning object as measured in Dedit units."
WidthInfo = "The WidthInfo flag is a subset of properties that further define the appearance of the Lightning bolt created by the Lightning object."
MinWidth = "This field defines the width of the Lightning bolt at its narrowest point."
MaxWidth = "This field defines the width of the Lightning bolt at its widest point."
BigToSmall = "Setting this flag to true will create a Lightning bolt that begins wide, and becomes narrow at its end point."
SmallToBig = "Setting this flag to true will create a Lightning bolt that begins narrow, and becomes wide at its end point."
SmallToSmall = "Setting this flag to true will create a Lightning bolt that begins and ends narrow, becoming wide at its mid point."
Constant = "Setting this flag to true will create a Lightning bolt that maintains a constant width for the length of its travel."

[ModItem]
Scale = "This value changes the size of the object. It is a multiplicative value based on the original size of the object. You can scale an object in all three vectors independently. The default scale is 1.0 1.0 1.0."
Visible = "This property toggles the objects visibility on and off."
Shadow = "This property determines whether the object will cast a shadow or not."
PickupTriggerTarget = "The name of the object that should receive the PickupTriggerMessage."
PickupTriggerMessage = "This is the message that is sent when the player picks up the ModItem."
Bounce = "This property was not used in the creation of NOLF and is not supported."
RespawnSound = "Sound file that is played when the ModItem powerup respawns."
PlayerTeamFilter = "This allow for the designation of ModItems that can only be used by a specific team."
MoveToFloor = "Whether or not the object is moved to the floor when created in the game."
RespawnTime = "The amount of time in seconds before a powerup reappears after being picked up by a player."
ModType = "A pull down menu used to choose the type of ModItem the power up will be."

[ObjectLight]
LightRadius = "Determines the total range of the light's effects. Anything outside this range isn't lit at all by this light."
FastLightObjects = "When TRUE, this light will only cast a very simplified light on models. If it's FALSE, the light will cast more accurate light on the model."
LightColor = "Determines the color of the light at the exact center of the Light object. Light falls off gradually from this center point."
OuterColor = "Determines the color of the light at the exact edge of its LightRadius. This is the color that the light fades to from its InnerColor. Can be useful if you want to stack lights together to get a special effect."
BrightScale = "A multiplier that acts like a dimmer switch. If set to 1, the light will be normal brightness. If you set to 1.5, it will be half again as bright. At 0.5, the light will be half-bright."

[ObjectRemover]
GroupsToKeep = "This value determines how many of the groups to keep. The object will draw from the entered groups of objects and remove all but ""this"" number of groups."
Groups0and1 = "This flag is a subset of two of the groups that the ObjectRemover can choose to keep or discard."

[ParticleSystem]
ParticleLifetime = "How long will each particle last in the world after it's created?"
StartOn = "Does the particle system start when the level starts, or must it be triggered?"
ParticleFlags = "ParticleFlags determine the behavior of the particles. Some valid values are Bounce=1 (hard on performance) Shadows=2 (hard on performance) Never die=4 (hard on performance) Dumb=8 (game must update and move particles)"
Dims = "Determines the area that the particle system will affect, i.e. spawn particles in. You can use a Dims property, which will make the system cube- or –rectangle-shaped, or you could give it a Radius property instead to make it a sphere. Last, you could make it capable of binding a brush, then use the brush's shape to determine where particles will spawn."
MinVelocity = "Minimum speed a particle will have when it's created."
MaxVelocity = "Maximum speed a particle will have when it's created."
BurstWait = "A random value between BurstWaitMin and BurstWaitMax is multiplied by the BurstWait time to determine when the next burst of particles will occur."
BurstWaitMin = "See BurstWait."
BurstWaitMax = "See BurstWait."
ParticlesPerSecond = "How many particles will the system create here each second?" 
ParticleLifeTime = "How long will each particle last in the world after it's created?"
ParticleRadius = "This value determines the radius of each particle in the system.  This value is relative to the size of the texture used for the particle."
ParticleGravity = "How fast will the particles fall?" 
RotationVelocity = "This defines the velocity at which the particle system is rotated. Particle systems always rotate on their Y-axis."
MaxViewDistance = "This value sets the maximum distance at which the particles will be visible. If the camera is beyond this point, the particles will not be drawn."
Color1 = "The particles that are generated can be different colors. By specifying two colors, a color gradient will be created. The particles will be created in random colors from within this gradient. This is the first color used to define this gradient."
Color2 = "This color is the second color in the gradient used to define the color of the generated particles."
TextureName = "This field specifies the texture that is to be applied to the generated particles."

[PolyGrid]
Ring1Rate = "Used when PlasmaType is set to 1 in the PolyGrid.  These values determine the rate at which the first, second, third, and forth plasma rings change."
XScaleDuration = "Determines the length of time the PolyGrid will take to scale between XScaleMin and XScaleMax."
Dims = "Determines the size of the grid. Polygrids normally face up (Y axis), so a typical polygrid Dims setting would be 256 8 256, for a thin grid that fills a large hole in a floor."
Color1 = "If there's no texture, you can have it blend between two colors based on height. Color1 and Color2 each bring up the color picker dialog to let you choose your two colors."
Color2 = "If there's no texture, you can have it blend between two colors based on height. Color1 and Color2 each bring up the color picker dialog to let you choose your two colors."
SpriteSurfaceName = "PolyGrids can use any sprite as a texture. This is where you enter the sprite's name."
XScaleMin = "Specifies the minimum scale that the texture used on the PolyGrid will scale to. This allows you to have the texture on the PolyGrid swim up and down in size."
YScaleMin = "See XScaleMin."
XScaleMax = "Specifies the maximum texture scale on the PolyGrid. See XScaleMin."
YScaleMax = "See XscaleMax."
XscaleDuration = "Determines the length of time the PolyGrid will take to scale between XScaleMin and XScaleMax."
YScaleDuration = "See XScaleDuration."
XPan = "If the PolyGrid is textured, you can enter a panning speed here to have the texture pan along the PolyGrid's X-axis. Speed is in game units/second. Typical values would be from –20 to 20 for fairly fast speed and –5 to 5 for slow."
YPan = "See XPan."
Alpha = "The translucency of the grid as a whole. If you want to use a texture without an alpha mask or fine-tune the alpha for a texture that does have an alpha mask, this is a useful property. A value of 1 is fully opaque, .5 is half-translucent and 0 is transparent."
Additive = "This flag enables the Additive blending mode."
Multiply = "This flag enables the Multiply blending mode."
NumPolies = "How many polygons will the grid have on a side? The higher the number of polies you add, the smoother the grid will look, but it will also take longer to render."
PlasmaInfo = "This subset of properties defines the appearance of the plasma created by the PolyGrid object."
PlasmaType = "Indicates the type of plasma to use to generate motion on the PolyGrid.  Valid values are 0 for normal plasma and 1 for 4 ring plasma."

[Prop]
DebrisType = "This dropdown menu allows you to choose a type of debris that will be spawned when the Prop is destroyed."
SurfaceOverride = "This dropdown menu allows you to choose a specific surface type for the Prop."
Filename = "Specifies the .abc file the model's geometry is in."
Skin = "Specifies the texture or textures (.DTX files) to use for the model's skin."
Scale = "This value changes the size of the object. It is a multiplicative value based on the original size of the object. You can scale an object in all three vectors independently. The default scale is 1.0 1.0 1.0."
Visible = "This property toggles the objects visibility on and off."
Solid = "This flag toggles whether or not the Prop is solid. Sometimes you want a player to be able to pass through a prop, such as low bushes or flowers in a flowerbed, without hitting or touching them."
Gravity = "Sets whether or not the selected object should fall if it's in the air. Obviously, there are times when you'd want a model to stay in the air."
Shadow = "This property determines whether the object will cast a shadow or not."
MoveToFloor = "Tells a model to appear on the floor when the level opens, even if you placed it in the air inside DEdit. Useful for objects like trees and shrubs on terrain, where it's sometimes difficult to line up the exact floor level under an object."
DetailTexture = "This flag toggles whether or not to recognize the name of a detail texture located in the model's command string and apply it to the model."
Chrome = "For model-type props, you can specify that they'll use the level's environment map."
Alpha = "Sets overall translucency of the object, regardless of its alpha mask."
ObjectColor = "This color picker is used to add a color tint to the Prop."
Chromakey = "Some textures create transparent and opaque areas defined by an alpha channel. Setting this flag to true tells the object to make use of this alpha mask."
Additive = "This flag enables the Additive blending mode."
Multiply = "This flag enables the Multiply blending mode."
RayHit = "This flag toggles whether or not the object will be rayhit."
TouchSound = "The path to any .wav file may be entered here. The sound will be played when the player touches the Prop."
TouchSoundRadius = "This is the audible falloff radius of the TouchSound as measured in Dedit units."
DetailLevel = "This dropdown menu is used to set the detail level in which this prop will appear. For instance if you placed a Prop object and set its DetailLevel to medium, the prop would only appear if the in game detail settings were at medium or greater. A machine set to low detail would not see this object in the game."

[Intelligence]
RespawnTime = "This is the amount of time in seconds before the Intelligence item will reappear."
ShowPopup = "This flag toggles whether or not the pop up screen for the Intelligence item is displayed."
Type = "This dropdown menu is used to select what powerup will be used to represent this particular Intelligence item."
InfoId = "This field contains the Id number of the text message that is to be displayed when the player picks up this particular piece of Intelligence."
ShowPopUp = "This flag toggles whether or not the pop up screen for the Intelligence item is displayed."
PhotoOnly = "Setting this flag to true makes this an intelligence item that can only be gathered by photographing it with the camera sunglass gadget."
PickedUpCommand = "This is the command string that is sent when the player picks up the Intelligence item."
PlayerTeamFilter = "This is a flag used to restrict the availability of an Intelligence item to a certain team. This is useful in HARM v.s. UNITY multiplayer modes."
StartHidden = "This flag toggles whether the object will begin in the hidden state."

[KeyPad]
DisabledCmd = "This is the command string that is sent when the KeyPad has been successfully picked."
SpaceCodeBreaker = "This flag was created for a very specific purpose. If set to true, the CodeBreaker powerup that is spawned after the keypad has been successfully picked is the SpaceCodeBreaker version of the powerup."
MinPickTime = "A random value between the properties MinPickTime and MaxPickTime is used to determine how long after the Code Decipherer gadget is attached to the KeyPad that the KeyPad will become disabled."
MaxPickTime = "See MinPickTime."
DisabledCommand = "This is the command string that is sent when the KeyPad has been successfully picked."
PickSound = "The path to any .wav file may be entered here. The sound will be played in a loop while the KeyPad is being picked."
PickSoundRadius = "This is the audible falloff radius of the PickSound as measured in Dedit units."

[Lock]
RemoveWhenUnlocked = "Toggles whether the lock should be removed once it has been successfully picked."
MaxUnlockHitPts = "This is the maximum number of hit points a single pick will do to the lock."
MinUnlockHitPts = "This is the minimum number of hit points a single pick will do to the lock."
SoundRadius = "This is the audible falloff radius of the PickSound as measured in Dedit units."
UnlockCommand = "This is the command string that is sent when the Lock has been successfully picked."
UnlockSound = "The path to any .wav file may be entered here. The sound will be played when the Lock has been successfully picked."
PickSound = "The path to any .wav file may be entered here. The sound will be played in a loop while the Lock is being picked."
PickSoundRadius = "This is the audible falloff radius of the PickSound as measured in Dedit units."
UnlockHitPts = "This is the total number of hit points for the lock."
MinUnlockHitPoints = "This is the minimum number of hit points a single pick will do to the lock."
MaxUnlockHitPoints = "This is the maximum number of hit points a single pick will do to the lock."
Shootable = "This flag determines whether shooting it can destroy a lock."
Weldable = "This flag determines if the welder gadget is required to get through this lock."
Lightable = "If this flag is set to true, the lock will respond to the lighter."

[PlayerVehicle]
RespawnTime = "This is the amount of time before another PlayerVehicle will appear."
VehicleType = "This is a dropdown menu that allows you to choose what type of vehicle is placed."

[PropType]
Type = "This is a dropdown menu that allows you to choose what type of type is placed."

[SearchLight]
VisualRange = "This is the maximum range at which the SearchLight object can detect the player."
SpotTarget = "This is the name of the object that will receive the SpotMessage command string."
SpotMessage = "This is the command string that is sent when the SearchLight object spots the player."
PlayerTeamFilter = "This field allows you to set up SearchLight objects that respond to only certain teams."
Filename = "Specifies the .abc file the model's geometry is in."
Skin = "Specifies the texture or textures (.DTX files) to use for the model's skin."
DestroyedFilename = "Specifies the .abc file that contains a damaged representation of the model's geometry."
DestroyedSkin = "Specifies the texture or textures (.DTX files) to use for the skin of the damaged version of the model."
StartOn = "This flag toggles whether the SearchLight begins in the active state."
Target = "This is the field to enter the name of a keyframed object in if the SearchLight is to follow a keyframed path."
FOV = "This is the SearchLight's Field Of View."
Yaw1 = "This is the number of degrees the SearchLight will rotate in the negative direction."
Yaw2 = "This is the number of degrees the SearchLight will rotate in the positive direction."
YawTime = "This is the amount of time it takes to complete the rotation from Yaw1 to Yaw2."
Yaw1PauseTime = "This is how long the SearchLight pauses at the extent of rotation defined by Yaw1 before continuing."
Yaw2PauseTime = "This is how long the SearchLight pauses at the extent of rotation defined by Yaw2 before continuing."
SpecialFXStuff = "This is a subset of properties that define the light effects of the SearchLight object."
BeamRadius = "This value defines the size of the funnel of light at its furthest extent as measured in Dedit units."
BeamAlpha = "This value adjusts the opacity of the visible light beam."
BeamRotationTime = "This value defines how long it takes for the beam model to make one 360-degree rotation."
LightRadius = "This value defines the radius of the dynamic light automatically created by the SearchLight object. The radius is entered in Dedit units."
LightColor = "Determines the color of the light at the exact center of the Light object. Light falls off gradually from this center point."
BeamAdditive = "This flag toggles the use of additive blending by the visible beam model."
LensFlareProps = "This is a subset of properties that define the Sprite effects associated with the SearchLight object."
CreateSprite = "This flag toggles whether the SearchLight object will automatically create a ScaleSprite object."
UseObjectAngle = "This property was not used in the creation of NOLF and is not supported."
MinSpriteAlpha = "This is the minimum sprite alpha value. This is the alpha when the SearchLight is pointed away from the camera."
MaxSpriteAlpha = "This is the sprite alpha value for when the SearchLight is shining at the camera."
SpriteAdditive = "This flag toggles Additive blending."
SpriteFile = "This field points to the .spr file that will be used as the flare for the SearchLight."
MinAngle = "This is the minimum angle between the camera and the sprite where the sprite is still visible."
SpriteOffset = "An offset value from the SearchLight object down its forward facing vector."
MinSpriteScale = "This is the scale of the sprite when it is at MinAngle."
MaxSpriteScale = "This is the scale of the sprite when it is facing the camera."
BlindingFlare = "This flag toggles whether or not the SearchLight object will automatically create a BlindingFlare."
BlindObjectAngle = "This is the angle between the searchlight's forward vector and the vector between the camera's position and the search light's position - When this angle is less the value supplied the 'blind' sprite will become visible and scale between MinBlindScale and MaxBlindScale as this value goes to 0.0."
BlindCameraAngle = "This is the angle between the camera's forward vector and the vector between the camera's position and the search light's position - When this angle is less the value supplied (and the BlindObjectAngle condition is met) the 'blind' sprite will become visible and scale between MinBlindScale and MaxBlindScale."
MinBlindScale = "This is the minimum scale of the blinding sprite."
MaxBlindScale = "This is the maximum scale of the blinding sprite."

[SecurityCamera]
SpotTarget = "This is the name of the object that will receive the SpotMessage command string."
SpotMessage = "This is the command string that is sent when the SearchLight object spots the player."
PlayerTeamFilter = "This field allows you to set up SearchLight objects that respond to only certain teams."
Filename = "Specifies the .abc file the model's geometry is in."
Skin = "Specifies the texture or textures (.DTX files) to use for the model's skin."
DestroyedFilename = "Specifies the .abc file that contains a damaged representation of the model's geometry."
DestroyedSkin = "Specifies the texture or textures (.DTX files) to use for the skin of the damaged version of the model."
Yaw1 = "This is the number of degrees the SearchLight will rotate in the negative direction."
Yaw2 = "This is the number of degrees the SearchLight will rotate in the positive direction."
YawTime = "This is the amount of time it takes to complete the rotation from Yaw1 to Yaw2."
FOV = "This is the SearchLight's Field Of View."
VisualRange = "This is the maximum range at which the SearchLight object can detect the player."
Yaw1PauseTime = "This is how long the SearchLight pauses at the extent of rotation defined by Yaw1 before continuing."
Yaw2PauseTime = "This is how long the SearchLight pauses at the extent of rotation defined by Yaw2 before continuing."
SoundRadius = "This is the audible falloff range of all of the cameras actions as measured in Dedit units."

[RandomSpawner]
Spawner = "This field contains the base spawner name (i.e. spawner, where the spawners are named Spawner00, Spawner01, etc)."
Number = "This sets the number of things to spawn."

[RotatingWorldModel]
Chromakey = "Some textures create transparent and opaque areas defined by an alpha channel. Setting this flag to true tells the object to make use of this alpha mask."
ExplosionProperties = "This property was not used in the creation of NOLF and is not supported."
DebrisType = "Identifies the type of debris that will be spawned by the destruction of the object."
SurfaceOverride = "This field overrides the surface flags assigned to the textures on the brush or brushes that make up the door. This is particularly useful in correcting any unwanted behavior resulting from a brush having multiple textures with differing surface flags applied."
Visible = "This flag toggles the visibility of the object."
Solid = "This flag toggles whether or not the object is solid."
Gravity = "This flag toggles whether the object will fall to the floor if the item it is resting on is removed."
BlockLight = "Setting this flag to true will cause the object to block light and cast a shadow."
BoxPhysics = "In the engine, WorldModels like the Door object have two possible physics models. In the first, the player can walk on and touch every curve and corner of their surface. In the second, the player can only interact with a bounding box that surrounds all the brushes in the Door, just like the box you would get if you selected them in DEdit. For doors with a simple rectangular shape, this is preferred because it's cheaper to calculate. However, for a lot of objects, it's limiting. If you need a player to be able to shoot through the bars in a prison door, you will need BoxPhysics set to FALSE."
StartOn = "This flag toggles whether or not the object begins active."
SpinUpSound = "The path to any .wav file may be entered here. The sound will be played in a loop while the RotatingWorldModel is spinning up to speed."
BusySound = "The path to any .wav file may be entered here. The sound will be played in a loop while the RotatingWorldModel is spinning up to speed."
SpinDownSound = "The path to any .wav file may be entered here. The sound will be played in a loop while the RotatingWorldModel is spinning at speed."
SoundRadius = "This is the radius of the sound falloff measured in Dedit units."
XAxisRevTime = "This is an amount of time in seconds that it takes the object to make one full rotation on the X-axis."
XAxisSpinUpTime = "This is an amount of time in seconds that it takes the object to accelerate to full speed."
XAxisSpinDownTime = "This is an amount of time in seconds that it takes the object to spin down to a complete stop."
XRotateForward = "This flag sets whether the object rotates forward or backward along the chosen axis."
YAxisRevTime = "This is an amount of time in seconds that it takes the object to make one full rotation on the Y-axis."
YAxisSpinUpTime = "This is an amount of time in seconds that it takes the object to accelerate to full speed."
YAxisSpinDownTime = "This is an amount of time in seconds that it takes the object to spin down to a complete stop."
YRotateForward = "This flag sets whether the object rotates forward or backward along the chosen axis."
ZAxisRevTime = "This is an amount of time in seconds that it takes the object to make one full rotation on the Z-axis."
ZAxisSpinUpTime = "This is an amount of time in seconds that it takes the object to accelerate to full speed."
ZAxisSpinDownTime = "This is an amount of time in seconds that it takes the object to spin down to a complete stop."
ZRotateForward = "This flag sets whether the object rotates forward or backward along the chosen axis."
ShadowLights = "RotatingWorldModels support light animation, you need to place KeyframerLight objects to do the lighting, and enter their names in this field (light names are separated by semicolons)."
LightFrames = "This field defines how many lightmaps to use when creating the light animation of the RotatingWorldModel spinning."
ShadowAxis = "This defines the primary axis of rotation for the purpose of the creation of the animated light maps."
ChromaKey = "Some textures create transparent and opaque areas defined by an alpha channel. Setting this flag to true tells the object to make use of this alpha mask."

[ScaleSprite]
DamagedFilename = "Each ScaleSprite can display three different .spr files that represent three stages damage. This would display a damaged version of the .spr entered in the FileName field."
DestroyedFilename = "This would be the third .spr displayed. It would represent the destroyed version of the .spr entered in the FileName field."
ZBias = "Helps some sprites to not clip into world geometry as much."
Filename = "Specifies the name of the sprite file (*.spr) that the ScaleSprite object will display."
StartOn = "This flag defines whether the ScaleSprite is to begin in the on state."
Dims = "Dims specifies the bounding box (dimensions) of the object.  The box is relative to the position of the object.  When two object's dims are overlapping the objects are considered touching."
Color = "This is the standard windows color picker dialogue. The color chosen tints the color of the ScaleSprite."
Alpha = "Sets the base alpha value of the sprite, independent of the value of the sprite's alpha mask. Changing the alpha value will alter the ScaleSprites opacity."
ScaleX = "Sets the overall size of the Sprite in the X-axis. A scale of 1 would set it to its size in pixels; .5 would display it as half the size in pixels."
ScaleY = "Sets the overall size of the Sprite in the Y-axis. A scale of 1 would set it to its size in pixels; .5 would display it as half the size in pixels."
AdditionalFlags = "This is a subset of properties that further define the appearance of the ScaleSprite."
FlushWithWorld = "If this flag is set to true the ScaleSprite will be projected down the negative Z-axis onto any geometry."
Rotatable = "If set to TRUE the sprite will use the object's rotation for orientation.  If set to FALSE the sprite will always face the camera."
Glow = "This flag determines whether the ScaleSprite will scale as the viewing angle and distance changes."
Zbias = "Helps some sprites to not clip into world geometry as much."
Additive = "This flag toggles the Additive blend mode."
Multiply = "This flag toggles the Multiply blend mode."
LensFlareProps = "This flag is a subset of properties that further define the appearance of the ScaleSprite object."
CreateSprite = "Toggles the creation of the blinding flare."
UseObjectAngle = "This property is not used and is always set to true."
MinAngle = "Minimum angle between the camera and the sprite where the sprite is still visible."
SpriteOffset = "Offset away from the ScaleSprites position along the ScaleSprites forward facing vector, that the sprite for the BlindingFlare is created."
MinSpriteAlpha = "The minimum alpha for the BlindingFlare attached to the ScaleSprite. The value when the ScaleSprite is seen through the corner of the eye."
MaxSpriteAlpha = "The maximum alpha for the BlindingFlare attached to the ScaleSprite. The value when the ScaleSprite is viewed directly."
MinSpriteScale = "The minimum scale for the BlindingFlare attached to the ScaleSprite. The value when the ScaleSprite is seen through the corner of the eye."
MaxSpriteScale = "The maximum scale for the BlindingFlare attached to the ScaleSprite. The value when the ScaleSprite is viewed directly."
SpriteFile = "This field points to the .spr file that will be used as the flare for the SearchLight."
BlindingFlare = "This flag toggles whether or not the ScaleSprite object will automatically create a BlindingFlare."
BlindObjectAngle = "The angle between the ScaleSprites forward vector and the vector between the camera’s position and the ScaleSprites position - When this angle is less the value supplied the blind sprite will become visible and scale between MinBlindScale and MaxBlindScale as this value goes to 0.0 - Note both BlindObjectAngle’s and BlindCameraAngle’s conditions must be met for the blind sprite to appear."
BlindCameraAngle = "The angle between the camera’s forward vector and the vector between the camera’s position and the search light’s position. When this angle is less the value supplied (and the BlindObjectAngle condition is met) the blind sprite will become visible and scale between MinBlindScale and MaxBlindScale."
MinBlindScale = "The size of the BlindingFlare when it is at its smallest."
MaxBlindScale = "The size of the BlindingFlare when it is at its largest."
SpriteAdditive = "This flag toggles Additive blending."

[ScreenShake]
Amount = "This property defines the amount to shake in x, y, and z – that the camera will shake until the values decay to zero in all 3 axis...(max value is 20, good values are less than 3)."
NumShakes = "The number of times the shake occurs (leave -1 to control via on/off trigger)."
Frequency = "This value defines how often a shake occurs.  Every 'frequency' seconds a shake will occur if the ScreenShake object is active (i.e., an ON message has been sent to it)."
AreaOfEffect = "This value defines how close the player needs to be to the object to feel the screen shake (leave -1 for the entire level)."
ShakeSound = "The path to any .wav file may be entered here. This sound file is played EVERY time a shake occurs (i.e., every frequency seconds)."
SoundRadius = "This is the radius of the sound falloff measured in Dedit units."

[SkyPointer]
SkyObjectName = "The name of the object that you want this SkyPointer to render in the sky."
SkyDims = "Takes the X, Y and Z dimensions of the SkyPointer. These need to be large enough to encompass all geometry that you plan to show in your skybox if you want it to appear in the sky. Only one object per level should have its Dims set."
Flags = "This property was not used in the creation of NOLF and is not supported."
Index = "The object's index determines the order in which it's drawn. Objects with low Index values are rendered first (and thus at the back), while objects with a higher index are rendered last and at the front."
InnerPercentX = "Determines the amount of player motion that's passed on to the camera rendering the sky. If the value is set to 0.100, only ten percent of the player's movement will be passed on to the camera. Camera movement is used to simulate parallax movement of objects in the sky. Be sure that if you give the cameras a lot of motion, you'll need to make your skybox large enough that the camera doesn't move outside it."
InnerPercentY = "See InnerPercentX."
InnerPercentZ = "See InnerPercentX."

[SoundFX]
StartOn = "This flag toggles the sound to start in the on state."
Sound = "The path to any .wav file may be entered here. This sound file will be played when the SoundFX object is triggered on."
SoundRadius = "This is the radius of the sound falloff measured in Dedit units."
Priority = "You can assign Priority values to SoundFX objects so that some sounds will take priority over others. The valid values are 0, 1, and 2. Lower numbers have lower priority."
InnerRadius = "It's useful and simple to give a sound two radii, one Inner where it plays at full Volume, and one Outer where it plays at a reduced volume. It's a cheap way of having a sound fade over distance without requiring possibly expensive audio processing in-game. The values a set in Dedit units."
OuterRadius = "See InnerRadius."
Volume = "This value is expressed as a percentage. It is how loud the sound is at its origin point."
PitchShift = "This value speeds up or slows down the file.  You can set a different pitch with this property to make it play lower or higher in pitch.  1.00 is normal pitch, 1.10 would be pitched up 10%, 0.90 would be 10% pitched down.  It does this by changing the playback sample rate of the file."
Ambient = "Setting Ambient to TRUE means that the sound will play as if it were coming from everywhere around you, but will get quieter as you move farther away from it.  Setting Ambient to FALSE means that the sound will play from a specific point."
Loop = "This flag toogles whether the sound will loop continuously or play only once when triggered on."
PlayAttached = "Setting this flag to true will allow its origin point to move. This flag is useful if the sound is to be attached to a moving object."
Filter = "Every sound played in NOLF may have some type of software filtering done to it before it is passed off to the sound card.  The current implementation allows sounds to independently specify what filter they use when they are played, or (by default) use the 'dynamic' filter associated with the current listener (camera) position.  Also sounds can specify that they do not want to be filtered."

[Spawner]
DefaultSpawn = "This field defines what is to be spawned in when the Spawner receives a 'default' command."
SpawnSound = "The path to any .wav file may be entered here. This sound file will be played when the Spawner object is triggered."
SoundRadius = "This is the radius of the sound falloff measured in Dedit units."

[Speaker]
SoundRadius = "This is the radius of the sound falloff measured in Dedit units."
Attachments = "This property was not used in the creation of NOLF and is not supported."

[Sprinkles]
FileName0 = "This field contains the path to the .abc .spr or .dtx file that is to be used as the sprinkles object."
SkinName0 = "If the FileNameX is a model, this field would point to the .dtx texture file to be used on the model."
Count0 = "This value determines how many objects of this type should exist at any given time."
Speed0 = "The speed of the object in DEdit units per second."
Size0 = "This feild sets the size of the objects created."
SpawnRadius0 = "This value creates a radius around the player that defines the maximun range in which the Sprinkles objects will appear."
ColorMIn0 = "The ColorMin and ColorMax values define a range of random color that will be applied to the objects created."
ColorMax0 = "See ColorMin."
AnglesVel0 = "These values determine the rotation velocity for each object created."

[StaticSunLight]
Rotation = "Sets the angle of the light that falls into the level."
InnerColor = "Sets the color of the light emitted by the StaticSunLight, just like a normal light."
OuterColor = "Sets the color of the light used to shade terrain brush faces if they face away from the StaticSunLight. Useful if you want to have a level shaded by moonlight, where there is a high ambient color level. In that case you would use a high white-blue for InnerColor and a dark blue for OuterColor. For no shading, leave this value set to black."
BrightScale = "Sets the brightness of the StaticSunLight, just like a normal light."
Bias = "Sets the falloff of the sunlight on terrain between its Innercolor and its Outercolor based on the angle of the lighted face relative to the sun's angle. Its default of 1 indicates that light falls off linearly from a face that's dead-on towards the sun and one that's pointed straight away from it. Fractions (0.5, 0.25) mean that the sun falls off less rapidly and that the terrain has more light colored as InnerColor, whereas larger values (2, 3) will create a terrain with more OuterColor. Too much push in either direction can yield unnatural-looking lighting."

[Steam]
Lifetime = "For Steam effects that you only want to be active for a limited period, you can specify a time after which the effect shuts off."
StartActive = "If set to true the Steam object will begin in the on state."
Damage = "This value defines how many points of damage per second will be done to a character caught within the active Steam objects effect."
Range = "This is a distance measured in Dedit units from the origin, down the forward vector that defines the area where a character will receive damage from the Steam object when it is active."
VolumeRadius = "This is a value I Dedit units that defines the particle creation area. When the particles are created, they will be created somewhere within this radius."
ParticleVelocity = "This is the speed at which the particles travel measured in Dedit units per second."
ParticleRadius = "This value represents the radius of each particle in the system as measured in Dedit units.  This value is relative to the size of the texture used for the particle."
Particle = "This is the texture file that will be used for the particle."
CreateDelta = "This is how frequently the number of particles specified in the NumParticles field are created."
NumParticles = "This field specifies how many particles are to be created every CreateDelta number of seconds."
StartAlpha = "This value sets the transparency level of the particle when it is first created. A value of 1 is totally opaque and a value of 0 is totally transparent."
EndAlpha = "This value sets the transparency level of the particle at the end of its travel. A value of 1 is totally opaque and a value of 0 is totally transparent."
StartScale = "This property sets the size of the particle at its creation point. The value entered in this field is a multiplier relative to the ParticleRadius value."
EndScale = "This property sets the size of the particle at the end of its travel. The value entered in this field is a multiplier relative to the ParticleRadius value."
MinDriftVel = "The path of the particles can be altered to have a certain degree of random drift. In this field you define the minimum amount of drift that can occur and in which axis."
MaxDriftVel = "In this field you define the maximum amount of drift that can occur and in which axis."
Color1 = "	The particles that are generated can be different colors. By specifying two colors, a color gradient will be created. The particles will be created in random colors from within this gradient. This is the first color used to define this gradient."
Color2 = "	This color is the second color in the gradient used to define the color of the generated particles."
SoundRadius = "This is the radius of the sound falloff measured in Dedit units."
SoundName = "The path to any .wav file may be entered here. This sound file will be played when the Steam object is active."

[TeleportPoint]
MoveToFloor = "This flag determines whether the object moved to this point will have the bottom of their bounding box aligned with the floor."

[TranslucentWorldModel]
ExplosionProperties = "This was not used in the creation of NOLF and is not supported."
DebrisType = "Identifies the type of debris that will be spawned by the destruction of the object."
SurfaceOverride = "This field overrides the surface flags assigned to the textures on the brush or brushes that make up the TranslucentWorldModel. This is particularly useful in correcting any unwanted behavior resulting from a brush having multiple textures with differing surface flags applied."
LensFlareProps = "This is a subset of properties that define properties specific to creating lensflare effects with TranslucentWorldModels."
InSkyBox = "This flag should be set to true if the TranslucentWorldModel is going to be in a SkyBox."
MinAngle = "Minimum angle between the camera and the sprite where the sprite is still visible."
UseObjectAngle = "This property is not used and is always set to true."
Visible = "This flag toggles the visibility of the object."
Solid = "This flag toggles whether or not the object is solid."
Rayhit = "This flag toggles whether or not the object will be rayhit."
Gravity = "Sets whether or not the selected object should fall if it's in the air. Obviously, there are times when you'd want a model to stay in the air."
Chromakey = "Some textures create transparent and opaque areas defined by an alpha channel. Setting this flag to true tells the object to make use of this alpha mask."
BlockLight = "Setting this flag to true will cause the object to block light and cast a shadow."
BoxPhysics = "In the engine, WorldModels like the TranslucentWorldModel object have two possible physics models. In the first, the player can walk on and touch every curve and corner of their surface. In the second, the player can only interact with a bounding box that surrounds all the brushes in the TranslucentWorldModel, just like the box you would get if you selected them in DEdit. For geometry with a simple rectangular shape, this is preferred because it's cheaper to calculate. However, for a lot of objects, it's limiting. If you need a player to be able to shoot through the bars in a prison door, you will need BoxPhysics set to FALSE."
FogDisable = "Setting this flag to true will cause the object to not be affected by fog"
Alpha = "This value sets the opacity of the TranslucentWorldModel. A value of 1 will draw the object at full opacity and value of 0 will make the object transparent."
LensFlare = "LensFlare is a group property that allows the TWM to act like a LensFlare on a sprite (for the sun in the sky box for example.)"
IsKeyframed = "Is the door moved by a keyframer instead of its own internal mover? If it is you will want to set this flag to true. If you do not, impact effects will not move with the object. They will instead, hover in the air as the door object moves away from them."

[Trigger]
Dims = "The dimensions of the trigger in the game. If the player has to walk into the trigger to fire it, you should set the dimensions. If the trigger is fired off by another object, then they don't need to be changed. Trigger dimensions are set as x, y and z values. You can make each of them as small as 0 or as large as you need. For example, for a trigger that fills a typical doorway you would set the dims to 128 128 4. Using the 4 is just to make the object easier to find. Triggers can be any size."
NumberOfActivations = "This value sets how many times the Trigger object can be activated. Setting this value to 0 allows the Trigger to be activated an infinite number of times."
SendDelay = "A specified amount of seconds between the time the Trigger object receives a trigger message, and the when it sends its command strings."
TriggerDelay = "After being triggered, this is the amount of time before the Trigger object can be activated again."
Targets = "This is a subset of properties that define the objects that the trigger object will send command strings to, and the command strings that will be sent."
TargetName0 = "In this field you enter the name of the object that the TargetMessage command string will be sent to."
TargetMessage0 = "These are the command strings that will be sent to their corresponding targets entered in the TargetName field."
TriggerTouch = "This property was not used in the creation of NOLF and is not supported."
MessageTouch = "This property was not used in the creation of NOLF and is not supported."
PlayerTriggerable = "This flag toggles whether or not the players bounding box intersecting that of the Trigger will activate it."
AITriggerable = "This flag toggles whether or not an AIs bounding box intersecting that of the Trigger will activate it."
AITriggerName = "Triggers that are set to be AI triggerable can be set up to only respond to a specific AI. Enter the name of the specific AI that you want to activate the trigger in this field."
BodyTriggerable = "This flag toggles whether a trigger can be triggered by bodies."
BodyTriggerableName = "This flag is used to specify the name of a specific body that will be allowed to trigger the trigger."
WeightedTrigger = "This property was not used in the creation of NOLF and is not supported."
Message1Weight = "This property was not used in the creation of NOLF and is not supported."
TimedTrigger = "If this flag is set to true the Trigger object will continue to send its messages repeatedly based on the minimum and maximum times set in the MinTriggerTime and MaxTriggerTime fields."
MinTriggerTime = "If the trigger's TimedTrigger flag is set to true, this value will set the shortest delay before the trigger fires."
MaxTriggerTime = "If the trigger's TimedTrigger flag is set to true, this value will set the longest delay before the trigger fires."
ActivationCount = "This field is used to set an activation threshold. The Trigger object will need to receive a number of 'trigger' messages equal to the value entered in this field before its messages will be sent."
Locked = "This property can be used if you only want to be able to trip the trigger after a certain event has happened. You would also need a Condition variable, or Unlock messages on the objects that can unlock the trigger."
ActivationSound = "Specifies a sound file to play when the trigger fires. If you want a player to know that they've just set something off, found a clue or entered a cut scene, this can be useful."
SoundRadius = "Determines the distance from the trigger that you can hear the ActivationSound play, if it has one."
AttachToObject = "Attaches a Trigger to an object, such as a Prop or a WorldModel. If the object moves, so does the trigger."
PlayerTeamFilter = "This flag allows you to make triggers that can only be activated by specific teams."

[ExitTrigger]
FadeOutTime = "This is the time in seconds that it takes for the camera to fade to black once the trigger has been activated."

[LaserTrigger]
Color = "This determines the color of the laser trip wire."
Alpha = "This value sets the opacity of the laser trip wire."
CreateSprites = "This flag toggles whether the LaserTrigger will automatically create ScaleSprites at the ends of the laser trip wire."
SpriteFilename = "This is the name of the .spr file that will be used to create the sprites at the ends of the laser trip wire."
SpriteScale = "This value changes the size of the sprites created."

[VolumeBrush]
Visible = "This flag sets whether the brush that makes up the volume is visible or not."
Hidden = "This flag allows you to make a volume begin hidden in the level. Later you can send a (hidden 0) message to the VolumeBrush object to unhide it."
Viscosity = "This value affects the resistance of the players movement through the volume."
Friction = "This property allows you to alter the friction coefficient of surfaces to create slippery surfaces."
Current = "This is a force that pushes against the player. Use positive or negative values along each axis (x, y, and z) to indicate the direction and strength of the current. In general, you'll need values in the thousands in order to lift a player off the ground. This works well to create moving streams or areas of rushing wind."
Damage = "Sets amount of damage dealt by this area for every second the player is in it."
DamageType = "This is a dropdown menu that allows you to choose the damage type that will be inflicted by the Volume."
TintColor = "You can define a tint for the player's view if you want the area to look as if it's filled with light or liquid."
LightAdd = "This allows you to further alter the view from inside a Volume."
SoundFilter = "You could have sound behave differently inside the volume. In the case of liquid, you could mute out high frequencies. In the case of a dimensional gate, you might add a strange echo or other filter."
CanPlayMovementSounds = "This flag disables the footstep sounds and head-bob motion in a volume."
SurfaceStuff = "This is a subset of properties that define the appearance of the surface of a Volume Brush."
ShowSurface = "This flag toggles the surface effects on and off."
SpriteSurfaceName = "PolyGrids can use any sprite as a texture. This is where you enter the sprite's name."
XScaleMin = "Specifies the minimum scale that the texture used on the PolyGrid will scale to. This allows you to have the texture on the PolyGrid swim up and down in size."
YScaleMin = "Specifies the minimum scale that the texture used on the PolyGrid will scale to. This allows you to have the texture on the PolyGrid swim up and down in size."
XScaleMax = "Specifies the maximum texture scale on the PolyGrid. See XScaleMin."
YScaleMax = "See XscaleMax."
XScaleDuration = "Determines the length of time the PolyGrid will take to scale between XScaleMin and XScaleMax."
YScaleDuration = "See XScaleDuration."
SurfaceHeight = "Sets the turbulence of a polygrid surface. Ranges from 0 (flat) on up."
SurfaceColor1 = "If there's no texture, you can have it blend between two colors based on height. SurfaceColor1 and SurfaceColor2 each bring up the color picker dialog to let you choose your two colors."
SurfaceColor2 = "If there's no texture, you can have it blend between two colors based on height. SurfaceColor1 and SurfaceColor2 each bring up the color picker dialog to let you choose your two colors."
SurfaceAlpha = "The translucency of the grid as a whole. If you want to use a texture without an alpha mask or fine-tune the alpha for a texture that does have an alpha mask, this is a useful property. A value of 1 is fully opaque, .5 is half-translucent and 0 is transparent."
Additive = "This flag enables the Additive blending mode."
Multiply = "This flag enables the Multiply blending mode."
NumSurfacePolies = "How many polygons will the grid have on a side? The higher the number of polies you add, the smoother the grid will look, but it will also take longer to render."
FogStuff = "This is a subset of properties that define the fog effects that will be seen when the player is within the Volume Brush."
FogEnable = "This flag toggles the fog effects on and off."
FogFarZ = "This is a value that determines at what distance the fog reaches full saturation."
FogNearZ = "This value determines at what distance the fog is at zero saturation."
FogColor = "This color picker determines the color of the fog effect."

[WeaponItem]
Scale = "This value changes the size of the object. It is a multiplicative value based on the original size of the object. You can scale an object in all three vectors independently. The default scale is 1.0 1.0 1.0."
Visible = "This property toggles the objects visibility on and off."
Shadow = "This property determines whether the object will cast a shadow or not."
PickupTriggerTarget = "The name of the object that should receive the PickupTriggerMessage."
PickupTriggerMessage = "This is the message that is sent when the player picks up the WeaponItem."
Bounce = "This property was not used in the creation of NOLF and is not supported."
RespawnSound = "Sound file that is played when the WeaponItem powerup respawns."
PlayerTeamFilter = "This flag allows you to spawn weapon items useable only by a specific team."
MoveToFloor = "Whether or not the object is moved to the floor when created in the game."
RespawnTime = "The amount of time in seconds before a powerup reappears after being picked up by a player."
WeaponType = "A pull down menu used to choose the type of WeaponItem the power up will be."
AmmoAmount = "This value determines the amount of ammunition that the weapon will have. A value of -1 will use the default amounts set in the attribute file."

[WorldProperties]
FarZ = "This value sets the distance of the farZ-clipping plane for the level."
AllSkyPortals = "If this is set to 1, the engine will not use the vis for sky portal polies, but instead it will process ALL sky portal polies in the level to determine where it should draw the sky."
Wind = "This allows you to set up a current of wind that is constant throughout the level. It works the same as the Current property in VolumeBrushes."
EnvironmentMap = "This points to a .dtx file that will be used as the environment map for all of the models in the level."
GlobalSoundFilter = "This field allows you to choose a sound filter that will be used for the entire level."
MPMissionName = "Enter mission ID here."
MPMissionBreifing = "Enter the mission breifing ID here."
FogInfo = "This is a subset of properties that define the overall fogging effects for the entire level."
FogEnable = "This flag toggles the fog effects on and off."
FogColor = "This color picker determines the color of the fog effect."
FogNearZ = "This value determines at what distance the fog is at zero saturation."
FogFarZ = "This is a value that determines at what distance the fog reaches full saturation."
SkyFogEnable = "This flag toggles the SkyFog effects on and off."
SkyFogNearZ = "This value determines at what distance the fog is at zero saturation."
SkyFogFarZ = "This is a value that determines at what distance the fog reaches full saturation."
VFogInfo = "This is a subset of properties that defines the properties of Vfog in the level. Vfog is fog along an axis like ground fog or a high cloud layer."
VFog = "This flag toggles the VFog on and off."
VfogMinY = "This sets where the bottom of the fog area is."
VfogMaxY = "This sets where the top of the fog area is."
VfogMinYVal = "This is a number that is between 0 and 255 and sets what the fog value is at."
VfogMaxYVal = "This sets what the fog is at (and above) VFogMaxY."
VfogDensity = "This controls how dense the volumetric fog is."
VfogMax = "This is a number 0 to 255 that sets the maximum fog value.  This can be used to prevent it from fully saturating the fog.  This is very useful if you want to have dense fog but still want to be able to see stuff in the distance."
SkyPanning = "This is a subset of properties that defines the parameters of SkyPanning effects (cloud shadows moving across the ground)."
PanSkyTexture = "This is the .dtx file that will be used as the texture for the panning clouds."
PanSky = "Toggles whether or not to pan the sky texture"
PanSkyOffsetX = "This sets the velocity of the panning of the sky texture in the world X direction."
PanSkyOffsetZ = "This sets the velocity of the panning of the sky texture in the world Z direction."
PanSkyScaleX = "This is the scale of the sky texture in the world X direction."
PanSkyScaleZ = "This is the scale of the sky texture in the world Z direction."
TimeOfDay = "TimeOfDay was not used in the creation of NOLF and is not supported."
MusicControlFile = "This sets the path to the .txt control file that sets up the direct music files to be used for the level."
LMAnimStatic = "This flag was introduced to increase performance under certain conditions relating to the use of light map animations. If your level contains light animations that are turning on and off more than they are remaining in one state or the other, set this flag to false."



[KeyframerLight]
InnerColor = "Determines the color of the light at the exact center of the Light object. Light falls off gradually from this center point."
FOV = "This value sets the field of view of the directional light in degrees."
LightRadius = "Determines the total range of the light's effects. Anything outside this range isn't lit at all by this light."
DirLight = "Setting this flag to true will make the light perform as a DirLight instead of a point light."
DirLightRadius = "This value sets the falloff radius of the directional light in Dedit units."
OuterColor = "Determines the color of the light at the exact edge of its LightRadius. This is the color that the light fades to from its InnerColor. Can be useful if you want to stack lights together to get a special effect."
UseShadowMaps = "If the UseLightMaps flag has been set to true, this flag will determine what kind of light maps are generated when the level is processed. If set to false, high quality lightmaps the same as those used to lightmap the rest of the world geometry will be created. If set to true, the lightmaps created will be a rougher looking version that takes up about a tenth the size of memory."

[Alarm]
ActivateTarget = "This is the name of the object that will receive the ActivateMesage command string."
PlayerUseable = "This flag toggles whether the player is able to activate the alarm."
ActivateMessage = "This is the command string that is sent when the Alarm object is activated."