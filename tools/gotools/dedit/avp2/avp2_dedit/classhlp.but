[BaseClass]
1stHearAllyBattleCryMessage = "Message sent to 1stHearAllyBattleCryTarget when the AI hears an ally's battle cry for the first time."
1stHearAllyBattleCryTarget = "The 1stHearAllyBattleCryMessage will be sent to this object."
1stHearAllyPainMessage = "Message sent to 1stHearAllyPainTarget when the AI hears an ally's cry out in pain for the first time."
1stHearAllyPainTarget = "The 1stHearAllyPainMessage will be sent to this object."
1stHearAllyWeaponFireMessage = "Message sent to 1stHearAllyWeaponFireTarget when the AI hears an ally's weapon fire for the first time."
1stHearAllyWeaponFireTarget = "The 1stHearAllyWeaponFireMessage will be sent to this object."
1stHearDeathMessage = "Message sent to 1stHearDeathTarget when the AI hears a character die for the first time."
1stHearDeathTarget = "The 1stHearDeathMessage will be sent to this object."
1stHearEnemyFootstepMessage = "Message sent to 1stHearEnemyFootstepTarget when the AI hears an enemy's footstep for the first time."
1stHearEnemyFootstepTarget = "The 1stHearEnemyFootstepMessage will be sent to this object."
1stHearEnemyTauntMessage = "Message sent to 1stHearEnemyTauntTarget when the AI hears an enemy's taunt for the first time."
1stHearEnemyTauntTarget = "The 1stHearEnemyTauntMessage will be sent to this object."
1stHearEnemyWeaponFireMessage = "Message sent to 1stHearEnemyWeaponFireTarget when the AI hears an enemy's weapon fire for the first time."
1stHearEnemyWeaponFireTarget = "The 1stHearEnemyWeaponFireMessage will be sent to this object."
1stHearTurretWeaponFireMessage = "Message sent to 1stHearTurretWeaponFireTarget when the AI hears a turret's weapon fire for the first time."
1stHearTurretWeaponFireTarget = "The 1stHearTurretWeaponFireMessage will be sent to this object."
1stSeeCloakedMessage = "Message sent to 1stSeeCloakedTarget when the AI spots a cloaked character for the first time."
1stSeeCloakedTarget = "The 1stSeeCloakedMessage will be sent to this object."
1stSeeDeadBodyMessage = "Message sent to 1stSeeDeadBodyTarget when the AI spots a dead body for the first time."
1stSeeDeadBodyTarget = "The 1stSeeDeadBodyMessage will be sent to this object."
1stSeeEnemyFlashlightMessage = "Message sent to 1stSeeEnemyFlashlightTarget when the AI spots an enemy's flashlight beam for the first time."
1stSeeEnemyFlashlightTarget = "The 1stSeeEnemyFlashlightMessage will be sent to this object."
1stSeeEnemyMessage = "Message sent to 1stSeeEnemyTarget when the AI spots an enemy for the first time."
1stSeeEnemyTarget = "The 1stSeeEnemyMessage will be sent to this object."
Accuracy = "Firing accuracy. An accuracy of 1.0 will give the AI perfect shots (no perturb), an accuracy of 0.0 will give them the full perturbs of the weapon."
ActivateMessage = "If specified, the ActivateMessage is sent to the ActivateTarget object(s) when the object is activated."
ActivateTarget = "Name of the object that will receive the ActivateMessage command string."
ActivateTrigger = "Player can activate the object by pressing the use key. If the ActivateTrigger flag is set to false, the object will not be able to be activated by the player."
ActivationCount = "Used to set an activation threshold. The Trigger object will need to receive a number of 'trigger' messages equal to the value entered in this field before its messages will be sent."
ActivationSound = "Specifies a sound file to play when the trigger fires. If you want a player to know that they've just set something off, found a clue or entered a cut scene, this can be useful."
ActiveMode = "Will use the properties of the vision mode name (defined in visionmodebutes.txt) entered here."
ActiveSound = "If specified, this sound will loop while the KeyFramer is active, and will move with the keyframed object (will be positioned at the position of the FIRST object being keyframed)."
ActiveTime = "Specifies how long the camera will stay on."
AdditionalFlags = "Subset of properties that further define the appearance of the ScaleSprite."
Additive = "Uses an add blend when drawing a translucent worldmodel instead of an alpha blend. Additive blending adds overlapping color values together resulting in a brighter color. Note that this property controls the rendering of an entire object, so if a translucent worldmodel doesn't have this flag set to the same value on all attached brushes, the results are unpredictable."
AdjustPitch = "The breakable's pitch will be rotated by PitchDelta degrees while shaking."
AdjustRoll = "The breakable's roll will be rotated by RollDelta degrees while shaking."
AdjustYaw = "The breakable's yaw will be rotated by YawDelta degrees while shaking."
AICanSeeThrough = "The AI can see the player through this object."
AICanShootThrough = "The AI will think that they can shoot through this object. Whether or not their shots actually go through depends on its surface/solid properties."
AITriggerable = "Tell the AI that this is a door that they will need to interact with in order to path find through this area. If this flag is set to false, the AI will ignore the objects existence."
AITriggerName = "Triggers that are set to be AI triggerable can be set up to only respond to a specific AI. Enter the name of the specific AI that you want to activate the trigger in this field."
AlarmSound = "Sound the alarm will loop while active."
Alien = "The object's response when it detects an Alien character. Specify actions for Interest and Target below; Preferred characters are attacked before all others."
AlignToPath = "The KeyFramed objects will be rotated so their forward (blue) vector is facing in the direction the object is moving (i.e., down the path).\r\n\r\nNOTE:  If the KeyFramer's direction is reversed (i.e. the KeyFramer is sent the BACKWARD message), the objects will STILL be aligned facing in the KeyFramer's forward direction."
AllowInGameType = "The object will appear in the level if the property corresponding to the current game type is set to True."
AllowPlayerMovement = "The Player will be able to move around while this camera is active.  Make sure if you set this to true that the player will be able to see his model from the camera's viewpoint (if not the player may accidently move into a hazzard, or even kill himself)."
AllowRace = "A subset of properties controlling which species are allowed to use this node."
AllSkyPortals = "Engine will not use the vis for sky portal polies, but instead it will process ALL sky portal polies in the level to determine where it should draw the sky."
AllWindows = "Override the individual Window1-Window20 properties.  This is a convienence to make it easier to make it easier to create cinematics that always use windows."
Alpha = "The translucency of the object as a whole. If you want to use a texture without an alpha mask or fine-tune the alpha for a texture that does have an alpha mask, this is a useful property. A value of 1 is fully opaque, .5 is half-translucent and 0 is transparent."
AlphaEnd = "Relative opacity at the end point of the lightning bolt."
AlphaLifetime = "How long it takes to change between min and max alpha values."
AlphaStart = "Relative opacity at the creation point of the lightning bolt."
AltScale = "Scale for the new bolt if the bolt is burned and then re-soldered. This is a multiplicative value for each axis where '1.0' is the object's default scale, '2.0' is twice as large, etc."
AltSkin = ".dtx file to use as the skin on the new weld joint if the lock starts as a bolt, is burned and then soldered."
AlwaysLightMap = "This property is not used."
Ambient = "Sound will play as if it were coming from everywhere around you, but will get quieter as you move farther away from it.  Setting Ambient to FALSE means that the sound will play from a specific point."
AmbientColor = "This color is applied across the entire lightmap, raising the brightness of all shadows throughout the level."
AmbientList = "The DirectMusic segments that will play when the Ambient intensity level is active. Ambient is the lowest intensity level."
Amount = "This property defines the amount to shake in x, y, and z – that the camera will shake until the values decay to zero in all 3 axis...(max value is 20, good values are less than 3)."
AnglesVel0 = "These values determine the rotation velocity for each object created."
AnglesVel1 = "These values determine the rotation velocity for each object created."
AnglesVel2 = "These values determine the rotation velocity for each object created."
AnglesVel3 = "These values determine the rotation velocity for each object created."
AnglesVel4 = "These values determine the rotation velocity for each object created."
AnglesVel5 = "These values determine the rotation velocity for each object created."
AnglesVel6 = "These values determine the rotation velocity for each object created."
AnglesVel7 = "These values determine the rotation velocity for each object created."
AreaOfEffect = "This value defines how close the player needs to be to the object to feel the screen shake (leave -1 for the entire level)."
Armor = "The amount of armor the object has.  When the object takes BULLET, CRUSH, or EXPLODE damage, the amount of damage applied to the object will be reduced by the armor (no damage may be applied if the current armor value is greater than or equal to the damage amount). \r\n\r\n[0.0 up to MaxArmor]\r\n\r\n(See HitPoints, MaxHitPoints, and MaxArmor properties).\r\n"
AttachDir = "Direction (and magnitude) away from the center of the object that a ray is cast that looks for an object to attach to this object (when this object receives an Attach message)."
Attachments = "Using this field you can list objects, models, and worldmodels that will move with the door object while maintaining their relative position and rotation. This is commonly used to add prop door handles to doors. You can add multiple objects by using a semicolon inbetween the objects names. (Ex. Glass;Handle)"
AttachToObject = "Attaches a Trigger to an object, such as a Prop or a WorldModel. If the object moves, so does the trigger."
AttackSound = "Sound the object plays when it attacks."
AttributeName = "Reference to entry in bute file with additional object specifications."
AttributeOverrides = "Attributed (in AIButes.txt) properties that can be manually overriden"
AttributeTemplate = "Basic AI behavior templates, select the one most appropriate for this character. Templates are defined in the aibutes.txt attribute file."
BaseKeyName = "The base name of the keys that the KeyFramer object will follow. The first key must be named with the base name followed by 0. All subsequent keys must be named with the base name followed by two-digit increments. For example, if the BaseKeyName was 'Base', the keys would be named Base0, Base01, Base02, Base03, etc."
BeamAdditive = "The visible beam model will use additive blending. Additive blending adds overlapping color values together resulting in a brighter color."
BeamAlpha = "Adjusts the opacity of the visible light beam."
BeamRadius = "Size of the funnel of light at its furthest extent as measured in Dedit units."
BeamRotationTime = "How long it takes for the beam model to make one 360-degree rotation."
BezierNext = "After pulling out the first Bewzier handle, you can repeat the process to pull out the bezier handle on the 'out' side of the key. This field denotes the world coordinate position of that handle."
BezierPrev = "When making a key path it is possible to create Bezier Curves. While in Object mode, if you select one of the Keys in a key path, press the P key and drag the mouse while pressing the LMB, you will pull out the Bezier handle on the 'in' side of the key. This field denotes the world coordinate position of that handle."
Bias = "Sets the falloff of the sunlight on terrain between its Innercolor and its Outercolor based on the angle of the lighted face relative to the sun's angle. Its default of 1 indicates that light falls off linearly from a face that's dead-on towards the sun and one that's pointed straight away from it. Fractions (0.5, 0.25) mean that the sun falls off less rapidly and that the terrain has more light colored as InnerColor, whereas larger values (2, 3) will create a terrain with more OuterColor. Too much push in either direction can yield unnatural-looking lighting."
BigToSmall = "Create a Lightning bolt that begins wide, and becomes narrow at its end point."
BlackSmoke = "Smoke will be black instead of the default grey."
BlindCameraAngle = "The angle between the camera’s forward vector and the vector between the camera’s position and the search light’s position. When this angle is less the value supplied (and the BlindObjectAngle condition is met) the blind sprite will become visible and scale between MinBlindScale and MaxBlindScale."
BlindingFlare = "Automatically create a BlindingFlare."
BlindObjectAngle = "The angle between the ScaleSprite's forward vector and the vector between the camera’s position and the ScaleSprite's position. When this angle is less than the value supplied the blind sprite will become visible and scale between MinBlindScale and MaxBlindScale as this value goes to 0.0. Note that both BlindObjectAngle’s and BlindCameraAngle’s conditions must be met for the blind sprite to appear."
BlockLight = "Cause the object to block light and cast a shadow."
BodyTriggerable = "Trigger can be triggered by bodies."
BodyTriggerableName = "Specify the name of a specific body that will be allowed to trigger the trigger."
BoxPhysics = "[NOTE: BoxPhysics is currently disabled in code so this property has no effect.]\r\n\r\nIn the engine, WorldModels like the Door object have two possible physics models. In the first, the player can walk on and touch every curve and corner of their surface. In the second, the player can only interact with a bounding box that surrounds all the brushes in the Door, just like the box you would get if you selected them in DEdit. For doors with a simple rectangular shape, this is preferred because it's cheaper to calculate. However, for a lot of objects, it's limiting. If you need a player to be able to shoot through the bars in a prison door, you will need BoxPhysics set to FALSE."
BPrintMessage = "This field is not supported."
BreakSound = "The sound played when the object breaks."
BreakSoundRadius = "The radius of the break sound."
BreakTime = "How long it takes the object to break.  After the object is activated it will shake until the break time is up."
BrightScale = "A multiplier that acts like a dimmer switch. If set to 1, the light will be normal brightness. If you set to 1.5, it will be half again as bright. At 0.5, the light will be half-bright."
BurstWait = "A random value between BurstWaitMin and BurstWaitMax is multiplied by the BurstWait time to determine when the next burst of particles will occur."
BurstWaitMax = "See BurstWait."
BurstWaitMin = "See BurstWait."
BusySound = "The path to any .wav file may be entered here. The sound will be played in a loop while the RotatingWorldModel is spinning up to speed."
Camera = "The Camera flag is a subset of properties that define the characteristics of the camera object created by the CinematicTrigger object."
CanDamage = "This object will process damage messages (i.e., it will take damage).  If this value is set to False, the object will NOT process damage messages. (i.e., DamageTriggerMessage and DamagerMessage will NOT be sent.  If you want these messages to be sent, but DO NOT want the object to be destroyable, set CanDamage to True and NeverDestroy to True).\r\n\r\n(See NeverDestroy property)"
CanHeal = "This object will process heal messages (i.e., be able to use Health powerups to increase its HitPoints)."
CanRepair = "This object will process repair messages (i.e., be able to use Armor powerups to increase its Armor value)."
CanSkip = "The player can interrupt the cinematic trigger by pressing the action key in the game. If this flag is set to false, the cinematic trigger cannot be interrupted."
CastShadowsFlag = "This property is no longer used."
CDTrack = "Number of the track to play from the CD. [?]"
CharacterType = "Specific character attribute sets from the characterbutes.txt attributes file. Choose the one appropriate to your character."
Chromakey = "Some textures create transparent and opaque areas defined by an alpha channel. Setting this flag to true tells the object to make use of this alpha mask."
Chrome = "Environment map texture specified in the WorldProperties object will render over the object's texture to produce a shiny, reflective effect. Note that this will also double the object's polycount as the engine has to render it twice per frame."
CleanUpTriggerMsg = "This message is sent when the CinematicTrigger ends naturally, or when it ends as a result of being interrupted by the player."
CleanUpTriggerTarget = "The name of the object that should receive the CleanUpTriggerMessage."
ClipLight = "This flag determines whether or not the light will be stopped by WorldGeometry, or pass right through."
ClosedCommand = "You may enter a command string here that will be sent every time the door completes its travel to the closed state."
ClosingCommand = "You may enter a command string here that will be sent every time the door starts its travel to the closed state."
CloseSound = "Sound to play when the door completes its path of motion when closing."
CloseWaitTime = "Time in seconds before the door can be triggered again after being triggered closed."
ClosingSpeed = "Speed at which the door will close measured in Dedit units per second."
Color = "The color that the light will emit. You select the color from Windows' color picker dialog."
Color1 = "The particles that are generated can be different colors. By specifying two colors, a color gradient will be created. The particles will be created in random colors from within this gradient. This is the first color used to define this gradient."
Color2 = "Second color in the gradient used to define the color of the generated particles."
ColorMax0 = "The ColorMin and ColorMax values define a range of random color that will be applied to the objects created."
ColorMax1 = "The ColorMin and ColorMax values define a range of random color that will be applied to the objects created."
ColorMax2 = "The ColorMin and ColorMax values define a range of random color that will be applied to the objects created."
ColorMax3 = "The ColorMin and ColorMax values define a range of random color that will be applied to the objects created."
ColorMax4 = "The ColorMin and ColorMax values define a range of random color that will be applied to the objects created."
ColorMax5 = "The ColorMin and ColorMax values define a range of random color that will be applied to the objects created."
ColorMax6 = "The ColorMin and ColorMax values define a range of random color that will be applied to the objects created."
ColorMax7 = "The ColorMin and ColorMax values define a range of random color that will be applied to the objects created."
ColorMin1 = "The ColorMin and ColorMax values define a range of random color that will be applied to the objects created."
ColorMin2 = "The ColorMin and ColorMax values define a range of random color that will be applied to the objects created."
ColorMin3 = "The ColorMin and ColorMax values define a range of random color that will be applied to the objects created."
ColorMin4 = "The ColorMin and ColorMax values define a range of random color that will be applied to the objects created."
ColorMin5 = "The ColorMin and ColorMax values define a range of random color that will be applied to the objects created."
ColorMin6 = "The ColorMin and ColorMax values define a range of random color that will be applied to the objects created."
ColorMin7 = "The ColorMin and ColorMax values define a range of random color that will be applied to the objects created."
Commands = "A subset of messages and commands that will govern the AIs behavior beyond that dictated by its goals."
Constant = "Create a Lightning bolt that maintains a constant width for the length of its travel."
Corporate = "The object's response when it detects a Corporate character. Specify actions for Interest and Target below; Preferred characters are attacked before all others."
Count0 = "This value determines how many objects of this type should exist at any given time."
Count1 = "This value determines how many objects of this type should exist at any given time."
Count2 = "This value determines how many objects of this type should exist at any given time."
Count3 = "This value determines how many objects of this type should exist at any given time."
Count4 = "This value determines how many objects of this type should exist at any given time."
Count5 = "This value determines how many objects of this type should exist at any given time."
Count6 = "This value determines how many objects of this type should exist at any given time."
Count7 = "This value determines how many objects of this type should exist at any given time."
CoverInfo = "Subset of properties dealing with the AI's behavior at the cover node."
CoverObject = "This property is not supported."
Cower = "The AI will cower at this node."
CowerSound = "Sound to play when cowering."
CreateCamera = "Determines whether or not the CinematicTrigger object automatically creates a camera or not."
CreateExplosion = "Explosion will be created when this object is destroyed."
CreateKeyFramer = "Determines whether or not the CinematicTrigger object automatically creates a KeyFramer object or not."
CreateLight = "Automatically creates a dynamic light for the object. Dynamic lights take CPU time, so only use when necessary."
CreateSprite = "Create a blinding flare."
Crouch = "Tell the AI to crouch when they reach this node. They may stand briefly to shoot at a target."
CruisingList = "The DirectMusic segments that will play when the Cruising intensity level is active. Cruising is midway between Ambient and Hard-Driving."
CrushObjects = "Crush any objects this object touches while it is falling (i.e., after it breaks, before it hits the ground)."
Current = "A force that pushes against the player. Use positive or negative values along each axis (x, y, and z) to indicate the direction and strength of the current. In general, you'll need values in the thousands in order to lift a player off the ground. This works well to create moving streams or areas of rushing wind."
Damage = "Sets amount of damage dealt by this area for every second the player is in it."
DamagedFilename = "Each ScaleSprite can display three different .spr files that represent three stages damage. This would display a damaged version of the .spr entered in the FileName field."
DamageProperties = "These properties control an object's ability to be damaged."
DamageRadius = "This the radius measured in Dedit units in which a character will take damage from the explosion."
DamagerMessage = "If specified, the DamagerMessage is sent to the object that damaged this object if the CanDamage property is set to True.\r\n\r\n(See CanDamage)"
DamageTriggerCounter = "This specifies how many times the object must be damaged before the damage message will be sent."
DamageTriggerMessage = "If specified, the DamageTriggerMessage is sent to the DamageTriggerTarget object(s) when this object is damage if the CanDamage property is set to True.\r\n\r\n(See CanDamage)"
DamageTriggerNumSends = "This specifies the number of times to send the the DamageTriggerMessage.  Set this value to -1 if you don't want to limit the number of times the message can be sent.\r\n\r\n(See DamageTriggerTarget and DamageTriggerMessage)"
DamageTriggerTarget = "If specified, the DamageTriggerMessage is sent to the DamageTriggerTarget object(s) when this object is damage if the CanDamage property is set to True.\r\n\r\n(See CanDamage)"
DamageType = "Choose the damage type this object will inflict. Listed in the weapons.txt attribute file."
DeactivateTarget = "Object that will be sent the DeactivateMessage when the alarm is shut off."
DeathTriggerMessage = "If specified, the DeathTriggerMessage is sent to the DeathTriggerTarget object(s) when this object dies (i.e., when its HitPoints = 0)."
DeathTriggerTarget = "The case-sensitive name of the object(s) to send the DeathTriggerMessage to.  If specified, the DeathTriggerMessage is sent to the DeathTriggerTarget object(s) when this object dies (i.e., when its HitPoints = 0)"
DebrisType = "Type of debris that will be spawned by the destruction of the object."
Decisions1 = "This field is used when the player can choose between two or more lines of dialogue. Put two or more IDs on this line, delimited by semi-colons. These IDs, which reference lines of text in the clientres.dll, are the player's possible responses. They appear in a pop-up box, along with the text of the preceding dialogue."
Decisions2 = "This field is used when the player can choose between two or more lines of dialogue. Put two or more IDs on this line, delimited by semi-colons. These IDs, which reference lines of text in the clientres.dll, are the player's possible responses. They appear in a pop-up box, along with the text of the preceding dialogue."
Decisions3 = "This field is used when the player can choose between two or more lines of dialogue. Put two or more IDs on this line, delimited by semi-colons. These IDs, which reference lines of text in the clientres.dll, are the player's possible responses. They appear in a pop-up box, along with the text of the preceding dialogue."
Decisions4 = "This field is used when the player can choose between two or more lines of dialogue. Put two or more IDs on this line, delimited by semi-colons. These IDs, which reference lines of text in the clientres.dll, are the player's possible responses. They appear in a pop-up box, along with the text of the preceding dialogue."
Decisions5 = "This field is used when the player can choose between two or more lines of dialogue. Put two or more IDs on this line, delimited by semi-colons. These IDs, which reference lines of text in the clientres.dll, are the player's possible responses. They appear in a pop-up box, along with the text of the preceding dialogue."
Decisions6 = "This field is used when the player can choose between two or more lines of dialogue. Put two or more IDs on this line, delimited by semi-colons. These IDs, which reference lines of text in the clientres.dll, are the player's possible responses. They appear in a pop-up box, along with the text of the preceding dialogue."
Decisions7 = "This field is used when the player can choose between two or more lines of dialogue. Put two or more IDs on this line, delimited by semi-colons. These IDs, which reference lines of text in the clientres.dll, are the player's possible responses. They appear in a pop-up box, along with the text of the preceding dialogue."
Decisions8 = "This field is used when the player can choose between two or more lines of dialogue. Put two or more IDs on this line, delimited by semi-colons. These IDs, which reference lines of text in the clientres.dll, are the player's possible responses. They appear in a pop-up box, along with the text of the preceding dialogue."
Decisions9 = "This field is used when the player can choose between two or more lines of dialogue. Put two or more IDs on this line, delimited by semi-colons. These IDs, which reference lines of text in the clientres.dll, are the player's possible responses. They appear in a pop-up box, along with the text of the preceding dialogue."
Decisions10 = "This field is used when the player can choose between two or more lines of dialogue. Put two or more IDs on this line, delimited by semi-colons. These IDs, which reference lines of text in the clientres.dll, are the player's possible responses. They appear in a pop-up box, along with the text of the preceding dialogue."
Decisions11 = "This field is used when the player can choose between two or more lines of dialogue. Put two or more IDs on this line, delimited by semi-colons. These IDs, which reference lines of text in the clientres.dll, are the player's possible responses. They appear in a pop-up box, along with the text of the preceding dialogue."
Decisions12 = "This field is used when the player can choose between two or more lines of dialogue. Put two or more IDs on this line, delimited by semi-colons. These IDs, which reference lines of text in the clientres.dll, are the player's possible responses. They appear in a pop-up box, along with the text of the preceding dialogue."
Decisions13 = "This field is used when the player can choose between two or more lines of dialogue. Put two or more IDs on this line, delimited by semi-colons. These IDs, which reference lines of text in the clientres.dll, are the player's possible responses. They appear in a pop-up box, along with the text of the preceding dialogue."
Decisions14 = "This field is used when the player can choose between two or more lines of dialogue. Put two or more IDs on this line, delimited by semi-colons. These IDs, which reference lines of text in the clientres.dll, are the player's possible responses. They appear in a pop-up box, along with the text of the preceding dialogue."
Decisions15 = "This field is used when the player can choose between two or more lines of dialogue. Put two or more IDs on this line, delimited by semi-colons. These IDs, which reference lines of text in the clientres.dll, are the player's possible responses. They appear in a pop-up box, along with the text of the preceding dialogue."
Decisions16 = "This field is used when the player can choose between two or more lines of dialogue. Put two or more IDs on this line, delimited by semi-colons. These IDs, which reference lines of text in the clientres.dll, are the player's possible responses. They appear in a pop-up box, along with the text of the preceding dialogue."
Decisions17 = "This field is used when the player can choose between two or more lines of dialogue. Put two or more IDs on this line, delimited by semi-colons. These IDs, which reference lines of text in the clientres.dll, are the player's possible responses. They appear in a pop-up box, along with the text of the preceding dialogue."
Decisions18 = "This field is used when the player can choose between two or more lines of dialogue. Put two or more IDs on this line, delimited by semi-colons. These IDs, which reference lines of text in the clientres.dll, are the player's possible responses. They appear in a pop-up box, along with the text of the preceding dialogue."
Decisions19 = "This field is used when the player can choose between two or more lines of dialogue. Put two or more IDs on this line, delimited by semi-colons. These IDs, which reference lines of text in the clientres.dll, are the player's possible responses. They appear in a pop-up box, along with the text of the preceding dialogue."
Decisions20 = "This field is used when the player can choose between two or more lines of dialogue. Put two or more IDs on this line, delimited by semi-colons. These IDs, which reference lines of text in the clientres.dll, are the player's possible responses. They appear in a pop-up box, along with the text of the preceding dialogue."
DefaultSpawn = "What spawns in when the Spawner receives a 'default' message, as from the RandomSpawner object. This must be object from the object list in DEdit, ie Beetle, Striker, etc. Objects spawn with default values; you'll have to specify specific values. The easiest way to do this is to add the object in DEdit and look at the names and values of the properties you're interested in. True/False are written 1/0, property names are separated by semicolons:\r\n<ObjectType> <Property1Name> <Property1Value>; <Property2Name> <Property2Value>; ...\r\n\r\nFor instance, to spawn in a single Pistol in multiplayer:\r\nPickupObject Pickup Weapon_MPistol; ForceNoRespawn 1\r\n\r\nYou can also send these spawn messages to the Spawner from other objects."
Delay1 = "A period of time in seconds before the numerically corresponding line of dialog is delivered."
Delay2 = "A period of time in seconds before the numerically corresponding line of dialog is delivered."
Delay3 = "A period of time in seconds before the numerically corresponding line of dialog is delivered."
Delay4 = "A period of time in seconds before the numerically corresponding line of dialog is delivered."
Delay5 = "A period of time in seconds before the numerically corresponding line of dialog is delivered."
Delay6 = "A period of time in seconds before the numerically corresponding line of dialog is delivered."
Delay7 = "A period of time in seconds before the numerically corresponding line of dialog is delivered."
Delay8 = "A period of time in seconds before the numerically corresponding line of dialog is delivered."
Delay9 = "A period of time in seconds before the numerically corresponding line of dialog is delivered."
Delay10 = "A period of time in seconds before the numerically corresponding line of dialog is delivered."
Delay11 = "A period of time in seconds before the numerically corresponding line of dialog is delivered."
Delay12 = "A period of time in seconds before the numerically corresponding line of dialog is delivered."
Delay13 = "A period of time in seconds before the numerically corresponding line of dialog is delivered."
Delay14 = "A period of time in seconds before the numerically corresponding line of dialog is delivered."
Delay15 = "A period of time in seconds before the numerically corresponding line of dialog is delivered."
Delay16 = "A period of time in seconds before the numerically corresponding line of dialog is delivered."
Delay17 = "A period of time in seconds before the numerically corresponding line of dialog is delivered."
Delay18 = "A period of time in seconds before the numerically corresponding line of dialog is delivered."
Delay19 = "A period of time in seconds before the numerically corresponding line of dialog is delivered."
Delay20 = "A period of time in seconds before the numerically corresponding line of dialog is delivered."
DestroyAfterBreak = "Breakable will be destroyed after it breaks."
DestroyedFilename = "Specifies the file that contains a destroyed representation of the object."
DestroyedSkin = "Specifies the texture or textures (.DTX files) to use for the skin of the damaged version of the model."
DestroyOnImpact = "Breakable will be destroyed when it hits the ground (i.e., after it breaks and it falls to the ground)."
DetailLevel = "All brushes that form the outside shell of the world and those used to block vis should be set to detail level 0. All other brushes should be set to detail level 1. Brushes set to detail level 1 are not figured into the vis."
DetailTexture = "Specifies if the prop model should use a detail texture.  The model must specify the detail texture in its command string (e.g., DetailTex WorldTextures\DetailTex\dt01.dtx)."
DetectInterest = "Action to take when detecting something set to Interest the object. Sleep causes the object to appear inactive, Sweep moves its aim back and forth as if scanning, Track aims at the detected object while it remains in range, Fire attacks the detected object."
DetectTarget = "Action to take when detecting a valid Target. Sleep causes the object to appear inactive, Sweep moves its aim back and forth as if scanning, Track aims at the detected object while it remains in range, Fire attacks the detected object."
Dialogue = "Subset of properties used to define conversation between characters in the game."
DialogeDoneTriggerMsg = "A message sent at the end of the dialogue. This message is only sent if the dialog finishes naturally. If the player interrupts the dialogue, this message does not get sent."
Dialogue1 = "The ID number of the .wav file containing the line of dialogue to be played."
Dialogue2 = "The ID number of the .wav file containing the line of dialogue to be played."
Dialogue3 = "The ID number of the .wav file containing the line of dialogue to be played."
Dialogue4 = "The ID number of the .wav file containing the line of dialogue to be played."
Dialogue5 = "The ID number of the .wav file containing the line of dialogue to be played."
Dialogue6 = "The ID number of the .wav file containing the line of dialogue to be played."
Dialogue7 = "The ID number of the .wav file containing the line of dialogue to be played."
Dialogue8 = "The ID number of the .wav file containing the line of dialogue to be played."
Dialogue9 = "The ID number of the .wav file containing the line of dialogue to be played."
Dialogue10 = "The ID number of the .wav file containing the line of dialogue to be played."
Dialogue11 = "The ID number of the .wav file containing the line of dialogue to be played."
Dialogue12 = "The ID number of the .wav file containing the line of dialogue to be played."
Dialogue13 = "The ID number of the .wav file containing the line of dialogue to be played."
Dialogue14 = "The ID number of the .wav file containing the line of dialogue to be played."
Dialogue15 = "The ID number of the .wav file containing the line of dialogue to be played."
Dialogue16 = "The ID number of the .wav file containing the line of dialogue to be played."
Dialogue17 = "The ID number of the .wav file containing the line of dialogue to be played."
Dialogue18 = "The ID number of the .wav file containing the line of dialogue to be played."
Dialogue19 = "The ID number of the .wav file containing the line of dialogue to be played."
Dialogue20 = "The ID number of the .wav file containing the line of dialogue to be played."
DialogueDoneTriggerTarget = "The name of the object that should receive the DialogueDoneTriggerMsg."
DialogueStartTriggerMsg = "A message sent at the beginning of the dialogue."
DialogueStartTriggerTarget = "The name of the object that should receive the DialogueStartTriggerMessage."
Dims = "Size of the object."
DirectionalLight = "Adds global sunlighting to lighting calculations.  Note that this will also ignore the vertex normals when calculating vertex colors."
DirLight = "Controls whether the light is directional."
DirLightRadius = "Falloff radius of the directional light in Dedit units."
DontLightBackfacingFlag = "Light will not light backfacing polies. Useful to keep lights from shining through walls, for instance."
DoorLink = "Use this to link two doors together that you would like to open at the same time (i.e., Door1's DoorLink would be Door2, and Door2's DoorLink would be Door1).  NOTE--Only the opening of linked doors is supported. Each door may be closed individually."
DripEffect = "Type of drip effect to use. Note that the more intense effects require more processing power--it is advisable to severely limit the number of simultaneously active drippers."
DynamicLight = "The DynamicLight flag is a subset of properties that define the characteristics of the dynamic light created by the Lightning object."
Effect = "A surface effect applied to a brush. See EffectParam for usage. some effects are Pan, Rotate, and Warble."
EffectParam = "Pan: <U panspeed> <L panspeed>\r\nSpeeds are in texels per second.\r\nExample: 20 30\r\n\r\nRotate: <center> <degrees per second>\r\n'center' controls the center of rotation on the polygon. 'C' rotates around the center of the polygon; if you want to rotate around a corner the format is 'XYZ' where each axis is set to either 'B' for back or 'F' for front.\r\nExample: FFB 20\r\n\r\nWarble: <center> <U speed> <L speed>\r\n'center' is used as described for the Rotate effect. Speeds are in radians per second and control the speed of the warp in each direction.\r\nExample: C 0.3 1"
EndCommand = "Command string that is sent when the timer finishes counting down to 0."
EndPos = "World coordinates where the lightning will strike. The bolt will start at the position where the object is placed, and end here. NOTE: This is a coordinate, not a vector, despite what the editing window says."
EndScale = "Size of the particle at the end of its travel. The value entered in this field is a multiplier relative to the ParticleRadius value."
EnvironmentMap = "This points to a .dtx file that will be used as the environment map for all of the models in the level. The environment map will show up on the model if the object has Chrome=True."
Event1 = "Subset of properties that define the first of five sets of possible events."
Event2 = "Subset of properties that define the first of five sets of possible events."
Event3 = "Subset of properties that define the first of five sets of possible events."
Event4 = "Subset of properties that define the first of five sets of possible events."
Event5 = "Subset of properties that define the first of five sets of possible events."
Event6 = "Subset of properties that define the first of five sets of possible events."
Event1DecToValCmd = "Command string that will be sent if the EventValue for this Event has been reached through incremental descent."
Event2DecToValCmd = "Command string that will be sent if the EventValue for this Event has been reached through incremental descent."
Event3DecToValCmd = "Command string that will be sent if the EventValue for this Event has been reached through incremental descent."
Event4DecToValCmd = "Command string that will be sent if the EventValue for this Event has been reached through incremental descent."
Event5DecToValCmd = "Command string that will be sent if the EventValue for this Event has been reached through incremental descent."
Event6DecToValCmd = "Command string that will be sent if the EventValue for this Event has been reached through incremental descent."
Event1IncToValCmd = "Command string that will be sent if the EventValue for this Event has been reached through incremental ascension."
Event2IncToValCmd = "Command string that will be sent if the EventValue for this Event has been reached through incremental ascension."
Event3IncToValCmd = "Command string that will be sent if the EventValue for this Event has been reached through incremental ascension."
Event4IncToValCmd = "Command string that will be sent if the EventValue for this Event has been reached through incremental ascension."
Event5IncToValCmd = "Command string that will be sent if the EventValue for this Event has been reached through incremental ascension."
Event6IncToValCmd = "Command string that will be sent if the EventValue for this Event has been reached through incremental ascension."
Event1Value = "Numeric value at which either the EventIncToValCmd or EventDecToValCmd will be sent."
Event2Value = "Numeric value at which either the EventIncToValCmd or EventDecToValCmd will be sent."
Event3Value = "Numeric value at which either the EventIncToValCmd or EventDecToValCmd will be sent."
Event4Value = "Numeric value at which either the EventIncToValCmd or EventDecToValCmd will be sent."
Event5Value = "Numeric value at which either the EventIncToValCmd or EventDecToValCmd will be sent."
Event6Value = "Numeric value at which either the EventIncToValCmd or EventDecToValCmd will be sent."
EventDecToValCmd = "Command string that will be sent if the EventValue for this Event has been reached through incremental descent."
EventIncToValCmd = "Command string that will be sent if the EventValue for this Event has been reached through incremental ascension."
EventValue = "Numeric value at which either the EventIncToValCmd or EventDecToValCmd will be sent."
ExitData = "Where does the player go from here? Values defined in Missions.txt."
ExplosionProperties = "Explosion/weapon related properties.\r\n\r\nNOTE:  Send the FIRE message to this object to make the weapon fire."
Expression1 = "What expression the character speaking should be using. (ie. Curious, Scared, or Angry.) 2 numbers can be used after these expressions to indicate when to start playing this expression and for how long. (Ex. Curious 3 5 = The character waits 3 seconds before playing its curious animation which will last for 5 seconds.)"
Expression2 = "What expression the character speaking should be using. (ie. Curious, Scared, or Angry.) 2 numbers can be used after these expressions to indicate when to start playing this expression and for how long. (Ex. Curious 3 5 = The character waits 3 seconds before playing its curious animation which will last for 5 seconds.)"
Expression3 = "What expression the character speaking should be using. (ie. Curious, Scared, or Angry.) 2 numbers can be used after these expressions to indicate when to start playing this expression and for how long. (Ex. Curious 3 5 = The character waits 3 seconds before playing its curious animation which will last for 5 seconds.)"
Expression4 = "What expression the character speaking should be using. (ie. Curious, Scared, or Angry.) 2 numbers can be used after these expressions to indicate when to start playing this expression and for how long. (Ex. Curious 3 5 = The character waits 3 seconds before playing its curious animation which will last for 5 seconds.)"
Expression5 = "What expression the character speaking should be using. (ie. Curious, Scared, or Angry.) 2 numbers can be used after these expressions to indicate when to start playing this expression and for how long. (Ex. Curious 3 5 = The character waits 3 seconds before playing its curious animation which will last for 5 seconds.)"
Expression6 = "What expression the character speaking should be using. (ie. Curious, Scared, or Angry.) 2 numbers can be used after these expressions to indicate when to start playing this expression and for how long. (Ex. Curious 3 5 = The character waits 3 seconds before playing its curious animation which will last for 5 seconds.)"
Expression7 = "What expression the character speaking should be using. (ie. Curious, Scared, or Angry.) 2 numbers can be used after these expressions to indicate when to start playing this expression and for how long. (Ex. Curious 3 5 = The character waits 3 seconds before playing its curious animation which will last for 5 seconds.)"
Expression8 = "What expression the character speaking should be using. (ie. Curious, Scared, or Angry.) 2 numbers can be used after these expressions to indicate when to start playing this expression and for how long. (Ex. Curious 3 5 = The character waits 3 seconds before playing its curious animation which will last for 5 seconds.)"
Expression9 = "What expression the character speaking should be using. (ie. Curious, Scared, or Angry.) 2 numbers can be used after these expressions to indicate when to start playing this expression and for how long. (Ex. Curious 3 5 = The character waits 3 seconds before playing its curious animation which will last for 5 seconds.)"
Expression10 = "What expression the character speaking should be using. (ie. Curious, Scared, or Angry.) 2 numbers can be used after these expressions to indicate when to start playing this expression and for how long. (Ex. Curious 3 5 = The character waits 3 seconds before playing its curious animation which will last for 5 seconds.)"
Expression11 = "What expression the character speaking should be using. (ie. Curious, Scared, or Angry.) 2 numbers can be used after these expressions to indicate when to start playing this expression and for how long. (Ex. Curious 3 5 = The character waits 3 seconds before playing its curious animation which will last for 5 seconds.)"
Expression12 = "What expression the character speaking should be using. (ie. Curious, Scared, or Angry.) 2 numbers can be used after these expressions to indicate when to start playing this expression and for how long. (Ex. Curious 3 5 = The character waits 3 seconds before playing its curious animation which will last for 5 seconds.)"
Expression13 = "What expression the character speaking should be using. (ie. Curious, Scared, or Angry.) 2 numbers can be used after these expressions to indicate when to start playing this expression and for how long. (Ex. Curious 3 5 = The character waits 3 seconds before playing its curious animation which will last for 5 seconds.)"
Expression14 = "What expression the character speaking should be using. (ie. Curious, Scared, or Angry.) 2 numbers can be used after these expressions to indicate when to start playing this expression and for how long. (Ex. Curious 3 5 = The character waits 3 seconds before playing its curious animation which will last for 5 seconds.)"
Expression15 = "What expression the character speaking should be using. (ie. Curious, Scared, or Angry.) 2 numbers can be used after these expressions to indicate when to start playing this expression and for how long. (Ex. Curious 3 5 = The character waits 3 seconds before playing its curious animation which will last for 5 seconds.)"
Expression16 = "What expression the character speaking should be using. (ie. Curious, Scared, or Angry.) 2 numbers can be used after these expressions to indicate when to start playing this expression and for how long. (Ex. Curious 3 5 = The character waits 3 seconds before playing its curious animation which will last for 5 seconds.)"
Expression17 = "What expression the character speaking should be using. (ie. Curious, Scared, or Angry.) 2 numbers can be used after these expressions to indicate when to start playing this expression and for how long. (Ex. Curious 3 5 = The character waits 3 seconds before playing its curious animation which will last for 5 seconds.)"
Expression18 = "What expression the character speaking should be using. (ie. Curious, Scared, or Angry.) 2 numbers can be used after these expressions to indicate when to start playing this expression and for how long. (Ex. Curious 3 5 = The character waits 3 seconds before playing its curious animation which will last for 5 seconds.)"
Expression19 = "What expression the character speaking should be using. (ie. Curious, Scared, or Angry.) 2 numbers can be used after these expressions to indicate when to start playing this expression and for how long. (Ex. Curious 3 5 = The character waits 3 seconds before playing its curious animation which will last for 5 seconds.)"
Expression20 = "What expression the character speaking should be using. (ie. Curious, Scared, or Angry.) 2 numbers can be used after these expressions to indicate when to start playing this expression and for how long. (Ex. Curious 3 5 = The character waits 3 seconds before playing its curious animation which will last for 5 seconds.)"
FallVelocity = "Speed at which the object falls."
FarZ = "Distance of the farZ-clipping plane for the level."
FastLightObjects = "This light will only cast a very simplified light on models. If it's FALSE, the light will cast more accurate light on the model. Because the more accurate light requires many more render ticks it is suggested that you leave this property set to TRUE except for isolated lights where you need a strong model lighting effect."
Filename = "Specifies the file associated with this object.  If this object is a Model, the filename must be a valid model (*.abc) file.  If this object is a Sprite, the filename must be a valid sprite (*.spr) file.  If this object is a sound, the filename must be a valid sound (*.wav) file."
Filename0 = "Path to the .abc .spr or .dtx file that is to be used as the sprinkles object."
Filename1 = "Path to the .abc .spr or .dtx file that is to be used as the sprinkles object."
Filename2 = "Path to the .abc .spr or .dtx file that is to be used as the sprinkles object."
Filename3 = "Path to the .abc .spr or .dtx file that is to be used as the sprinkles object."
Filename4 = "Path to the .abc .spr or .dtx file that is to be used as the sprinkles object."
Filename5 = "Path to the .abc .spr or .dtx file that is to be used as the sprinkles object."
Filename6 = "Path to the .abc .spr or .dtx file that is to be used as the sprinkles object."
Filename7 = "Path to the .abc .spr or .dtx file that is to be used as the sprinkles object."
FireObjFX = "Select the FX the object will use."
Flags = "This property is not supported."
FlatShade = "Tells the brush to be rendered using flat shading, which, as the name implies, lights each surface one flat shade based on an average of the light across the entire face."
FlushWithWorld = "ScaleSprite will be projected down the negative Z-axis onto any geometry."
FogColor = "The color of the fog effect."
FogDisable = "The object is not affected by fog."
FogEnable = "Enable fog effects."
FogFarZ = "Distance from the camera beyond which the fog is opaque."
FogInfo = "Subset of properties that define the overall fogging effects for the entire level."
FogNearZ = "Distance from the camera where the fog begins."
FogStuff = "Subset of properties that define the fog effects that will be seen when the player is within the Volume Brush."
ForceMove = "Object will not be stopped by the player or AI. Actually, it will move the player and the AI."
FOV = "The vertical/horizontal field of view of the object."
Frequency = "How often a shake occurs.  Every 'frequency' seconds a shake will occur if the ScreenShake object is active (i.e., an ON message has been sent to it)."
Friction = "The friction coefficient of the volume. 1 is normal friction, 0 is no friction, 2 is twice normal friction, etc."
FrictionCoefficient = "This property is not supported. Use an Ice volume instead."
FullyBright = "Sets the brush to be rendered as if its entire surface is fully illuminated, no matter what actual light reaches it."
Glow = "Determines whether the ScaleSprite will scale as the viewing angle and distance changes."
Goals = "A subset of properties governing the AI's behavior. Set with the Attack and Investigate goals by default."
GouraudShade = "Tells the brush to be rendered using Gouraud shading, which is essentially vertex lighting. You may experience some “swimming” effects with Gouraud shaded surfaces if the light value on a given surface is greatly different from that on another."
Gravity = "Engine will try to cause the object to fall downward. Only set this to True if something will push the object somewhere where it may fall, as Gravity=True greatly increases the CPU time taken by the object."
Group00 = "A selection of objects you want considered for removal. When a Group is chosen for removal, all objects belonging to that group are removed."
Group01 = "A selection of objects you want considered for removal. When a Group is chosen for removal, all objects belonging to that group are removed."
Group02 = "A selection of objects you want considered for removal. When a Group is chosen for removal, all objects belonging to that group are removed."
Group03 = "A selection of objects you want considered for removal. When a Group is chosen for removal, all objects belonging to that group are removed."
Group04 = "A selection of objects you want considered for removal. When a Group is chosen for removal, all objects belonging to that group are removed."
Group05 = "A selection of objects you want considered for removal. When a Group is chosen for removal, all objects belonging to that group are removed."
Group00Object00 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group00Object01 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group00Object02 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group00Object03 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group00Object04 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group00Object05 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group01Object00 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group01Object01 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group01Object02 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group01Object03 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group01Object04 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group01Object05 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group02Object00 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group02Object01 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group02Object02 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group02Object03 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group02Object04 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group02Object05 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group03Object00 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group03Object01 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group03Object02 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group03Object03 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group03Object04 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group03Object05 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group04Object00 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group04Object01 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group04Object02 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group04Object03 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group04Object04 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group04Object05 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group05Object00 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group05Object01 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group05Object02 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group05Object03 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group05Object04 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
Group05Object05 = "Assign an object to the group. You can input multiple objects in a single line separated by semicolons."
GroupsToKeep = "This value determines how many of the groups to keep. When active (usually at level load) the ObjectRemover will draw from the entered groups of objects and remove all but this number of groups, randomly selected, as well as itself."
HarddrivingList = "The DirectMusic segments that will play when the Hard Driving intensity level is active. Hard Driving is the most intense music level."
HearAllyBattleCryMessage = "Message sent to HearAllyBattleCryTarget when the AI hears an ally's battle cry."
HearAllyBattleCryTarget = "The HearAllyBattleCryMessage will be sent to this object."
HearAllyPainMessage = "Message sent to HearAllyPainTarget when the AI hears an ally's cry out in pain."
HearAllyPainTarget = "The HearAllyPainMessage will be sent to this object."
HearAllyWeaponFireMessage = "Message sent to HearAllyWeaponFireTarget when the AI hears an ally's weapon fire."
HearAllyWeaponFireTarget = "The HearAllyWeaponFireMessage will be sent to this object."
HearDeathMessage = "Message sent to HearDeathTarget when the AI hears a character die."
HearDeathTarget = "The HearDeathMessage will be sent to this object."
HearEnemyFootstepMessage = "Message sent to HearEnemyFootstepTarget when the AI hears an enemy's footstep."
HearEnemyFootstepTarget = "The HearEnemyFootstepMessage will be sent to this object."
HearEnemyTauntMessage = "Message sent to HearEnemyTauntTarget when the AI hears an enemy's taunt."
HearEnemyTauntTarget = "The HearEnemyTauntMessage will be sent to this object."
HearEnemyWeaponFireMessage = "Message sent to HearEnemyWeaponFireTarget when the AI hears an enemy's weapon fire."
HearEnemyWeaponFireTarget = "The HearEnemyWeaponFireMessage will be sent to this object."
HearTurretWeaponFireMessage = "Message sent to HearTurretWeaponFireTarget when the AI hears a turret's weapon fire."
HearTurretWeaponFireTarget = "The HearTurretWeaponFireMessage will be sent to this object."
HeavyRain = "Generates 'heavy' rain particles."
HeavySnow = "Generates 'heavy' snow particles."
Head = "Attachment for the character's head."
Helmet = "Attachment for the character's helmet."
Hidden = "Allows you to make a volume begin hidden in the level. Later you can send a (hidden 0) message to the VolumeBrush object to unhide it."
HitPoints = "The amount of damage the object can take before it is destroyed.\r\n\r\n[0.0 up to MaxHitPoints]\r\n\r\n(See MaxHitPoints, Armor, and MaxArmor properties)."
HullMaker = "Tell the processor that this brush is a HullMaker. A hullmaker is a 'brush' that creates a manual hull, which is used by the visibility list to determine what you can see from any given point in a level. Carefully placed hullmakers can reduce polycounts, overdraw, and texture memory usage. A hullmaker must be a zero thickness brush, which you can create in geometry mode."
Idle = "Action taken when the object does not have a target, until the MaxIdleTime is reached. Sweep will look back and forth for a target, Sleep will cause the object to appear inactive."
IdleTimeOut = "What the object will do when it has been in the Idle state for longer than the MaxIdleTime."
IgnoreOffsets = "Objects being keyframed will be moved and rotated based purely on the postion/rotation of the Keys making up the path.  \r\n\r\nIf this value is set to False, the original position and rotation offsets (i.e., the difference between the object's starting position / rotation and the first key's position / rotation) will be taken into account when calculating the object's new postion and rotation.\r\n\r\n(See Key object)"
ImpactFXName = "Type of explosion effect that will be used."
ImpactSound = "The sound made when the object impacts with another surface after 'breaking'."
ImpactSoundRadius = "Radius of the ImpactSound falloff measured in Dedit units."
Index = "The object's index determines the order in which it's drawn. Objects with low Index values are rendered first (and thus at the back), while objects with a higher index are rendered last and at the front."
InitialMessage = "The message that gets sent to the AI right when it gets spawned. (Ex. trg player [trg = target])"
InnerColor = "Color of the light at the exact center of the Light object. Light falls off gradually from this center point."
InnerColorEnd = "This would be the second stage."
InnerColorStart = "The Lightning effect cross fades colors from the core to the edges of the Lightning bolt in four stages. This color would be the very core of the bolt, the first stage."
InnerPercentX = "Amount of player motion that's passed on to the camera rendering the sky. If the value is set to 0.100, only ten percent of the player's movement will be passed on to the camera. Camera movement is used to simulate parallax movement of objects in the sky. Be sure that if you give the cameras a lot of motion, you'll need to make your skybox large enough that the camera doesn't move outside it."
InnerPercentY = "Amount of player motion that's passed on to the camera rendering the sky. If the value is set to 0.100, only ten percent of the player's movement will be passed on to the camera. Camera movement is used to simulate parallax movement of objects in the sky. Be sure that if you give the cameras a lot of motion, you'll need to make your skybox large enough that the camera doesn't move outside it."
InnerPercentZ = "Amount of player motion that's passed on to the camera rendering the sky. If the value is set to 0.100, only ten percent of the player's movement will be passed on to the camera. Camera movement is used to simulate parallax movement of objects in the sky. Be sure that if you give the cameras a lot of motion, you'll need to make your skybox large enough that the camera doesn't move outside it."
InnerRadius = "Within this radius the sounds play at full volume."
InSkyBox = "This flag should be set to true if the TranslucentWorldModel is going to be in a SkyBox."
InstrumentFiles = "DirectMusic instrument files for the level."
IntensityFreq = "The frequency that the IntensityWaveform follows. The higher the value, the faster the light will cycle. Fractional values are accepted."
IntensityMax = "The highest light intensity level that the light will cycle to. Uses the same type of values as BrightScale for regular lights, where .25 would be very dim and 1.5 would be intensely bright."
IntensityMin = "The lowest light intensity level that the light will cycle to. It uses the same type of values as BrightScale for regular lights, where .25 would be very dim and 1.5 would be intensely bright. Note that intensity values are not tied to their corresponding radius values, so you could easily make a light that starts off dim and large, and then contracts to become bright but tiny. Likewise, you could set the intensity and radius of the light to be out of phase with one another."
IntensityPhase = "The phase offset that the IntensityWaveform follows. Values are in degrees between 0 and 360. A value of 180 will cycle exactly out of phase with a ClientLightFX with the same frequency and an offset of 0. ClientLightFX objects with the same IntensityFreq and IntensityPhase will play in sync."
IntensityWaveform = "The wave form that determines how the light cyles between IntensityMin, and IntensityMax. Here are some of the valid values:\r\n\r\n0: No waveform, light will not cycle.\r\n1: Square waveform--Light will cycle instantly between Min to Max values.\r\n2: Saw waveform--Light will cycle from Min to Max along linear values.\r\n3: Ramp Up--Light will ramp up from Min to Max values and then reset directly to Min.\r\n4: Ramp Down--Light will ramp down from Max to Min values and then reset to Max.\r\n5: Sine--Light value follows a Sine wave path between Min and Max.\r\n6: Flicker 1--Light follows a flicker pattern that only has Min and Max values.\r\n7: Flicker 2--Light follows a more 'organic' flicker pattern.\r\n8: Flicker 3--Mostly on flicker -- good for flaky fluorescents.\r\n9: Flicker 4--Mostly off flicker -- good for really flaky fluorescents.\r\n10: Strobe--Light pulses from Max to Min.\r\n11: Search--Light follows a Sine pattern with some wait time in the Min state."
Invisible = "This flag will set the brush to be invisible."
IsKeyframed = "Is the door moved by a keyframer instead of its own internal mover? If it is you will want to set this flag to true. If you do not, impact effects will not move with the object. They will instead, hover in the air as the door object moves away from them."
IsListener = "Indicates that the player will hear 3D sounds from the Camera's position."
KeyFramer = "Subset of properties that define the characteristics of the KeyFramer object created by the CinematicTrigger object."
KillerMessage = "If specified, the KillerMessage is sent to the object that destroyed this object if the CanDestroy property is set to True.\r\n\r\n(See CanDestroy)"
LeftFoot = "Attachment for the character's left foot."
LeftHand = "Attachment for the character's left hand."
LeftShoulder = "Attachment for the character's left shoulder."
LensFlare = "Group property that allows the TWM to act like a LensFlare on a sprite (for the sun in the sky box for example.)"
LensFlareProps = "Subset of properties that define properties specific to creating lensflare effects for the object."
Lifetime = "Time in seconds from when the object becomes Active to when it shuts off. For some objects, such as Steam, setting this to -1 will keep the object active for a infinite period of time."
LifeTime = "Time in seconds from when the object becomes Active to when it shuts off. For some objects, such as Steam, setting this to -1 will keep the object active for a infinite period of time."
LightAdd = "This allows you to further alter the view from inside a Volume."
LightColor = "Color of the light at the exact center of the Light object. Light falls off gradually from this center point."
LightFrames = "How many lightmaps to use when creating the light animation for this object."
Lighting = "Name of a KeyFramerLight if the keyframed object were going to cast moving shadows."
LightMap = "Tells the brush to be rendered using lightmapping, which, while slower to render than Gouraud shading or flat shading, looks more natural. This should be your default in most indoor structures."
LightObjects = "Determines whether or not the light will light models."
LightRadius = "Total range of the light's effects. Anything outside this range isn't lit at all by this light."
LightRain = "Generates 'light' rain particles."
LightSnow = "Generates 'light' snow particles."
LightTintColor = "This property is not used."
Linear = "The object maintains a steady speed from the start to the end of its path of travel."
LiquidGravity = "Vertical acceleration applied to objects, but not characters, inside the volume. A positive number will cause objects to bob to the surface, or even rocket out of it depending on the size of the number used, while negative numbers will cause objects to sink."
LMAnimStatic = "This flag was introduced to increase performance under certain conditions relating to the use of light map animations. If your level contains light animations that are turning on and off more than they are remaining in one state or the other, set this flag to false."
Locked = "You can make an object locked, and require it to receive an 'unlock' message from another object before it can be Activated."
LockedCommand = "You may enter a command string here that will be sent everytime the player activates the door while it is in the locked state."
LockedSound = "Sound to play when the door is locked."
Loop = "Toggles whether the sound will loop continuously or play only once when triggered on."
Looping = "Keyframer will continuously run through the key path, returning to the first key in the sequence when reaching the last."
LoopSound = "Sound the object plays after the StartSound finishes. This sound will loop (play continuously) until the object receives an OFF message."
LoopSounds = "The open and close sounds will loop while the door object is in motion."
Marine = "The object's response when it detects a Marine character. Specify actions for Interest and Target below; Preferred characters are attacked before all others."
Mass = "Mass of the object.  The mass of the object determines how much friction the object applies to the world, and how large a blocking priority  the object has.  The higher the mass, the higher its friction and blocking priority (i.e., the less it slides on the ground, and the more crushing damage it will do to objects of less mass).\r\n\r\nThe default Player mass is 2000.  Objects with a mass greater than 2200, will be able to crush the player (the large the mass the faster it will crush the player).  Objects with a mass less than 1800 will be able to be crushed by the player.  The Player move/stand on  objects with a mass between 1800 and 2000, and not crush them."
MaxArmor = "The maximum amount of armor the object can have. \r\n\r\n(See HitPoints, MaxHitPoints, and Armor properties).\r\n"
MaxBlindScale = "The size of the BlindingFlare when it is at its largest."
MaxDamage = "Maximum amount of damage that will be inflicted upon a character caught within the DamageRadius of the explosion when it is triggered."
MaxDelayTime = "Maximum amount of time between random Lightning strikes."
MaxHitPoints = "The maximum amount of hit points the object can have. \r\n\r\n(See HitPoints,  Armor, and MaxArmor properties)."
MaxIdleTime = "The amount of time, in seconds, that the object will remain in an Idle state. If no target appears within this time the object goes into the state specified by IdleTimeOut."
MaxJump = "The object's maximum jump velocity in units per second."
MaxNumDebris = "The minimum number of debris that can be created when the object is destroyed.  A random number of debris between MinNumDebris and MaxNumDebris is created.   If this value is set to -1, no debris will be created.\r\n\r\n[MinNumDebris+1 and up, or -1]\r\n\r\n(See MinNumDebris) \r\n\r\n"
MaxPitch = "Maximum upward rotation allowed."
MaxSpriteAlpha = "Sprite alpha value for when the SearchLight is shining at the camera."
MaxSpriteScale = "Scale of the sprite when it is facing the camera."
MaxVelocity = "Maximum speed a particle will have when it's created."
MaxViewDistance = "Maximum distance at which the particles will be visible. If the camera is beyond this point, the particles will not be drawn."
MaxWidth = "Width of the Lightning bolt at its widest point."
MaxYaw = "Maximum number of degrees the object can turn to its right."
Message1Weight = "This property is no longer supported."
MessageName = "Message that is sent to the MessageTarget when the KeyFramer arrives at this key."
MessageName1 = "The message that will be sent to the corresponding TargetName."
MessageName2 = "The message that will be sent to the corresponding TargetName."
MessageName3 = "The message that will be sent to the corresponding TargetName."
MessageName4 = "The message that will be sent to the corresponding TargetName."
MessageName5 = "The message that will be sent to the corresponding TargetName."
MessageName6 = "The message that will be sent to the corresponding TargetName."
MessageName7 = "The message that will be sent to the corresponding TargetName."
MessageName8 = "The message that will be sent to the corresponding TargetName."
MessageName9 = "The message that will be sent to the corresponding TargetName."
MessageName10 = "The message that will be sent to the corresponding TargetName."
MessageTarget = "The name of the object that will receive the MessageName command string."
MessageTouch = "This property is no longer supported."
MinAngle = "Minimum angle between the camera and the sprite where the sprite is still visible."
MinBlindScale = "The size of the BlindingFlare when it is at its smallest."
MinDelayTime = "Minimum amount of time between random Lightning strikes."
MinFogFarz = "This property is not supported."
MinFogNearz = "This property is not supported."
MinJump = "The object's minimum jump velocity in units per second."
MinNumDebris = "The minimum number of debris that can be created when the object is destroyed.  A random number of debris between MinNumDebris and MaxNumDebris is created.\r\n\r\n[1 to MaxNumDebris-1]\r\n\r\n(See MaxNumDebris)"
MinPitch = "Maximum downward rotation allowed."
MinSpriteAlpha = "Minimum sprite alpha value. This is the alpha when the SearchLight is pointed away from the camera."
MinSpriteScale = "Scale of the sprite when it is at MinAngle."
MinVelocity = "Minimum speed a particle will have when it's created."
MinWidth = "Width of the Lightning bolt at its narrowest point."
MinYaw = "Maximum number of degrees the object can turn to its left."
ModelAddColor = "This color is applied to all model polygons by an additive blend. Because it is additive it can only brighten, not darken."
Motion = "A subset of properties relating to the object's movement and rotation."
MoveDelay = "Amount of delay in seconds between the time the door is triggered to open and when it begins opening."
MoveDir = "Choose the direction the door will move in. This is a vector; for doors that move along one a world axis you can simply enter a 1, 0 or –1 for each of the X, Y and Z-axes as appropriate."
MoveDist = "The distance the door will travel in DEdit units."
MoveToFloor = "The object will be resting on the floor below when the level starts."
Multiply = "Use the Multiply blending mode: overlaying dark areas will get darker, overlaying light areas will get lighter."
Music = "A subset of properties relating to the music in the level."
MusicDirectory = "Path to the music resource directory. [?]"
Name = "Name of the object. The name is NOT case sensitive. Be careful not to have two objects with the same name; you can check for this with the World\Debug\Find_Object_Naming_Conflicts menu item."
NeighborLinks = "A subset of properties which allow the AI to follow different paths from this node."
NeverDestroy = "This object cannot be destroyed."
Nonexistant = "The brush will be removed during preprocessing."
NormalRain = "Generates 'normal' rain particles."
NormalSnow = "Generates 'normal' snow particles."
NoSnap = "The processor automatically snaps vertices to the grid when it processes a level. If geometry is built off the grid, this can result in leaks and visual anomolies. Setting this flag to true on brushes that have points off the grid will tell the processor to leave the points where they are and not to snap them."
NotAStep = "Tell the physics of the character to not try to stair step onto this brush. It is particularly useful for railings on stairs."
NoWallWalk = "Aliens will not be able to wall-walk on the faces of this brush."
Number = "The number of Spawners with the appropriate base name to activate when the level is run. If an amount less then the total number of Spawners is entered here, a random selection of Spawners equal to this number will be triggered."
NumberOfActivations = "How many times the object can be activated. Setting this value to 0 allows the object to be activated an infinite number of times."
NumPolies = "How many polygons will the grid have on a side? The higher the number of polies you add, the smoother the grid will look, but it will also take longer to render."
NumSegments = "Number of steps in the Lightning bolt."
NumShakes = "The number of times the shake occurs (leave -1 to control via on/off trigger)."
NumSurfacePolies = "How many polygons will the grid have on a side? The higher the number of polies you add, the smoother the grid will look, but it will also take longer to render."
Object1 = "Object that will receive the command string that is sent to the Group object."
Object2 = "Object that will receive the command string that is sent to the Group object."
Object3 = "Object that will receive the command string that is sent to the Group object."
Object4 = "Object that will receive the command string that is sent to the Group object."
Object5 = "Object that will receive the command string that is sent to the Group object."
Object6 = "Object that will receive the command string that is sent to the Group object."
Object7 = "Object that will receive the command string that is sent to the Group object."
Object8 = "Object that will receive the command string that is sent to the Group object."
Object9 = "Object that will receive the command string that is sent to the Group object."
Object10 = "Object that will receive the command string that is sent to the Group object."
Object11 = "Object that will receive the command string that is sent to the Group object."
Object12 = "Object that will receive the command string that is sent to the Group object."
Object13 = "Object that will receive the command string that is sent to the Group object."
Object14 = "Object that will receive the command string that is sent to the Group object."
Object15 = "Object that will receive the command string that is sent to the Group object."
Object16 = "Object that will receive the command string that is sent to the Group object."
Object17 = "Object that will receive the command string that is sent to the Group object."
Object18 = "Object that will receive the command string that is sent to the Group object."
Object19 = "Object that will receive the command string that is sent to the Group object."
Object20 = "Object that will receive the command string that is sent to the Group object."
Object21 = "Object that will receive the command string that is sent to the Group object."
Object22 = "Object that will receive the command string that is sent to the Group object."
Object23 = "Object that will receive the command string that is sent to the Group object."
Object24 = "Object that will receive the command string that is sent to the Group object."
Object25 = "Object that will receive the command string that is sent to the Group object."
Object26 = "Object that will receive the command string that is sent to the Group object."
Object27 = "Object that will receive the command string that is sent to the Group object."
Object28 = "Object that will receive the command string that is sent to the Group object."
Object29 = "Object that will receive the command string that is sent to the Group object."
Object30 = "Object that will receive the command string that is sent to the Group object."
Object31 = "Object that will receive the command string that is sent to the Group object."
Object32 = "Object that will receive the command string that is sent to the Group object."
Object33 = "Object that will receive the command string that is sent to the Group object."
Object34 = "Object that will receive the command string that is sent to the Group object."
Object35 = "Object that will receive the command string that is sent to the Group object."
Object36 = "Object that will receive the command string that is sent to the Group object."
Object37 = "Object that will receive the command string that is sent to the Group object."
Object38 = "Object that will receive the command string that is sent to the Group object."
Object39 = "Object that will receive the command string that is sent to the Group object."
Object40 = "Object that will receive the command string that is sent to the Group object."
Object41 = "Object that will receive the command string that is sent to the Group object."
Object42 = "Object that will receive the command string that is sent to the Group object."
Object43 = "Object that will receive the command string that is sent to the Group object."
Object44 = "Object that will receive the command string that is sent to the Group object."
Object45 = "Object that will receive the command string that is sent to the Group object."
Object46 = "Object that will receive the command string that is sent to the Group object."
Object47 = "Object that will receive the command string that is sent to the Group object."
Object48 = "Object that will receive the command string that is sent to the Group object."
Object49 = "Object that will receive the command string that is sent to the Group object."
Object50 = "Object that will receive the command string that is sent to the Group object."
ObjectColor = "This color picker is used to add a color tint to the rectangular representation of the Prop object in DEdit."
ObjectFlags = "Subset of properties affecting the appearance of the object."
ObjectName = "Name of the object(s) that should be keyframed along the path.  All of the objects with the given name(s) will be updated.  Multiple names can be specified in this field (e.g., 'Object1;Object2;Object3')."
OffMoveSpeed = "Rate of travel defined in DEdit units per second when the switch is activated to the off position."
OffSound = "Sound that will be played when the Switch object is activated to the off position."
OffTriggerMessage = "Command string that is sent when the Switch object is triggered off."
OffTriggerTarget = "Object that will receive the OffTriggerMessage."
OffWaitTime = "Seconds that the Switch will remain in the off position."
On = "Object will play its StartSound as soon as the level loads."
OneTime = "The Camera object will be removed when it turns off."
OneTimeOnly = "The object may only be triggered once."
OnlyLightWorldFlag = "Light only world geometry, not models."
OnMoveSpeed = "Rate of travel in DEdit units per second when the switch is activated to the on position."
OnSound = "Sound that will be played when the Switch object is activated to the on position."
OnTriggerMessage = "Command string that is sent when the Switch object is triggered on."
OnTriggerTarget = "Name of the object that will receive the OnTriggerMessage."
OnWaitTime = "Number of seconds that the Swtch will remain in the on position."
OpenAway = "The door will always open away from the player regardless of the value in the RotationAngles dialogue."
OpenedCommand = "This command string will be sent every time the door completes its travel to the opened state."
OpeningCommand = "This command string will be sent every time the door starts its travel to the opened state."
OpenSound = "Sound to be played as the door starts moving while the door is opening."
OpenWaitTime = "Number of seconds that the door will remain open before closing automatically, and the amount of after being triggered open before it can be triggered again."
OuterColor = "Color of the light at the exact edge of its LightRadius. This is the color that the light fades to from its InnerColor. Can be useful if you want to stack lights together to get a special effect."
OuterColorEnd = "Color of the fourth and outermost edge of the Lightning bolt."
OuterColorStart = "Color of the third stage."
OuterRadius = "The sound volume reaches zero at this distance from the object."
PanSky = "Move the sky texture across the sky polygons."
PanSkyOffsetX = "Velocity of the panning of the sky texture in the world's X direction."
PanSkyOffsetZ = "Velocity of the panning of the sky texture in the world's Z direction."
PanSkyScaleX = "Scale of the sky texture in the world's X direction."
PanSkyScaleZ = "Scale of the sky texture in the world's Z direction."
PanSkyTexture = ".dtx file that will be used as the texture for the panning clouds."
PanWithCurrent = "The surface texture will move along the same XZ vector as the volume's Current."
ParticleFlags = "ParticleFlags determine the behavior of the particles. Some valid values are Bounce=1 (hard on performance) Shadows=2 (hard on performance) Never die=4 (hard on performance) Dumb=8 (game must update and move particles)."
ParticleGravity = "How fast will the particles fall?"
ParticleLifetime = "How long will each particle last in the world after it's created?"
ParticleRadius = "Radius of each particle in the system.  This value is relative to the size of the texture used for the particle."
ParticlesPerSecond = "How many particles will the system create here each second?"
Perturb = "Amount of random deviation there will be in the path of the Lightning between its origin and EndPos. Higher numbers create a wilder effect while lower numbers create a straighter bolt."
Physics = "Subset of properties that define the motion of the Breakable object when it is triggered."
PickUp1 = "Item given by the object."
PickUp10 = "Item given by the object."
PickUp2 = "Item given by the object."
PickUp3 = "Item given by the object."
PickUp4 = "Item given by the object."
PickUp5 = "Item given by the object."
PickUp6 = "Item given by the object."
PickUp7 = "Item given by the object."
PickUp8 = "Item given by the object."
PickUp9 = "Item given by the object."
PitchDelta = "Number of degrees the breakable will pitch while shaking."
PitchShift = "This value speeds up or slows down the file.  You can set a different pitch with this property to make it play lower or higher in pitch.  1.00 is normal pitch, 1.10 would be pitched up 10%, 0.90 would be 10% pitched down.  It does this by changing the playback sample rate of the file."
PlasmaInfo = "Subset of properties defines the appearance of the plasma created by the PolyGrid object."
PlasmaType = "Type of plasma to use to generate motion on the PolyGrid.  Valid values are 0 for normal plasma and 1 for 4 ring plasma."
PlayerDeathTriggerMessage = "Command string that is sent when the player destroys the object."
PlayerDeathTriggerTarget = "Object that receives the PlayerDeathTriggerMessage."
PlayerTriggerable = "Player's bounding box intersecting that of the Trigger will activate it."
PlayerUsable = "Player can activate the object."
PlaySound = "Lightning object will make a sound when it is triggered."
Portal = "Used in conjunction with doors to create dynamic hullmakers. When the door is closed, nothing beyond it will be drawn. Like HullMakers, this must be a zero thickness brush."
PortalName = "Portal brush for this door object."
Pos = "Position of the object in world coordinates."
Predator = "The object's response when it detects a Predator character. Specify actions for Interest and Target below; Preferred characters are attacked before all others."
Priority = "You can assign Priority values to SoundFX objects so that some sounds will take priority over others. The valid values are 0, 1, and 2. Lower numbers have lower priority."
PushObjects = "The keyframed objects will use collision detection when moving (i.e., objects in their path will be pushed).  This should only be set to True if the keyframed object is likely to come in contact with other objects (i.e., a plane flying around in the sky should NOT set this flag to true)."
RadiusFreq = "Length of time for the light to complete one cycle from RadiusMin to RadiusMax."
RadiusMax = "Largest falloff radius to which the light will cycle."
RadiusMin = "Smallest falloff radius to which the light will cycle."
RadiusPhase = "Where in the light's cycle from RadiusMin to RadiusMax the light begins, measured in degrees from 0 to 360. If you wanted to do police lights that strobe out of sync from one another, you'd set this value to 0 for the first and 180 for the second. When the first light was just starting up, the second would be halfway done and vice versa."
RadiusWaveform = "The waveform that determines how the light cyles between RadiusMin, and RadiusMax. Here are some of the valid values:\r\n\r\n0: No waveform, light will not cycle.\r\n1: Square waveform--Light will cycle instantly between Min to Max values.\r\n2: Saw waveform--Light will cycle from Min to Max along linear values.\r\n3: Ramp Up--Light will ramp up from Min to Max values and then reset directly to Min.\r\n4: Ramp Down--Light will ramp down from Max to Min values and then reset to Max.\r\n5: Sine--Light value follows a Sine wave path between Min and Max.\r\n6: Flicker 1--Light follows a flicker pattern that only has Min and Max values.\r\n7: Flicker 2--Light follows a more 'organic' flicker pattern.\r\n8: Flicker 3--Mostly on flicker -- good for flaky fluorescents.\r\n9: Flicker 4--Mostly off flicker -- good for really flaky fluourescents.\r\n10: Strobe--Light pulses from Max to Min.\r\n11: Search--Light follows a Sine pattern with some wait time in the Min state."
RainProperties = "A subset of properties controlling the appearance of the rain."
RampDownSound = "See RampUpSound."
RampUpSound = "You could specify a sound for the light that is played as the light turns on for things like a switched light source or a lighting flash."
RayHit = "Object will be rayhit, ie hit by bullets, etc."
RemainsOpen = "The object requires a trigger command or activation by the player to close instead of closing by itself."
RemoveAttachments = "Attachments will be removed (i.e., disappear) when the door is removed (destroyed).  If this property is set to false, the attachments will receive 'destroy' messages and will be destroyed (if they are set up to respond to the destroy message)."
RemoveBadAI = "AI of 'bad' alignment will be removed from the world when the CinematicTrigger is triggered on."
RemoveWhenDone = "Remove the timer when the time runs out."
RemoveWhenEmpty = "Bar meter is removed from the screen when empty."
Replies1 = "Dialogues to play when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. If a Decision does not have a Reply, enter a null entry such as 'NONE.' A valid reply consists of the speaker name followed by the dialogue ID. Example, from the cinema2 trigger in NOLF's m01s01 (Bruno asks Cate if she wants help picking out sniping targets):\r\n\r\nDelay1 = 0.500\r\nDialogue1 = 10154\r\nWhoPlaysDialogue1 = Player\r\nStartDialogueTriggerTarget1 = sdf\r\nStartDialogueTriggerMsg1 = msg cinema2 (keyframer pause)\r\nDecisions1 = 10155;10156;10159\r\nReplies1 = NONE;NONE;player 10160\r\nRepliesTriggerTarget1 = help;solo;insane\r\nRepliesTriggerMsg1 = trigger;trigger;trigger\r\nWindow1 = False"
Replies2 = "Dialogues to play when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. If a Decision does not have a Reply, enter a null entry such as 'NONE.' A valid reply consists of the speaker name followed by the dialogue ID. Example, from the cinema2 trigger in NOLF's m01s01 (Bruno asks Cate if she wants help picking out sniping targets):\r\n\r\nDelay1 = 0.500\r\nDialogue1 = 10154\r\nWhoPlaysDialogue1 = Player\r\nStartDialogueTriggerTarget1 = sdf\r\nStartDialogueTriggerMsg1 = msg cinema2 (keyframer pause)\r\nDecisions1 = 10155;10156;10159\r\nReplies1 = NONE;NONE;player 10160\r\nRepliesTriggerTarget1 = help;solo;insane\r\nRepliesTriggerMsg1 = trigger;trigger;trigger\r\nWindow1 = False"
Replies3 = "Dialogues to play when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. If a Decision does not have a Reply, enter a null entry such as 'NONE.' A valid reply consists of the speaker name followed by the dialogue ID. Example, from the cinema2 trigger in NOLF's m01s01 (Bruno asks Cate if she wants help picking out sniping targets):\r\n\r\nDelay1 = 0.500\r\nDialogue1 = 10154\r\nWhoPlaysDialogue1 = Player\r\nStartDialogueTriggerTarget1 = sdf\r\nStartDialogueTriggerMsg1 = msg cinema2 (keyframer pause)\r\nDecisions1 = 10155;10156;10159\r\nReplies1 = NONE;NONE;player 10160\r\nRepliesTriggerTarget1 = help;solo;insane\r\nRepliesTriggerMsg1 = trigger;trigger;trigger\r\nWindow1 = False"
Replies4 = "Dialogues to play when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. If a Decision does not have a Reply, enter a null entry such as 'NONE.' A valid reply consists of the speaker name followed by the dialogue ID. Example, from the cinema2 trigger in NOLF's m01s01 (Bruno asks Cate if she wants help picking out sniping targets):\r\n\r\nDelay1 = 0.500\r\nDialogue1 = 10154\r\nWhoPlaysDialogue1 = Player\r\nStartDialogueTriggerTarget1 = sdf\r\nStartDialogueTriggerMsg1 = msg cinema2 (keyframer pause)\r\nDecisions1 = 10155;10156;10159\r\nReplies1 = NONE;NONE;player 10160\r\nRepliesTriggerTarget1 = help;solo;insane\r\nRepliesTriggerMsg1 = trigger;trigger;trigger\r\nWindow1 = False"
Replies5 = "Dialogues to play when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. If a Decision does not have a Reply, enter a null entry such as 'NONE.' A valid reply consists of the speaker name followed by the dialogue ID. Example, from the cinema2 trigger in NOLF's m01s01 (Bruno asks Cate if she wants help picking out sniping targets):\r\n\r\nDelay1 = 0.500\r\nDialogue1 = 10154\r\nWhoPlaysDialogue1 = Player\r\nStartDialogueTriggerTarget1 = sdf\r\nStartDialogueTriggerMsg1 = msg cinema2 (keyframer pause)\r\nDecisions1 = 10155;10156;10159\r\nReplies1 = NONE;NONE;player 10160\r\nRepliesTriggerTarget1 = help;solo;insane\r\nRepliesTriggerMsg1 = trigger;trigger;trigger\r\nWindow1 = False"
Replies6 = "Dialogues to play when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. If a Decision does not have a Reply, enter a null entry such as 'NONE.' A valid reply consists of the speaker name followed by the dialogue ID. Example, from the cinema2 trigger in NOLF's m01s01 (Bruno asks Cate if she wants help picking out sniping targets):\r\n\r\nDelay1 = 0.500\r\nDialogue1 = 10154\r\nWhoPlaysDialogue1 = Player\r\nStartDialogueTriggerTarget1 = sdf\r\nStartDialogueTriggerMsg1 = msg cinema2 (keyframer pause)\r\nDecisions1 = 10155;10156;10159\r\nReplies1 = NONE;NONE;player 10160\r\nRepliesTriggerTarget1 = help;solo;insane\r\nRepliesTriggerMsg1 = trigger;trigger;trigger\r\nWindow1 = False"
Replies7 = "Dialogues to play when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. If a Decision does not have a Reply, enter a null entry such as 'NONE.' A valid reply consists of the speaker name followed by the dialogue ID. Example, from the cinema2 trigger in NOLF's m01s01 (Bruno asks Cate if she wants help picking out sniping targets):\r\n\r\nDelay1 = 0.500\r\nDialogue1 = 10154\r\nWhoPlaysDialogue1 = Player\r\nStartDialogueTriggerTarget1 = sdf\r\nStartDialogueTriggerMsg1 = msg cinema2 (keyframer pause)\r\nDecisions1 = 10155;10156;10159\r\nReplies1 = NONE;NONE;player 10160\r\nRepliesTriggerTarget1 = help;solo;insane\r\nRepliesTriggerMsg1 = trigger;trigger;trigger\r\nWindow1 = False"
Replies8 = "Dialogues to play when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. If a Decision does not have a Reply, enter a null entry such as 'NONE.' A valid reply consists of the speaker name followed by the dialogue ID. Example, from the cinema2 trigger in NOLF's m01s01 (Bruno asks Cate if she wants help picking out sniping targets):\r\n\r\nDelay1 = 0.500\r\nDialogue1 = 10154\r\nWhoPlaysDialogue1 = Player\r\nStartDialogueTriggerTarget1 = sdf\r\nStartDialogueTriggerMsg1 = msg cinema2 (keyframer pause)\r\nDecisions1 = 10155;10156;10159\r\nReplies1 = NONE;NONE;player 10160\r\nRepliesTriggerTarget1 = help;solo;insane\r\nRepliesTriggerMsg1 = trigger;trigger;trigger\r\nWindow1 = False"
Replies9 = "Dialogues to play when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. If a Decision does not have a Reply, enter a null entry such as 'NONE.' A valid reply consists of the speaker name followed by the dialogue ID. Example, from the cinema2 trigger in NOLF's m01s01 (Bruno asks Cate if she wants help picking out sniping targets):\r\n\r\nDelay1 = 0.500\r\nDialogue1 = 10154\r\nWhoPlaysDialogue1 = Player\r\nStartDialogueTriggerTarget1 = sdf\r\nStartDialogueTriggerMsg1 = msg cinema2 (keyframer pause)\r\nDecisions1 = 10155;10156;10159\r\nReplies1 = NONE;NONE;player 10160\r\nRepliesTriggerTarget1 = help;solo;insane\r\nRepliesTriggerMsg1 = trigger;trigger;trigger\r\nWindow1 = False"
Replies10 = "Dialogues to play when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. If a Decision does not have a Reply, enter a null entry such as 'NONE.' A valid reply consists of the speaker name followed by the dialogue ID. Example, from the cinema2 trigger in NOLF's m01s01 (Bruno asks Cate if she wants help picking out sniping targets):\r\n\r\nDelay1 = 0.500\r\nDialogue1 = 10154\r\nWhoPlaysDialogue1 = Player\r\nStartDialogueTriggerTarget1 = sdf\r\nStartDialogueTriggerMsg1 = msg cinema2 (keyframer pause)\r\nDecisions1 = 10155;10156;10159\r\nReplies1 = NONE;NONE;player 10160\r\nRepliesTriggerTarget1 = help;solo;insane\r\nRepliesTriggerMsg1 = trigger;trigger;trigger\r\nWindow1 = False"
Replies11 = "Dialogues to play when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. If a Decision does not have a Reply, enter a null entry such as 'NONE.' A valid reply consists of the speaker name followed by the dialogue ID. Example, from the cinema2 trigger in NOLF's m01s01 (Bruno asks Cate if she wants help picking out sniping targets):\r\n\r\nDelay1 = 0.500\r\nDialogue1 = 10154\r\nWhoPlaysDialogue1 = Player\r\nStartDialogueTriggerTarget1 = sdf\r\nStartDialogueTriggerMsg1 = msg cinema2 (keyframer pause)\r\nDecisions1 = 10155;10156;10159\r\nReplies1 = NONE;NONE;player 10160\r\nRepliesTriggerTarget1 = help;solo;insane\r\nRepliesTriggerMsg1 = trigger;trigger;trigger\r\nWindow1 = False"
Replies12 = "Dialogues to play when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. If a Decision does not have a Reply, enter a null entry such as 'NONE.' A valid reply consists of the speaker name followed by the dialogue ID. Example, from the cinema2 trigger in NOLF's m01s01 (Bruno asks Cate if she wants help picking out sniping targets):\r\n\r\nDelay1 = 0.500\r\nDialogue1 = 10154\r\nWhoPlaysDialogue1 = Player\r\nStartDialogueTriggerTarget1 = sdf\r\nStartDialogueTriggerMsg1 = msg cinema2 (keyframer pause)\r\nDecisions1 = 10155;10156;10159\r\nReplies1 = NONE;NONE;player 10160\r\nRepliesTriggerTarget1 = help;solo;insane\r\nRepliesTriggerMsg1 = trigger;trigger;trigger\r\nWindow1 = False"
Replies13 = "Dialogues to play when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. If a Decision does not have a Reply, enter a null entry such as 'NONE.' A valid reply consists of the speaker name followed by the dialogue ID. Example, from the cinema2 trigger in NOLF's m01s01 (Bruno asks Cate if she wants help picking out sniping targets):\r\n\r\nDelay1 = 0.500\r\nDialogue1 = 10154\r\nWhoPlaysDialogue1 = Player\r\nStartDialogueTriggerTarget1 = sdf\r\nStartDialogueTriggerMsg1 = msg cinema2 (keyframer pause)\r\nDecisions1 = 10155;10156;10159\r\nReplies1 = NONE;NONE;player 10160\r\nRepliesTriggerTarget1 = help;solo;insane\r\nRepliesTriggerMsg1 = trigger;trigger;trigger\r\nWindow1 = False"
Replies14 = "Dialogues to play when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. If a Decision does not have a Reply, enter a null entry such as 'NONE.' A valid reply consists of the speaker name followed by the dialogue ID. Example, from the cinema2 trigger in NOLF's m01s01 (Bruno asks Cate if she wants help picking out sniping targets):\r\n\r\nDelay1 = 0.500\r\nDialogue1 = 10154\r\nWhoPlaysDialogue1 = Player\r\nStartDialogueTriggerTarget1 = sdf\r\nStartDialogueTriggerMsg1 = msg cinema2 (keyframer pause)\r\nDecisions1 = 10155;10156;10159\r\nReplies1 = NONE;NONE;player 10160\r\nRepliesTriggerTarget1 = help;solo;insane\r\nRepliesTriggerMsg1 = trigger;trigger;trigger\r\nWindow1 = False"
Replies15 = "Dialogues to play when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. If a Decision does not have a Reply, enter a null entry such as 'NONE.' A valid reply consists of the speaker name followed by the dialogue ID. Example, from the cinema2 trigger in NOLF's m01s01 (Bruno asks Cate if she wants help picking out sniping targets):\r\n\r\nDelay1 = 0.500\r\nDialogue1 = 10154\r\nWhoPlaysDialogue1 = Player\r\nStartDialogueTriggerTarget1 = sdf\r\nStartDialogueTriggerMsg1 = msg cinema2 (keyframer pause)\r\nDecisions1 = 10155;10156;10159\r\nReplies1 = NONE;NONE;player 10160\r\nRepliesTriggerTarget1 = help;solo;insane\r\nRepliesTriggerMsg1 = trigger;trigger;trigger\r\nWindow1 = False"
Replies16 = "Dialogues to play when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. If a Decision does not have a Reply, enter a null entry such as 'NONE.' A valid reply consists of the speaker name followed by the dialogue ID. Example, from the cinema2 trigger in NOLF's m01s01 (Bruno asks Cate if she wants help picking out sniping targets):\r\n\r\nDelay1 = 0.500\r\nDialogue1 = 10154\r\nWhoPlaysDialogue1 = Player\r\nStartDialogueTriggerTarget1 = sdf\r\nStartDialogueTriggerMsg1 = msg cinema2 (keyframer pause)\r\nDecisions1 = 10155;10156;10159\r\nReplies1 = NONE;NONE;player 10160\r\nRepliesTriggerTarget1 = help;solo;insane\r\nRepliesTriggerMsg1 = trigger;trigger;trigger\r\nWindow1 = False"
Replies17 = "Dialogues to play when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. If a Decision does not have a Reply, enter a null entry such as 'NONE.' A valid reply consists of the speaker name followed by the dialogue ID. Example, from the cinema2 trigger in NOLF's m01s01 (Bruno asks Cate if she wants help picking out sniping targets):\r\n\r\nDelay1 = 0.500\r\nDialogue1 = 10154\r\nWhoPlaysDialogue1 = Player\r\nStartDialogueTriggerTarget1 = sdf\r\nStartDialogueTriggerMsg1 = msg cinema2 (keyframer pause)\r\nDecisions1 = 10155;10156;10159\r\nReplies1 = NONE;NONE;player 10160\r\nRepliesTriggerTarget1 = help;solo;insane\r\nRepliesTriggerMsg1 = trigger;trigger;trigger\r\nWindow1 = False"
Replies18 = "Dialogues to play when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. If a Decision does not have a Reply, enter a null entry such as 'NONE.' A valid reply consists of the speaker name followed by the dialogue ID. Example, from the cinema2 trigger in NOLF's m01s01 (Bruno asks Cate if she wants help picking out sniping targets):\r\n\r\nDelay1 = 0.500\r\nDialogue1 = 10154\r\nWhoPlaysDialogue1 = Player\r\nStartDialogueTriggerTarget1 = sdf\r\nStartDialogueTriggerMsg1 = msg cinema2 (keyframer pause)\r\nDecisions1 = 10155;10156;10159\r\nReplies1 = NONE;NONE;player 10160\r\nRepliesTriggerTarget1 = help;solo;insane\r\nRepliesTriggerMsg1 = trigger;trigger;trigger\r\nWindow1 = False"
Replies19 = "Dialogues to play when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. If a Decision does not have a Reply, enter a null entry such as 'NONE.' A valid reply consists of the speaker name followed by the dialogue ID. Example, from the cinema2 trigger in NOLF's m01s01 (Bruno asks Cate if she wants help picking out sniping targets):\r\n\r\nDelay1 = 0.500\r\nDialogue1 = 10154\r\nWhoPlaysDialogue1 = Player\r\nStartDialogueTriggerTarget1 = sdf\r\nStartDialogueTriggerMsg1 = msg cinema2 (keyframer pause)\r\nDecisions1 = 10155;10156;10159\r\nReplies1 = NONE;NONE;player 10160\r\nRepliesTriggerTarget1 = help;solo;insane\r\nRepliesTriggerMsg1 = trigger;trigger;trigger\r\nWindow1 = False"
Replies20 = "Dialogues to play when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. If a Decision does not have a Reply, enter a null entry such as 'NONE.' A valid reply consists of the speaker name followed by the dialogue ID. Example, from the cinema2 trigger in NOLF's m01s01 (Bruno asks Cate if she wants help picking out sniping targets):\r\n\r\nDelay1 = 0.500\r\nDialogue1 = 10154\r\nWhoPlaysDialogue1 = Player\r\nStartDialogueTriggerTarget1 = sdf\r\nStartDialogueTriggerMsg1 = msg cinema2 (keyframer pause)\r\nDecisions1 = 10155;10156;10159\r\nReplies1 = NONE;NONE;player 10160\r\nRepliesTriggerTarget1 = help;solo;insane\r\nRepliesTriggerMsg1 = trigger;trigger;trigger\r\nWindow1 = False"
RepliesTriggerMsg1 = "Message to send when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerMsg2 = "Message to send when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerMsg3 = "Message to send when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerMsg4 = "Message to send when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerMsg5 = "Message to send when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerMsg6 = "Message to send when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerMsg7 = "Message to send when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerMsg8 = "Message to send when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerMsg9 = "Message to send when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerMsg10 = "Message to send when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerMsg11 = "Message to send when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerMsg12 = "Message to send when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerMsg13 = "Message to send when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerMsg14 = "Message to send when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerMsg15 = "Message to send when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerMsg16 = "Message to send when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerMsg17 = "Message to send when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerMsg18 = "Message to send when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerMsg19 = "Message to send when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerMsg20 = "Message to send when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerTarget1 = "Object to receive the corresponding RepliesTriggerMsg when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerTarget2 = "Object to receive the corresponding RepliesTriggerMsg when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerTarget3 = "Object to receive the corresponding RepliesTriggerMsg when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerTarget4 = "Object to receive the corresponding RepliesTriggerMsg when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerTarget5 = "Object to receive the corresponding RepliesTriggerMsg when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerTarget6 = "Object to receive the corresponding RepliesTriggerMsg when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerTarget7 = "Object to receive the corresponding RepliesTriggerMsg when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerTarget8 = "Object to receive the corresponding RepliesTriggerMsg when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerTarget9 = "Object to receive the corresponding RepliesTriggerMsg when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerTarget10 = "Object to receive the corresponding RepliesTriggerMsg when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerTarget11 = "Object to receive the corresponding RepliesTriggerMsg when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerTarget12 = "Object to receive the corresponding RepliesTriggerMsg when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerTarget13 = "Object to receive the corresponding RepliesTriggerMsg when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerTarget14 = "Object to receive the corresponding RepliesTriggerMsg when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerTarget15 = "Object to receive the corresponding RepliesTriggerMsg when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerTarget16 = "Object to receive the corresponding RepliesTriggerMsg when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerTarget17 = "Object to receive the corresponding RepliesTriggerMsg when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerTarget18 = "Object to receive the corresponding RepliesTriggerMsg when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerTarget19 = "Object to receive the corresponding RepliesTriggerMsg when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
RepliesTriggerTarget20 = "Object to receive the corresponding RepliesTriggerMsg when a Decision is made. This must be set up with as many entries as there are in the Decisions entry, again separated by semicolons: the first Decision calls the first Reply, the second Decision the second Reply, and so on. See Replies for an example."
Reverb = "This property is not supported."
RightFoot = "Attachment for the character's right foot."
RightHand = "Attachment for the character's right hand."
RightShoulder = "Attachment for the character's right shoulder."
Ring1Rate = "Used when PlasmaType is set to 1 in the PolyGrid.  These values determine the rate at which the first, second, third, and forth plasma rings change."
Ring2Rate = "Used when PlasmaType is set to 2 in the PolyGrid.  These values determine the rate at which the first, second, third, and forth plasma rings change."
Ring3Rate = "Used when PlasmaType is set to 3 in the PolyGrid.  These values determine the rate at which the first, second, third, and forth plasma rings change."
Ring4Rate = "Used when PlasmaType is set to 4 in the PolyGrid.  These values determine the rate at which the first, second, third, and forth plasma rings change."
RollDelta = "Number of degrees the breakable will roll while shaking."
Rotatable = "Sprite will use the object's rotation for orientation instead of always facing the camera."
Rotation = "Rotation of the object in the world (i.e., Pitch, Yaw, Roll of the object)."
Rotation = "Rotation of the object in the world (i.e., Pitch, Yaw, Roll of the object)."
RotationAngles = "Set of positive or negative values in the x, y, and z axis that define the degrees of rotation."
RotationPoint = "Set of world coordinates that will act as the point that the door object hinges around."
RotationTime = "Time it takes for the Breakable object to rotate 360 degrees."
RotationVelocity = "Velocity at which the particle system is rotated. Particle systems always rotate on their Y-axis."
RotationWave = "Specifies how the keyframed object's rotations are interpolated between keys.  \r\n\r\nValid values are:\r\n\r\nLINEAR: constant speed from start to end\r\nSINE: accelerate to full speed, decelerate to stop\r\nSLOWOFF: start full speed, slow to stop\r\nSLOWON: accelerate to full speed"
Scale = "Changes the size of the object. It is a multiplicative value based on the original size of the object. You can scale an object in all three vectors independently. The default scale is 1.0 1.0 1.0."
ScaleX = "Sets the overall size of the Sprite in the X-axis. A scale of 1 would set it to its size in pixels; .5 would display it as half the size in pixels."
ScaleY = "Sets the overall size of the Sprite in the Y-axis. A scale of 1 would set it to its size in pixels; .5 would display it as half the size in pixels."
ScreenShakeAmount = "Values in the x,y,z vectors that define the severity of the screen shake that occurs when the breakable object is triggered."
SeeCharacterDistance = "The range in which the AI can see enemies."
SeeDeathSceneDistance = "The range at which the AI can see allies' dead bodies."
SeeCloakedMessage = "Message sent to SeeCloakedTarget when the AI spots a cloaked character."
SeeCloakedTarget = "The SeeCloakedMessage will be sent to this object."
SeeDeadBodyMessage = "Message sent to SeeDeadBodyTarget when the AI spots a dead body."
SeeDeadBodyTarget = "The SeeDeadBodyMessage will be sent to this object."
SeeEnemyFlashlightMessage = "Message sent to SeeEnemyFlashlightTarget when the AI spots an enemy's flashlight beam."
SeeEnemyFlashlightTarget = "The SeeEnemyFlashlightMessage will be sent to this object."
SeeEnemyMessage = "Message sent to SeeEnemyTarget when the AI spots an enemy."
SeeEnemyTarget = "The SeeEnemyMessage will be sent to this object."
SegmentSteps = "Number of segments in between keys for lighting purposes.  This has the same effect as the StepsPerSegment property of a KeyframerLight, only this applies to the keyframer for shadowing and overrides the setting of any individual KeyframerLight used for shadowing."
Shadow = "The object will cast a shadow."
ShadowAxis = "Which axis does this rotate around?  Shadowing only works on rotatingworldmodels that have ONE axis of rotation that is straight along x, y or z.  0,1,0 means it rotates like a ceiling fan (along the y axis), for example."
ShadowLights = "You can cause this object's shadows to animate realistically when it moves.  In order to use this, you need to place KeyframerLight objects to do the lighting, and enter their names in this field (light names are separated by semicolons)."
ShakeSound = "The path to any .wav file may be entered here. This sound file is played EVERY time a shake occurs (i.e., every frequency seconds)."
ShowSurface = "Surface effects are visible on this object."
ShrinkTime = "Time it takes for the screen to shrink from the fullscreen mode to the letterbox mode (if Type is set to 1). \r\n\r\n(See Type)"
SideA = "The TorchableLocks on one 'side' of the door. If they are matched up with locks on the other side of the door, burning or soldering one will do the same to the other."
SideB = "The TorchableLocks on the other 'side' of the door. If they are matched up with locks on the other side of the door, burning or soldering one will do the same to the other."
Sine = "The object accelerates to speed from the start and decelerates to a stop at the end."
Size0 = "Size of the objects created."
Size1 = "Size of the objects created."
Size2 = "Size of the objects created."
Size3 = "Size of the objects created."
Size4 = "Size of the objects created."
Size5 = "Size of the objects created."
Size6 = "Size of the objects created."
Size7 = "Size of the objects created."
Skin = "Specifies the texture or 'skin' file associated with this model.  Multiple skins may be specified; for character props for instance the correct order is the format path\torso.dtx;path\legs.dtx;path\head.dtx;path\arms.dtx. The skin file must be a valid .dtx file."
SkinName0 = "If the FileNameX is a model, this field would point to the .dtx texture file to be used on the model."
SkinName1 = "If the FileNameX is a model, this field would point to the .dtx texture file to be used on the model."
SkinName2 = "If the FileNameX is a model, this field would point to the .dtx texture file to be used on the model."
SkinName3 = "If the FileNameX is a model, this field would point to the .dtx texture file to be used on the model."
SkinName4 = "If the FileNameX is a model, this field would point to the .dtx texture file to be used on the model."
SkinName5 = "If the FileNameX is a model, this field would point to the .dtx texture file to be used on the model."
SkinName6 = "If the FileNameX is a model, this field would point to the .dtx texture file to be used on the model."
SkinName7 = "If the FileNameX is a model, this field would point to the .dtx texture file to be used on the model."
SkyDims = "Takes the X, Y and Z dimensions of the object. These need to be large enough to encompass all geometry that you plan to show in your skybox if you want it to appear in the sky. Only one SkyPointer per level should have its Dims set, this SkyPointer should also have the name of the worldmodel to which the sky shell brushes are bound as its SkyObjectName."
SkyFogEnable = "Enable sky fog. Sky fog is like regular fog except that it only appears in the SkyBox and its thickness is based on distance from the SkyBox object."
SkyFogFarZ = "Distance in the skybox from the SkyBox object beyond which the sky fog is opaque."
SkyFogNearZ = "Distance in the skybox from the SkyBox object where the sky fog begins."
SkyObjectName = "Object that you want this SkyPointer to render in the sky."
SkyPan = "Brush is affected by skypanning (i.e. cloud shadows). In order for it to work, the brush can’t have lightmapping. Either Gouraud shading or flat shading will work fine."
SkyPanning = "Subset of properties that define the parameters of SkyPanning effects (cloud shadows moving across the ground)."
SkyPortal = "The brush is a portal to the skypointer."
SlowOff = "The object starts at full speed and decelerates at the end of its path of travel."
SlowOn = "The object accelerates from the start of its path of travel and continues at full speed to the end."
SmallToBig = "Create a Lightning bolt that begins narrow, and becomes wide at its end point."
SmallToSmall = "Create a Lightning bolt that begins and ends narrow, becoming wide at its mid point."
SnipeInfo = "Properties concerning the AI's behavior at this snipe node."
SnipeRadius = "The distance the AI will look for another snipe node to which it can move. If there is no other node within the given radius the AI will remain at the current node. Keep this value as small as possible: if it includes too many nodes your sniper may move around more than you would like."
SnowProperties = "A subset of properties controlling the appearance of the snow."
Solid = "The object is solid."
SolidLightFlag = "Use the 'flashlight' method for light."
Sound = "The path to any .wav file may be entered here. This sound file will be played when the SoundFX object is triggered on."
SoundName = "The path to any .wav file may be entered here. The sound will be played when the KeyFramer arrives at this Key on the key path."
SoundPos = "Allows you to override the position at which door sounds are played. Enter the x, y, and z coordinates of the desired sound position."
SoundRadius = "Radius of the sound(s) played by this object.\r\n\r\n[0.0 and up]"
Spawn = "Type of object to spawn (i.e., create) when this object is destroyed.  The new object is created at the same position and rotation as this object.\r\n\r\n(See the Spawner object for a complete description)"
Spawner = "The base spawner name (ie Spawner, where the spawners are named Spawner00, Spawner01, etc)."
SpawnRadius0 = "Radius around the player that defines the maximum range in which the Sprinkles objects will appear."
SpawnRadius1 = "Radius around the player that defines the maximum range in which the Sprinkles objects will appear."
SpawnRadius2 = "Radius around the player that defines the maximum range in which the Sprinkles objects will appear."
SpawnRadius3 = "Radius around the player that defines the maximum range in which the Sprinkles objects will appear."
SpawnRadius4 = "Radius around the player that defines the maximum range in which the Sprinkles objects will appear."
SpawnRadius5 = "Radius around the player that defines the maximum range in which the Sprinkles objects will appear."
SpawnRadius6 = "Radius around the player that defines the maximum range in which the Sprinkles objects will appear."
SpawnRadius7 = "Radius around the player that defines the maximum range in which the Sprinkles objects will appear."
SpawnSound = "The path to any .wav file may be entered here. This sound file will be played when the Spawner object is triggered."
SpecialAttachment = "This property is no longer supported"
SpecialFXStuff = "Subset of properties that define the light effects of the SearchLight object."
Speed = "Speed of the object's movement in game units per second."
Speed0 = "Speed of the orbiting objects in DEdit units per second."
Speed1 = "Speed of the orbiting objects in DEdit units per second."
Speed2 = "Speed of the orbiting objects in DEdit units per second."
Speed3 = "Speed of the orbiting objects in DEdit units per second."
Speed4 = "Speed of the orbiting objects in DEdit units per second."
Speed5 = "Speed of the orbiting objects in DEdit units per second."
Speed6 = "Speed of the orbiting objects in DEdit units per second."
Speed7 = "Speed of the orbiting objects in DEdit units per second."
SpinDownSound = "The path to any .wav file may be entered here. The sound will be played in a loop while the object is spinning at speed."
SpinUpSound = "The path to any .wav file may be entered here. The sound will be played in a loop while the object is spinning up to speed."
SpotMessage = "The message that is sent when the object spots an enemy."
SpotTarget = "The recipient of the SpotMessage."
SpriteAdditive = "Use additive blending. Additive blending adds the color values of overlaying surfaces, resulting in a brighter color."
SpriteFile = "The .spr file that will be used as the flare for the SearchLight."
SpriteOffset = "Offset away from the ScaleSprites position along the ScaleSprites forward facing vector, that the sprite for the BlindingFlare is created."
SpriteSurfaceName = "PolyGrids can use any sprite as a texture. This is where you enter the sprite's name."
StartActive = "Object will start in its active (i.e., ON) state."
StartCommand = "Command string that is sent when the timer begins its count down."
StartDialogueTriggerMsg1 = "A message sent at the beginning of the individual line of dialogue."
StartDialogueTriggerMsg2 = "A message sent at the beginning of the individual line of dialogue."
StartDialogueTriggerMsg3 = "A message sent at the beginning of the individual line of dialogue."
StartDialogueTriggerMsg4 = "A message sent at the beginning of the individual line of dialogue."
StartDialogueTriggerMsg5 = "A message sent at the beginning of the individual line of dialogue."
StartDialogueTriggerMsg6 = "A message sent at the beginning of the individual line of dialogue."
StartDialogueTriggerMsg7 = "A message sent at the beginning of the individual line of dialogue."
StartDialogueTriggerMsg8 = "A message sent at the beginning of the individual line of dialogue."
StartDialogueTriggerMsg9 = "A message sent at the beginning of the individual line of dialogue."
StartDialogueTriggerMsg10 = "A message sent at the beginning of the individual line of dialogue."
StartDialogueTriggerMsg11 = "A message sent at the beginning of the individual line of dialogue."
StartDialogueTriggerMsg12 = "A message sent at the beginning of the individual line of dialogue."
StartDialogueTriggerMsg13 = "A message sent at the beginning of the individual line of dialogue."
StartDialogueTriggerMsg14 = "A message sent at the beginning of the individual line of dialogue."
StartDialogueTriggerMsg15 = "A message sent at the beginning of the individual line of dialogue."
StartDialogueTriggerMsg16 = "A message sent at the beginning of the individual line of dialogue."
StartDialogueTriggerMsg17 = "A message sent at the beginning of the individual line of dialogue."
StartDialogueTriggerMsg18 = "A message sent at the beginning of the individual line of dialogue."
StartDialogueTriggerMsg19 = "A message sent at the beginning of the individual line of dialogue."
StartDialogueTriggerMsg20 = "A message sent at the beginning of the individual line of dialogue."
StartDialogueTriggerTarget1 = "Object that should receive the StartDialogueTriggerMessage."
StartDialogueTriggerTarget2 = "Object that should receive the StartDialogueTriggerMessage."
StartDialogueTriggerTarget3 = "Object that should receive the StartDialogueTriggerMessage."
StartDialogueTriggerTarget4 = "Object that should receive the StartDialogueTriggerMessage."
StartDialogueTriggerTarget5 = "Object that should receive the StartDialogueTriggerMessage."
StartDialogueTriggerTarget6 = "Object that should receive the StartDialogueTriggerMessage."
StartDialogueTriggerTarget7 = "Object that should receive the StartDialogueTriggerMessage."
StartDialogueTriggerTarget8 = "Object that should receive the StartDialogueTriggerMessage."
StartDialogueTriggerTarget9 = "Object that should receive the StartDialogueTriggerMessage."
StartDialogueTriggerTarget10 = "Object that should receive the StartDialogueTriggerMessage."
StartDialogueTriggerTarget11 = "Object that should receive the StartDialogueTriggerMessage."
StartDialogueTriggerTarget12 = "Object that should receive the StartDialogueTriggerMessage."
StartDialogueTriggerTarget13 = "Object that should receive the StartDialogueTriggerMessage."
StartDialogueTriggerTarget14 = "Object that should receive the StartDialogueTriggerMessage."
StartDialogueTriggerTarget15 = "Object that should receive the StartDialogueTriggerMessage."
StartDialogueTriggerTarget16 = "Object that should receive the StartDialogueTriggerMessage."
StartDialogueTriggerTarget17 = "Object that should receive the StartDialogueTriggerMessage."
StartDialogueTriggerTarget18 = "Object that should receive the StartDialogueTriggerMessage."
StartDialogueTriggerTarget19 = "Object that should receive the StartDialogueTriggerMessage."
StartDialogueTriggerTarget20 = "Object that should receive the StartDialogueTriggerMessage."
StartingValue = "Base value that the object will start with."
StartOn = "Object begins active."
StartOpen = "The object will begin in the Open position."
StartPaused = "This flag works in conjunction with the StartActive flag. This flag will tell the KeyFramer to begin in the paused state if active."
StartReactions = "A subset of properties which can specify AI reactions to certain stimuli. Also contains toggles allowing the object to exist or not exist in different game types."
StartScale = "Size of the particle at its creation point. The value entered in this field is a multiplier relative to the ParticleRadius value."
StartSound = "First sound the object plays when it receives an ON message."
StateFlags = "Subset of properties that define the object's interaction with the player."
SteamFXName = "Type of steam desired. Properties are defined in the fx.txt attribute file."
StopSound = "If it is ON, the object plays this sound when it receives an OFF message."
Subdivide = "Overrides the T-Junction fixing so that it doesn't split up this brush."
SurfaceAlpha = "The translucency of the grid as a whole. If you want to use a texture without an alpha mask or fine-tune the alpha for a texture that does have an alpha mask, this is a useful property. A value of 1 is fully opaque, .5 is half-translucent and 0 is transparent."
SurfaceColor1 = "If there's no texture, you can have it blend between two colors based on height. SurfaceColor1 and SurfaceColor2 each bring up the color picker dialog to let you choose your two colors."
SurfaceColor2 = "If there's no texture, you can have it blend between two colors based on height. SurfaceColor1 and SurfaceColor2 each bring up the color picker dialog to let you choose your two colors."
SurfaceHeight = "Turbulence of a polygrid surface. Ranges from 0 (flat) on up."
SurfaceOverride = "This field overrides the surface flags assigned to the textures on the object. This is particularly useful in correcting any unwanted behavior resulting from a brush having multiple textures with differing surface flags applied."
SurfaceStuff = "Subset of properties that define the appearance of the surface of a Volume Brush."
SweepPauseTime = "Delay in seconds at the end of a sweep motion before beginning a sweep back along the same path."
Target = "Keyframed object the SearchLight will track."
Target0 = "The name of an object you wish to control. Valid commands:\r\n\r\nFADE <ALPHA (0-1)|COLOR (0-255 0-255 0-255)> <duration (seconds)> [wave type LINEAR|SINE|SLOWOFF|SLOWON (default is SINE)]\r\nFades to the destination value over time. Examples:\r\nFADE ALPHA .5 4 SINE\r\nFADE COLOR (111 0 111) 9 LINEAR\r\n\r\nFLICKER <interval min> <interval max> <message to send> [count, default -1 (forever)]\r\nSends trigger message in a random time. Examples:\r\nFLICKER 5 10 (Some message to send)\r\nFLICKER 3 3 (Some message to send) 10"
Target1 = "The name of an object you wish to control. Valid commands:\r\n\r\nFADE <ALPHA (0-1)|COLOR (0-255 0-255 0-255)> <duration (seconds)> [wave type LINEAR|SINE|SLOWOFF|SLOWON (default is SINE)]\r\nFades to the destination value over time. Examples:\r\nFADE ALPHA .5 4 SINE\r\nFADE COLOR (111 0 111) 9 LINEAR\r\n\r\nFLICKER <interval min> <interval max> <message to send> [count, default -1 (forever)]\r\nSends trigger message in a random time. Examples:\r\nFLICKER 5 10 (Some message to send)\r\nFLICKER 3 3 (Some message to send) 10"
Target2 = "The name of an object you wish to control. Valid commands:\r\n\r\nFADE <ALPHA (0-1)|COLOR (0-255 0-255 0-255)> <duration (seconds)> [wave type LINEAR|SINE|SLOWOFF|SLOWON (default is SINE)]\r\nFades to the destination value over time. Examples:\r\nFADE ALPHA .5 4 SINE\r\nFADE COLOR (111 0 111) 9 LINEAR\r\n\r\nFLICKER <interval min> <interval max> <message to send> [count, default -1 (forever)]\r\nSends trigger message in a random time. Examples:\r\nFLICKER 5 10 (Some message to send)\r\nFLICKER 3 3 (Some message to send) 10"
Target3 = "The name of an object you wish to control. Valid commands:\r\n\r\nFADE <ALPHA (0-1)|COLOR (0-255 0-255 0-255)> <duration (seconds)> [wave type LINEAR|SINE|SLOWOFF|SLOWON (default is SINE)]\r\nFades to the destination value over time. Examples:\r\nFADE ALPHA .5 4 SINE\r\nFADE COLOR (111 0 111) 9 LINEAR\r\n\r\nFLICKER <interval min> <interval max> <message to send> [count, default -1 (forever)]\r\nSends trigger message in a random time. Examples:\r\nFLICKER 5 10 (Some message to send)\r\nFLICKER 3 3 (Some message to send) 10"
Target4 = "The name of an object you wish to control. Valid commands:\r\n\r\nFADE <ALPHA (0-1)|COLOR (0-255 0-255 0-255)> <duration (seconds)> [wave type LINEAR|SINE|SLOWOFF|SLOWON (default is SINE)]\r\nFades to the destination value over time. Examples:\r\nFADE ALPHA .5 4 SINE\r\nFADE COLOR (111 0 111) 9 LINEAR\r\n\r\nFLICKER <interval min> <interval max> <message to send> [count, default -1 (forever)]\r\nSends trigger message in a random time. Examples:\r\nFLICKER 5 10 (Some message to send)\r\nFLICKER 3 3 (Some message to send) 10"
Target5 = "The name of an object you wish to control. Valid commands:\r\n\r\nFADE <ALPHA (0-1)|COLOR (0-255 0-255 0-255)> <duration (seconds)> [wave type LINEAR|SINE|SLOWOFF|SLOWON (default is SINE)]\r\nFades to the destination value over time. Examples:\r\nFADE ALPHA .5 4 SINE\r\nFADE COLOR (111 0 111) 9 LINEAR\r\n\r\nFLICKER <interval min> <interval max> <message to send> [count, default -1 (forever)]\r\nSends trigger message in a random time. Examples:\r\nFLICKER 5 10 (Some message to send)\r\nFLICKER 3 3 (Some message to send) 10"
Target6 = "The name of an object you wish to control. Valid commands:\r\n\r\nFADE <ALPHA (0-1)|COLOR (0-255 0-255 0-255)> <duration (seconds)> [wave type LINEAR|SINE|SLOWOFF|SLOWON (default is SINE)]\r\nFades to the destination value over time. Examples:\r\nFADE ALPHA .5 4 SINE\r\nFADE COLOR (111 0 111) 9 LINEAR\r\n\r\nFLICKER <interval min> <interval max> <message to send> [count, default -1 (forever)]\r\nSends trigger message in a random time. Examples:\r\nFLICKER 5 10 (Some message to send)\r\nFLICKER 3 3 (Some message to send) 10"
Target7 = "The name of an object you wish to control. Valid commands:\r\n\r\nFADE <ALPHA (0-1)|COLOR (0-255 0-255 0-255)> <duration (seconds)> [wave type LINEAR|SINE|SLOWOFF|SLOWON (default is SINE)]\r\nFades to the destination value over time. Examples:\r\nFADE ALPHA .5 4 SINE\r\nFADE COLOR (111 0 111) 9 LINEAR\r\n\r\nFLICKER <interval min> <interval max> <message to send> [count, default -1 (forever)]\r\nSends trigger message in a random time. Examples:\r\nFLICKER 5 10 (Some message to send)\r\nFLICKER 3 3 (Some message to send) 10"
TargetDelay = "The object waits this many seconds after a target is detected before taking action."
TargetMessage0 = "Command strings that will be sent to their corresponding targets entered in the TargetName field."
TargetMessage1 = "Command strings that will be sent to their corresponding targets entered in the TargetName field."
TargetName = "Object that the keyframed objects should always 'target.'  In other words, the keyframed objects will always align their forward (blue) vector towards the object specified by TargetName (even if the target object moves).\r\n\r\n(See the TargetOffset property)"
TargetName1 = "Object to which the MessageName command string will be sent."
TargetName2 = "Object to which the MessageName command string will be sent."
TargetName3 = "Object to which the MessageName command string will be sent."
TargetName4 = "Object to which the MessageName command string will be sent."
TargetName5 = "Object to which the MessageName command string will be sent."
TargetName6 = "Object to which the MessageName command string will be sent."
TargetName7 = "Object to which the MessageName command string will be sent."
TargetName8 = "Object to which the MessageName command string will be sent."
TargetName9 = "Object to which the MessageName command string will be sent."
TargetName10 = "Object to which the MessageName command string will be sent."
TargetOffset = "This is only used if TargetName is specified.  This is an offset from the Target object's position, that the keyframed objects will 'point' at.\r\n\r\n(See the TargetName property)"
TargetTimeOut = "The object waits this many seconds when there are no valid targets before going idle."
TerrainOccluder = "This brush is a TerrainOccluder. A TerrainOccluder is a brush used to block visibility. It acts as a 'vis hotel'. The vis goes in, but it doesn't come out."
Texture = "The .dtx file to be used as the texture for the Lightning bolt."
TextureName = "Texture that is to be applied to the generated particles."
Time = "This property is no longer supported."
TimedTrigger = "Trigger object will continue to send its messages repeatedly based on the minimum and maximum times set in the MinTriggerTime and MaxTriggerTime fields."
TimeOfDay= "This property is no longer supported."
TimeStamp = "Time that it takes for the KeyFramer to get to this key from the previous key in the key path."
TintColor = "Tint for the player's view to make the area look as if it's filled with light or liquid."
TotalPathTime = "If this value is non-zero, the keyframer will ignore the values specified in the individual Keys and use the TotalPathTime to determine the movement/rotation speeds.\r\n\r\nNOTE:  The TotalPathTime is the LINEAR time to complete the path.  If SINE, SLOWON, or SLOWOFF is specified, the ACTUAL time to complete the path will be somewhat different then the TotalPathTime.\r\n\r\n(See the Key object)"
TouchActivate = "Object is activated when touched by the player."
TouchSound = "The .wav file to play when the player touches the Prop."
TouchSoundRadius = "Audible falloff radius of the TouchSound as measured in Dedit units."
Translucent = "If bound to a WorldModel, this brush will use the alpha channel of an applied texture to set its transparent properties."
TriggerClose = "Player can activate the object by pressing the use key."
TriggerMessage = "Command string that will be sent to the TriggerTarget at level load time."
TriggerTarget = "Object that will receive the TriggerMessage command string."
TriggerTouch = "This property is no longer supported."
Type = "What type of prop is placed. Prop types are defined in the proptypes.txt attribute file."
UseAwakeSound = "Play a sound when waking up."
UseCover = "The AI will use cover nodes."
UseDetectSound = "Play a sound when detecting an object."
UseLightAnims = "Light animations will be calculated and shadows will be cast as the light flickers."
UseObjectAngle = "This property is not used and is always set to true."
UseShadowMaps = "Takes WAY less memory but is slightly more expensive at runtime and has jaggier edges than normal lightmaps. Set this to TRUE whenever possible."
VertexTintColor = "This color is applied to all polygon vertices, effectively tinting the entire world."
VFog = "Use volumetric fog. Note that FogEnable must be True for VFog to work."
VFogDensity = "Density of the volumetric fog."
VFogInfo = "Subset of properties that define the properties of Vfog in the level. Vfog is fog along an axis like ground fog or a high cloud layer."
VFogMax = "Number 0 to 255 that sets the maximum fog value.  This can be used to prevent it from fully saturating the fog.  This is very useful if you want to have dense fog but still want to be able to see stuff in the distance."
VFogMaxY = "The Y coordinate value specifying the top of the fog area."
VFogMaxYVal = "This sets what the fog is at (and above) VFogMaxY."
VFogMinY = "The Y coordinate value specifying the bottom of the fog area."
VFogMinYVal = "This is a number that is between 0 and 255 and sets what the fog value is at."
VisBlocker = "Tell the processor that this brush is a VisBlocker brush. VisBlockers are zero thickness brushes that block vis no matter what."
Viscosity = "This value affects the resistance of the players movement through the volume."
Visible = "The object is visible."
VisualRange = "How far the object can see."
Volume = "How loud the sound is at its origin point, expressed as a percentage."
Waveform = "Subset of properties that define the motion of the object."
WeightedTrigger = "This property is no longer supported."
WhoPlaysDecisions1 = "When decision IDs are specified, the corresponding sound files will play in the player's head by default. This field allows you to specify a different speaker. You'll need to specify a speaker for each decision ID. For example, if Decisions5 lists, '6001;6002', WhoPlaysDecisions5 would need to be 'Matilda;Matilda' if you wanted Matilda to speak the answer."
WhoPlaysDecisions2 = "When decision IDs are specified, the corresponding sound files will play in the player's head by default. This field allows you to specify a different speaker. You'll need to specify a speaker for each decision ID. For example, if Decisions5 lists, '6001;6002', WhoPlaysDecisions5 would need to be 'Matilda;Matilda' if you wanted Matilda to speak the answer."
WhoPlaysDecisions3 = "When decision IDs are specified, the corresponding sound files will play in the player's head by default. This field allows you to specify a different speaker. You'll need to specify a speaker for each decision ID. For example, if Decisions5 lists, '6001;6002', WhoPlaysDecisions5 would need to be 'Matilda;Matilda' if you wanted Matilda to speak the answer."
WhoPlaysDecisions4 = "When decision IDs are specified, the corresponding sound files will play in the player's head by default. This field allows you to specify a different speaker. You'll need to specify a speaker for each decision ID. For example, if Decisions5 lists, '6001;6002', WhoPlaysDecisions5 would need to be 'Matilda;Matilda' if you wanted Matilda to speak the answer."
WhoPlaysDecisions5 = "When decision IDs are specified, the corresponding sound files will play in the player's head by default. This field allows you to specify a different speaker. You'll need to specify a speaker for each decision ID. For example, if Decisions5 lists, '6001;6002', WhoPlaysDecisions5 would need to be 'Matilda;Matilda' if you wanted Matilda to speak the answer."
WhoPlaysDecisions6 = "When decision IDs are specified, the corresponding sound files will play in the player's head by default. This field allows you to specify a different speaker. You'll need to specify a speaker for each decision ID. For example, if Decisions5 lists, '6001;6002', WhoPlaysDecisions5 would need to be 'Matilda;Matilda' if you wanted Matilda to speak the answer."
WhoPlaysDecisions7 = "When decision IDs are specified, the corresponding sound files will play in the player's head by default. This field allows you to specify a different speaker. You'll need to specify a speaker for each decision ID. For example, if Decisions5 lists, '6001;6002', WhoPlaysDecisions5 would need to be 'Matilda;Matilda' if you wanted Matilda to speak the answer."
WhoPlaysDecisions8 = "When decision IDs are specified, the corresponding sound files will play in the player's head by default. This field allows you to specify a different speaker. You'll need to specify a speaker for each decision ID. For example, if Decisions5 lists, '6001;6002', WhoPlaysDecisions5 would need to be 'Matilda;Matilda' if you wanted Matilda to speak the answer."
WhoPlaysDecisions9 = "When decision IDs are specified, the corresponding sound files will play in the player's head by default. This field allows you to specify a different speaker. You'll need to specify a speaker for each decision ID. For example, if Decisions5 lists, '6001;6002', WhoPlaysDecisions5 would need to be 'Matilda;Matilda' if you wanted Matilda to speak the answer."
WhoPlaysDecisions10 = "When decision IDs are specified, the corresponding sound files will play in the player's head by default. This field allows you to specify a different speaker. You'll need to specify a speaker for each decision ID. For example, if Decisions5 lists, '6001;6002', WhoPlaysDecisions5 would need to be 'Matilda;Matilda' if you wanted Matilda to speak the answer."
WhoPlaysDecisions11 = "When decision IDs are specified, the corresponding sound files will play in the player's head by default. This field allows you to specify a different speaker. You'll need to specify a speaker for each decision ID. For example, if Decisions5 lists, '6001;6002', WhoPlaysDecisions5 would need to be 'Matilda;Matilda' if you wanted Matilda to speak the answer."
WhoPlaysDecisions12 = "When decision IDs are specified, the corresponding sound files will play in the player's head by default. This field allows you to specify a different speaker. You'll need to specify a speaker for each decision ID. For example, if Decisions5 lists, '6001;6002', WhoPlaysDecisions5 would need to be 'Matilda;Matilda' if you wanted Matilda to speak the answer."
WhoPlaysDecisions13 = "When decision IDs are specified, the corresponding sound files will play in the player's head by default. This field allows you to specify a different speaker. You'll need to specify a speaker for each decision ID. For example, if Decisions5 lists, '6001;6002', WhoPlaysDecisions5 would need to be 'Matilda;Matilda' if you wanted Matilda to speak the answer."
WhoPlaysDecisions14 = "When decision IDs are specified, the corresponding sound files will play in the player's head by default. This field allows you to specify a different speaker. You'll need to specify a speaker for each decision ID. For example, if Decisions5 lists, '6001;6002', WhoPlaysDecisions5 would need to be 'Matilda;Matilda' if you wanted Matilda to speak the answer."
WhoPlaysDecisions15 = "When decision IDs are specified, the corresponding sound files will play in the player's head by default. This field allows you to specify a different speaker. You'll need to specify a speaker for each decision ID. For example, if Decisions5 lists, '6001;6002', WhoPlaysDecisions5 would need to be 'Matilda;Matilda' if you wanted Matilda to speak the answer."
WhoPlaysDecisions16 = "When decision IDs are specified, the corresponding sound files will play in the player's head by default. This field allows you to specify a different speaker. You'll need to specify a speaker for each decision ID. For example, if Decisions5 lists, '6001;6002', WhoPlaysDecisions5 would need to be 'Matilda;Matilda' if you wanted Matilda to speak the answer."
WhoPlaysDecisions17 = "When decision IDs are specified, the corresponding sound files will play in the player's head by default. This field allows you to specify a different speaker. You'll need to specify a speaker for each decision ID. For example, if Decisions5 lists, '6001;6002', WhoPlaysDecisions5 would need to be 'Matilda;Matilda' if you wanted Matilda to speak the answer."
WhoPlaysDecisions18 = "When decision IDs are specified, the corresponding sound files will play in the player's head by default. This field allows you to specify a different speaker. You'll need to specify a speaker for each decision ID. For example, if Decisions5 lists, '6001;6002', WhoPlaysDecisions5 would need to be 'Matilda;Matilda' if you wanted Matilda to speak the answer."
WhoPlaysDecisions19 = "When decision IDs are specified, the corresponding sound files will play in the player's head by default. This field allows you to specify a different speaker. You'll need to specify a speaker for each decision ID. For example, if Decisions5 lists, '6001;6002', WhoPlaysDecisions5 would need to be 'Matilda;Matilda' if you wanted Matilda to speak the answer."
WhoPlaysDecisions20 = "When decision IDs are specified, the corresponding sound files will play in the player's head by default. This field allows you to specify a different speaker. You'll need to specify a speaker for each decision ID. For example, if Decisions5 lists, '6001;6002', WhoPlaysDecisions5 would need to be 'Matilda;Matilda' if you wanted Matilda to speak the answer."
WhoPlaysDialogue1 = "The unique name of the character that is to speak the line of dialogue."
WhoPlaysDialogue2 = "The unique name of the character that is to speak the line of dialogue."
WhoPlaysDialogue3 = "The unique name of the character that is to speak the line of dialogue."
WhoPlaysDialogue4 = "The unique name of the character that is to speak the line of dialogue."
WhoPlaysDialogue5 = "The unique name of the character that is to speak the line of dialogue."
WhoPlaysDialogue6 = "The unique name of the character that is to speak the line of dialogue."
WhoPlaysDialogue7 = "The unique name of the character that is to speak the line of dialogue."
WhoPlaysDialogue8 = "The unique name of the character that is to speak the line of dialogue."
WhoPlaysDialogue9 = "The unique name of the character that is to speak the line of dialogue."
WhoPlaysDialogue10 = "The unique name of the character that is to speak the line of dialogue."
WhoPlaysDialogue11 = "The unique name of the character that is to speak the line of dialogue."
WhoPlaysDialogue12 = "The unique name of the character that is to speak the line of dialogue."
WhoPlaysDialogue13 = "The unique name of the character that is to speak the line of dialogue."
WhoPlaysDialogue14 = "The unique name of the character that is to speak the line of dialogue."
WhoPlaysDialogue15 = "The unique name of the character that is to speak the line of dialogue."
WhoPlaysDialogue16 = "The unique name of the character that is to speak the line of dialogue."
WhoPlaysDialogue17 = "The unique name of the character that is to speak the line of dialogue."
WhoPlaysDialogue18 = "The unique name of the character that is to speak the line of dialogue."
WhoPlaysDialogue19 = "The unique name of the character that is to speak the line of dialogue."
WhoPlaysDialogue20 = "The unique name of the character that is to speak the line of dialogue."
WidthInfo = "Subset of properties that further define the appearance of the Lightning bolt created by the Lightning object."
Wind = "This allows you to set up a current of wind that is constant throughout the level. It works the same as the Current property in VolumeBrushes."
Window1 = "A close-caption window appears when this dialogue plays."
Window2 = "A close-caption window appears when this dialogue plays."
Window3 = "A close-caption window appears when this dialogue plays."
Window4 = "A close-caption window appears when this dialogue plays."
Window5 = "A close-caption window appears when this dialogue plays."
Window6 = "A close-caption window appears when this dialogue plays."
Window7 = "A close-caption window appears when this dialogue plays."
Window8 = "A close-caption window appears when this dialogue plays."
Window9 = "A close-caption window appears when this dialogue plays."
Window10 = "A close-caption window appears when this dialogue plays."
Window11 = "A close-caption window appears when this dialogue plays."
Window12 = "A close-caption window appears when this dialogue plays."
Window13 = "A close-caption window appears when this dialogue plays."
Window14 = "A close-caption window appears when this dialogue plays."
Window15 = "A close-caption window appears when this dialogue plays."
Window16 = "A close-caption window appears when this dialogue plays."
Window17 = "A close-caption window appears when this dialogue plays."
Window18 = "A close-caption window appears when this dialogue plays."
Window19 = "A close-caption window appears when this dialogue plays."
Window20 = "A close-caption window appears when this dialogue plays."
XAxisRevTime = "Time in seconds that it takes the object to make one full rotation on the X-axis."
XAxisSpinDownTime = "Time in seconds that it takes the object to spin down to a complete stop."
XAxisSpinUpTime = "Time in seconds that it takes the object to accelerate to full speed."
XPan = "If the PolyGrid is textured, you can enter a panning speed here to have the texture pan along the PolyGrid's X-axis. Speed is in game units/second. Typical values would be from –20 to 20 for fairly fast speed and –5 to 5 for slow."
XRotateForward = "The object rotates forward along the X axis, rather than backwards."
XScaleDuration = "Length of time the PolyGrid will take to scale between XScaleMin and XScaleMax."
XScaleMax = "Maximum texture scale on the PolyGrid. See XScaleMin."
XScaleMin = "Minimum value to which the texture used on the PolyGrid will scale. This allows you to have the texture on the PolyGrid swim up and down in size."
Yaw1 = "Number of degrees the SearchLight will rotate in the negative direction."
Yaw1PauseTime = "How long the SearchLight pauses at the extent of rotation defined by Yaw1 before continuing."
Yaw2 = "Number of degrees the SearchLight will rotate in the positive direction."
Yaw2PauseTime = "How long the SearchLight pauses at the extent of rotation defined by Yaw2 before continuing."
YawDelta = "Number of degrees the breakable will Yaw while shaking."
YawTime = "Amount of time it takes to complete the rotation from Yaw1 to Yaw2."
YAxisRevTime = "Amount of time in seconds that it takes the object to make one full rotation on the Y-axis."
YAxisSpinDownTime = "Amount of time in seconds that it takes the object to spin down to a complete stop."
YAxisSpinUpTime = "Amount of time in seconds that it takes the object to accelerate to full speed."
YPan = "See XPan."
YRotateForward = "The object rotates forward along the Y axis, rather than backwards."
YScaleDuration = "See XScaleDuration."
YScaleMax = "See XscaleMax."
YScaleMin = "Minimum value to which the texture used on the PolyGrid will scale. This allows you to have the texture on the PolyGrid swim up and down in size."
ZAxisRevTime = "Time in seconds that it takes the object to make one full rotation on the Z-axis."
ZAxisSpinDownTime = "Time in seconds that it takes the object to spin down to a complete stop."
ZAxisSpinUpTime = "Time in seconds that it takes the object to accelerate to full speed."
ZBias = "Helps some sprites to not clip into world geometry as much."
ZRotateForward = "The object rotates forward along the Z axis, rather than backwards."

[AIAlien]
SoundRadius = "Overrides the radius of Dialogue sounds spoken by this AI."

[AICorporate]
SoundRadius = "Overrides the radius of Dialogue sounds spoken by this AI."

[AIExosuit]
SoundRadius = "Overrides the radius of Dialogue sounds spoken by this AI."

[AIMarine]
SoundRadius = "Overrides the radius of Dialogue sounds spoken by this AI."

[AIPredator]
SoundRadius = "Overrides the radius of Dialogue sounds spoken by this AI."

[CinematicTrigger]
AIInterruptible = "If an AI sees the player while the camera is on, the camera will automaticly shut itself off"
LeaveCameraOnWhenDone = "Camera remains on when you turn it off"

[ClientLightFX]
CastShadowsFlag = "Not used by this object. Set UseLightAnims=False to prevent the object from casting shadows."
UseShadowMaps = "Takes WAY less memory but is slightly more expensive at runtime and has jaggier edges than normal lightmaps. Set this to TRUE whenever possible. UseLightAnims must be True for this property to function."

[BodyProp]
CharacterType = "What character model you want to place"

[Breakable]
TearSound = "This property is no longer supported"

[GenericObject]
Name = "This game object is not supported"
Pos = "This game object is not supported"
Rotation = "This game object is not supported"
ObjectType = "This game object is not supported"
LightRadius = "This game object is not supported"
FileName = "This game object is not supported"
Skin = "This game object is not supported"
Skin2 = "This game object is not supported"
R = "This game object is not supported"
G = "This game object is not supported"
B = "This game object is not supported"
A = "This game object is not supported"

[Key]
LightFrames = "Number of frames of light animation to create along the path to this key from the previous key in the key path."

[Ladder]
Additive = "This property is not used for this object."
Frequency = "This property is not used for this object."
Multiply = "This property is not used for this object."
PanWithCurrent = "This property is not used for this object."
SurfaceStuff = "This property subset is not used for this object."
XPan = "This property is not used for this object."
YPan = "This property is not used for this object."

[LaserTrigger]
Alpha = "Opacity of the laser trip wire, from 0 (invisible) to 1 (opaque)."
Color = "Color of the laser trip wire."

[LightGroup]
OnlyLightWorldFlag = "Since the LightGroup object itself does not light geometry, setting this property to True will effectively turn off the LightGroup's light, though any Lights bound to the LightGroup will still function normally."
Waveform = "The wave form that determines how the light cyles between IntensityMin, and IntensityMax. Here are some of the valid values:\r\n\r\n0: No waveform, light will not cycle.\r\n1: Square waveform--Light will cycle instantly between Min to Max values.\r\n2: Saw waveform--Light will cycle from Min to Max along linear values.\r\n3: Ramp Up--Light will ramp up from Min to Max values and then reset directly to Min.\r\n4: Ramp Down--Light will ramp down from Max to Min values and then reset to Max.\r\n5: Sine--Light value follows a Sine wave path between Min and Max.\r\n6: Flicker 1--Light follows a flicker pattern that only has Min and Max values.\r\n7: Flicker 2--Light follows a more 'organic' flicker pattern.\r\n8: Flicker 3--Mostly on flicker -- good for flaky fluorescents.\r\n9: Flicker 4--Mostly off flicker -- good for really flaky fluorescents.\r\n10: Strobe--Light pulses from Max to Min.\r\n11: Search--Light follows a Sine pattern with some wait time in the Min state."

[Lightning]
AlphaLifetime = "Number of seconds it takes to change between min and max alpha values."
Lifetime = "Number of seconds each lightning bolt remains visible on the screen (note that if AlphaLifetime is shorter and AlphaEnd=0, the bolt will only be visible for the AlphaLifetime period)."
SoundRadius = "Audible falloff radius for the Lightning sound measured in DEdit units. Note that the origin for this radius begins at the bolt's midpoint. Also, there are two sound components which operate slightly differently. The rumbling thunder sound is governed by SoundRadius. The sharp crashing is limited by SoundRadius but also by the console variables LightningLoudRadius and LightningDelayRadius."

[PolyGrid]
Color1 = "If there's no texture, you can have it blend between two colors based on height. Color1 and Color2 each bring up the color picker dialog to let you choose your two colors."
Color2 = "If there's no texture, you can have it blend between two colors based on height. Color1 and Color2 each bring up the color picker dialog to let you choose your two colors."

[Prop]
DetailLevel = "Game detail level in which this prop will appear. For instance if you placed a Prop object and set its DetailLevel to medium, the prop would only appear if the in game detail settings were at medium or greater. A machine set to low detail would not see this object in the game."

[ScaleSprite]
Color = "This color tints the color of the sprite."

[SoundFXObj]
Sound = "Sound effect the object plays. These are defined in the SoundButes.txt attribute file."

[StarLightView]
Color = "Color of this object's box representation in DEdit. No effect in-game."
OnlyLightWorldFlag = "Since the StarLightView object itself does not light models, this property has no effect."

[StaticSunLight]
OuterColor = "Color of the light used to shade terrain brush faces if they face away from the StaticSunLight. Useful if you want to have a level shaded by moonlight, where there is a high ambient color level. In that case you would use a high white-blue for InnerColor and a dark blue for OuterColor. For no shading, leave this value set to black."

[Trigger]
MessageTouch = "This is a list of messages to send to the object who touched the trigger.  You don't need to specify the object or 'msg' keyword in this property.  Here is an example: 'hitnode torso_node; damage 1000'"
AITriggerable = "An AI's bounding box intersecting that of the Trigger will activate it."
MaxTriggerTime = "If the trigger's TimedTrigger flag is set to true, this value will set the longest delay before the trigger fires."
MinTriggerTime = "If the trigger's TimedTrigger flag is set to true, this value will set the shortest delay before the trigger fires."
SendDelay = "Number of seconds between the time the Trigger object receives a trigger message and when it sends its command strings."
Targets = "Subset of properties that define the objects to which the trigger object will send command strings, and the command strings that will be sent."
TriggerDelay = "Number of seconds before the Trigger object can be activated again once it has been activated."

[VolumeBrush]
Frequency = "Rate of the SurfaceHeight wave action. Larger numbers are faster."

[Weather]
SurfaceStuff = "This property subset does not apply to the Weather object."

[WorldProperties]
LMAnimStatic = "This flag was introduced to increase performance under certain conditions relating to the use of light map animations. If your level contains light animations that are turning on and off more than they are remaining in one state or the other, set this flag to false."